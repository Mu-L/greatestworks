// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/gateway.proto

package gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "greatestworks/internal/proto/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 认证类型枚举
type AuthType int32

const (
	AuthType_AUTH_TYPE_UNSPECIFIED AuthType = 0
	AuthType_AUTH_TYPE_PASSWORD    AuthType = 1 // 密码认证
	AuthType_AUTH_TYPE_OAUTH       AuthType = 2 // OAuth认证
	AuthType_AUTH_TYPE_JWT         AuthType = 3 // JWT认证
	AuthType_AUTH_TYPE_GUEST       AuthType = 4 // 游客认证
	AuthType_AUTH_TYPE_FACEBOOK    AuthType = 5 // Facebook登录
	AuthType_AUTH_TYPE_GOOGLE      AuthType = 6 // Google登录
	AuthType_AUTH_TYPE_TWITTER     AuthType = 7 // Twitter登录
	AuthType_AUTH_TYPE_APPLE       AuthType = 8 // Apple登录
)

// Enum value maps for AuthType.
var (
	AuthType_name = map[int32]string{
		0: "AUTH_TYPE_UNSPECIFIED",
		1: "AUTH_TYPE_PASSWORD",
		2: "AUTH_TYPE_OAUTH",
		3: "AUTH_TYPE_JWT",
		4: "AUTH_TYPE_GUEST",
		5: "AUTH_TYPE_FACEBOOK",
		6: "AUTH_TYPE_GOOGLE",
		7: "AUTH_TYPE_TWITTER",
		8: "AUTH_TYPE_APPLE",
	}
	AuthType_value = map[string]int32{
		"AUTH_TYPE_UNSPECIFIED": 0,
		"AUTH_TYPE_PASSWORD":    1,
		"AUTH_TYPE_OAUTH":       2,
		"AUTH_TYPE_JWT":         3,
		"AUTH_TYPE_GUEST":       4,
		"AUTH_TYPE_FACEBOOK":    5,
		"AUTH_TYPE_GOOGLE":      6,
		"AUTH_TYPE_TWITTER":     7,
		"AUTH_TYPE_APPLE":       8,
	}
)

func (x AuthType) Enum() *AuthType {
	p := new(AuthType)
	*p = x
	return p
}

func (x AuthType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[0].Descriptor()
}

func (AuthType) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[0]
}

func (x AuthType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthType.Descriptor instead.
func (AuthType) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{0}
}

// 服务器类型枚举
type ServerType int32

const (
	ServerType_SERVER_TYPE_UNSPECIFIED ServerType = 0
	ServerType_SERVER_TYPE_GAME        ServerType = 1 // 游戏服务器
	ServerType_SERVER_TYPE_CHAT        ServerType = 2 // 聊天服务器
	ServerType_SERVER_TYPE_MATCH       ServerType = 3 // 匹配服务器
	ServerType_SERVER_TYPE_BATTLE      ServerType = 4 // 战斗服务器
	ServerType_SERVER_TYPE_SOCIAL      ServerType = 5 // 社交服务器
	ServerType_SERVER_TYPE_TEST        ServerType = 6 // 测试服务器
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "SERVER_TYPE_UNSPECIFIED",
		1: "SERVER_TYPE_GAME",
		2: "SERVER_TYPE_CHAT",
		3: "SERVER_TYPE_MATCH",
		4: "SERVER_TYPE_BATTLE",
		5: "SERVER_TYPE_SOCIAL",
		6: "SERVER_TYPE_TEST",
	}
	ServerType_value = map[string]int32{
		"SERVER_TYPE_UNSPECIFIED": 0,
		"SERVER_TYPE_GAME":        1,
		"SERVER_TYPE_CHAT":        2,
		"SERVER_TYPE_MATCH":       3,
		"SERVER_TYPE_BATTLE":      4,
		"SERVER_TYPE_SOCIAL":      5,
		"SERVER_TYPE_TEST":        6,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[1].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[1]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{1}
}

// 服务器状态枚举
type ServerStatus int32

const (
	ServerStatus_SERVER_STATUS_UNSPECIFIED ServerStatus = 0
	ServerStatus_SERVER_STATUS_ONLINE      ServerStatus = 1 // 在线
	ServerStatus_SERVER_STATUS_OFFLINE     ServerStatus = 2 // 离线
	ServerStatus_SERVER_STATUS_MAINTENANCE ServerStatus = 3 // 维护中
	ServerStatus_SERVER_STATUS_FULL        ServerStatus = 4 // 已满
	ServerStatus_SERVER_STATUS_RESTRICTED  ServerStatus = 5 // 受限制
)

// Enum value maps for ServerStatus.
var (
	ServerStatus_name = map[int32]string{
		0: "SERVER_STATUS_UNSPECIFIED",
		1: "SERVER_STATUS_ONLINE",
		2: "SERVER_STATUS_OFFLINE",
		3: "SERVER_STATUS_MAINTENANCE",
		4: "SERVER_STATUS_FULL",
		5: "SERVER_STATUS_RESTRICTED",
	}
	ServerStatus_value = map[string]int32{
		"SERVER_STATUS_UNSPECIFIED": 0,
		"SERVER_STATUS_ONLINE":      1,
		"SERVER_STATUS_OFFLINE":     2,
		"SERVER_STATUS_MAINTENANCE": 3,
		"SERVER_STATUS_FULL":        4,
		"SERVER_STATUS_RESTRICTED":  5,
	}
)

func (x ServerStatus) Enum() *ServerStatus {
	p := new(ServerStatus)
	*p = x
	return p
}

func (x ServerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[2].Descriptor()
}

func (ServerStatus) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[2]
}

func (x ServerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerStatus.Descriptor instead.
func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{2}
}

// 连接类型枚举
type ConnectionType int32

const (
	ConnectionType_CONNECTION_TYPE_UNSPECIFIED ConnectionType = 0
	ConnectionType_CONNECTION_TYPE_WEBSOCKET   ConnectionType = 1 // WebSocket连接
	ConnectionType_CONNECTION_TYPE_TCP         ConnectionType = 2 // TCP连接
	ConnectionType_CONNECTION_TYPE_HTTP        ConnectionType = 3 // HTTP连接
	ConnectionType_CONNECTION_TYPE_GRPC        ConnectionType = 4 // gRPC连接
)

// Enum value maps for ConnectionType.
var (
	ConnectionType_name = map[int32]string{
		0: "CONNECTION_TYPE_UNSPECIFIED",
		1: "CONNECTION_TYPE_WEBSOCKET",
		2: "CONNECTION_TYPE_TCP",
		3: "CONNECTION_TYPE_HTTP",
		4: "CONNECTION_TYPE_GRPC",
	}
	ConnectionType_value = map[string]int32{
		"CONNECTION_TYPE_UNSPECIFIED": 0,
		"CONNECTION_TYPE_WEBSOCKET":   1,
		"CONNECTION_TYPE_TCP":         2,
		"CONNECTION_TYPE_HTTP":        3,
		"CONNECTION_TYPE_GRPC":        4,
	}
)

func (x ConnectionType) Enum() *ConnectionType {
	p := new(ConnectionType)
	*p = x
	return p
}

func (x ConnectionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[3].Descriptor()
}

func (ConnectionType) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[3]
}

func (x ConnectionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionType.Descriptor instead.
func (ConnectionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{3}
}

// 用户等级枚举
type UserLevel int32

const (
	UserLevel_USER_LEVEL_UNSPECIFIED UserLevel = 0
	UserLevel_USER_LEVEL_GUEST       UserLevel = 1 // 游客
	UserLevel_USER_LEVEL_REGISTERED  UserLevel = 2 // 注册用户
	UserLevel_USER_LEVEL_VERIFIED    UserLevel = 3 // 认证用户
	UserLevel_USER_LEVEL_PREMIUM     UserLevel = 4 // 高级用户
	UserLevel_USER_LEVEL_VIP         UserLevel = 5 // VIP用户
	UserLevel_USER_LEVEL_ADMIN       UserLevel = 6 // 管理员
)

// Enum value maps for UserLevel.
var (
	UserLevel_name = map[int32]string{
		0: "USER_LEVEL_UNSPECIFIED",
		1: "USER_LEVEL_GUEST",
		2: "USER_LEVEL_REGISTERED",
		3: "USER_LEVEL_VERIFIED",
		4: "USER_LEVEL_PREMIUM",
		5: "USER_LEVEL_VIP",
		6: "USER_LEVEL_ADMIN",
	}
	UserLevel_value = map[string]int32{
		"USER_LEVEL_UNSPECIFIED": 0,
		"USER_LEVEL_GUEST":       1,
		"USER_LEVEL_REGISTERED":  2,
		"USER_LEVEL_VERIFIED":    3,
		"USER_LEVEL_PREMIUM":     4,
		"USER_LEVEL_VIP":         5,
		"USER_LEVEL_ADMIN":       6,
	}
)

func (x UserLevel) Enum() *UserLevel {
	p := new(UserLevel)
	*p = x
	return p
}

func (x UserLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[4].Descriptor()
}

func (UserLevel) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[4]
}

func (x UserLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserLevel.Descriptor instead.
func (UserLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{4}
}

// 服务健康状态枚举
type ServiceHealth int32

const (
	ServiceHealth_SERVICE_HEALTH_UNSPECIFIED ServiceHealth = 0
	ServiceHealth_SERVICE_HEALTH_HEALTHY     ServiceHealth = 1 // 健康
	ServiceHealth_SERVICE_HEALTH_DEGRADED    ServiceHealth = 2 // 降级
	ServiceHealth_SERVICE_HEALTH_UNHEALTHY   ServiceHealth = 3 // 不健康
	ServiceHealth_SERVICE_HEALTH_CRITICAL    ServiceHealth = 4 // 严重
)

// Enum value maps for ServiceHealth.
var (
	ServiceHealth_name = map[int32]string{
		0: "SERVICE_HEALTH_UNSPECIFIED",
		1: "SERVICE_HEALTH_HEALTHY",
		2: "SERVICE_HEALTH_DEGRADED",
		3: "SERVICE_HEALTH_UNHEALTHY",
		4: "SERVICE_HEALTH_CRITICAL",
	}
	ServiceHealth_value = map[string]int32{
		"SERVICE_HEALTH_UNSPECIFIED": 0,
		"SERVICE_HEALTH_HEALTHY":     1,
		"SERVICE_HEALTH_DEGRADED":    2,
		"SERVICE_HEALTH_UNHEALTHY":   3,
		"SERVICE_HEALTH_CRITICAL":    4,
	}
)

func (x ServiceHealth) Enum() *ServiceHealth {
	p := new(ServiceHealth)
	*p = x
	return p
}

func (x ServiceHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[5].Descriptor()
}

func (ServiceHealth) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[5]
}

func (x ServiceHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceHealth.Descriptor instead.
func (ServiceHealth) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{5}
}

// 会话状态枚举
type SessionStatus int32

const (
	SessionStatus_SESSION_STATUS_UNSPECIFIED SessionStatus = 0
	SessionStatus_SESSION_STATUS_ACTIVE      SessionStatus = 1 // 活跃
	SessionStatus_SESSION_STATUS_IDLE        SessionStatus = 2 // 空闲
	SessionStatus_SESSION_STATUS_EXPIRED     SessionStatus = 3 // 已过期
	SessionStatus_SESSION_STATUS_TERMINATED  SessionStatus = 4 // 已终止
	SessionStatus_SESSION_STATUS_SUSPENDED   SessionStatus = 5 // 已暂停
)

// Enum value maps for SessionStatus.
var (
	SessionStatus_name = map[int32]string{
		0: "SESSION_STATUS_UNSPECIFIED",
		1: "SESSION_STATUS_ACTIVE",
		2: "SESSION_STATUS_IDLE",
		3: "SESSION_STATUS_EXPIRED",
		4: "SESSION_STATUS_TERMINATED",
		5: "SESSION_STATUS_SUSPENDED",
	}
	SessionStatus_value = map[string]int32{
		"SESSION_STATUS_UNSPECIFIED": 0,
		"SESSION_STATUS_ACTIVE":      1,
		"SESSION_STATUS_IDLE":        2,
		"SESSION_STATUS_EXPIRED":     3,
		"SESSION_STATUS_TERMINATED":  4,
		"SESSION_STATUS_SUSPENDED":   5,
	}
)

func (x SessionStatus) Enum() *SessionStatus {
	p := new(SessionStatus)
	*p = x
	return p
}

func (x SessionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_gateway_proto_enumTypes[6].Descriptor()
}

func (SessionStatus) Type() protoreflect.EnumType {
	return &file_proto_gateway_proto_enumTypes[6]
}

func (x SessionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionStatus.Descriptor instead.
func (SessionStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{6}
}

// 认证请求
type AuthenticateRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Username        string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password        string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ClientId        string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientVersion   string                 `protobuf:"bytes,4,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	DeviceInfo      string                 `protobuf:"bytes,5,opt,name=device_info,json=deviceInfo,proto3" json:"device_info,omitempty"`
	AuthType        AuthType               `protobuf:"varint,6,opt,name=auth_type,json=authType,proto3,enum=greatestworks.gateway.AuthType" json:"auth_type,omitempty"`
	ThirdPartyToken string                 `protobuf:"bytes,7,opt,name=third_party_token,json=thirdPartyToken,proto3" json:"third_party_token,omitempty"` // 第三方登录token
	Metadata        map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_proto_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticateRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthenticateRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *AuthenticateRequest) GetDeviceInfo() string {
	if x != nil {
		return x.DeviceInfo
	}
	return ""
}

func (x *AuthenticateRequest) GetAuthType() AuthType {
	if x != nil {
		return x.AuthType
	}
	return AuthType_AUTH_TYPE_UNSPECIFIED
}

func (x *AuthenticateRequest) GetThirdPartyToken() string {
	if x != nil {
		return x.ThirdPartyToken
	}
	return ""
}

func (x *AuthenticateRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 认证响应
type AuthenticateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	AccessToken   string                 `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserProfile   *UserProfile           `protobuf:"bytes,7,opt,name=user_profile,json=userProfile,proto3" json:"user_profile,omitempty"`
	Permissions   []string               `protobuf:"bytes,8,rep,name=permissions,proto3" json:"permissions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	mi := &file_proto_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *AuthenticateResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *AuthenticateResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthenticateResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthenticateResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *AuthenticateResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthenticateResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthenticateResponse) GetUserProfile() *UserProfile {
	if x != nil {
		return x.UserProfile
	}
	return nil
}

func (x *AuthenticateResponse) GetPermissions() []string {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// 刷新Token请求
type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_proto_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 刷新Token响应
type RefreshTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	AccessToken   string                 `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,4,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_proto_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *RefreshTokenResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

// 登出请求
type LogoutRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	AccessToken   string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutRequest) Reset() {
	*x = LogoutRequest{}
	mi := &file_proto_gateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutRequest) ProtoMessage() {}

func (x *LogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutRequest.ProtoReflect.Descriptor instead.
func (*LogoutRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *LogoutRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LogoutRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LogoutRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// 登出响应
type LogoutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogoutResponse) Reset() {
	*x = LogoutResponse{}
	mi := &file_proto_gateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResponse) ProtoMessage() {}

func (x *LogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResponse.ProtoReflect.Descriptor instead.
func (*LogoutResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *LogoutResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 获取服务器列表请求
type GetServerListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	ServerType    ServerType             `protobuf:"varint,2,opt,name=server_type,json=serverType,proto3,enum=greatestworks.gateway.ServerType" json:"server_type,omitempty"`
	OnlyAvailable bool                   `protobuf:"varint,3,opt,name=only_available,json=onlyAvailable,proto3" json:"only_available,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerListRequest) Reset() {
	*x = GetServerListRequest{}
	mi := &file_proto_gateway_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerListRequest) ProtoMessage() {}

func (x *GetServerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerListRequest.ProtoReflect.Descriptor instead.
func (*GetServerListRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *GetServerListRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetServerListRequest) GetServerType() ServerType {
	if x != nil {
		return x.ServerType
	}
	return ServerType_SERVER_TYPE_UNSPECIFIED
}

func (x *GetServerListRequest) GetOnlyAvailable() bool {
	if x != nil {
		return x.OnlyAvailable
	}
	return false
}

// 获取服务器列表响应
type GetServerListResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Common              *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Servers             []*ServerInfo          `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	RecommendedServerId string                 `protobuf:"bytes,3,opt,name=recommended_server_id,json=recommendedServerId,proto3" json:"recommended_server_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetServerListResponse) Reset() {
	*x = GetServerListResponse{}
	mi := &file_proto_gateway_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerListResponse) ProtoMessage() {}

func (x *GetServerListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerListResponse.ProtoReflect.Descriptor instead.
func (*GetServerListResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *GetServerListResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetServerListResponse) GetServers() []*ServerInfo {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *GetServerListResponse) GetRecommendedServerId() string {
	if x != nil {
		return x.RecommendedServerId
	}
	return ""
}

// 选择服务器请求
type SelectServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ServerId      string                 `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	CharacterId   string                 `protobuf:"bytes,3,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectServerRequest) Reset() {
	*x = SelectServerRequest{}
	mi := &file_proto_gateway_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectServerRequest) ProtoMessage() {}

func (x *SelectServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectServerRequest.ProtoReflect.Descriptor instead.
func (*SelectServerRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *SelectServerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SelectServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *SelectServerRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

// 选择服务器响应
type SelectServerResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Common           *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ServerInfo       *ServerInfo            `protobuf:"bytes,2,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	ConnectionToken  string                 `protobuf:"bytes,3,opt,name=connection_token,json=connectionToken,proto3" json:"connection_token,omitempty"`
	ServiceEndpoints []string               `protobuf:"bytes,4,rep,name=service_endpoints,json=serviceEndpoints,proto3" json:"service_endpoints,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SelectServerResponse) Reset() {
	*x = SelectServerResponse{}
	mi := &file_proto_gateway_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectServerResponse) ProtoMessage() {}

func (x *SelectServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectServerResponse.ProtoReflect.Descriptor instead.
func (*SelectServerResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *SelectServerResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SelectServerResponse) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

func (x *SelectServerResponse) GetConnectionToken() string {
	if x != nil {
		return x.ConnectionToken
	}
	return ""
}

func (x *SelectServerResponse) GetServiceEndpoints() []string {
	if x != nil {
		return x.ServiceEndpoints
	}
	return nil
}

// 路由请求消息
type RouteRequestMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	ServiceName   string                 `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	MethodName    string                 `protobuf:"bytes,3,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timeout       int32                  `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"` // 超时时间（秒）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteRequestMessage) Reset() {
	*x = RouteRequestMessage{}
	mi := &file_proto_gateway_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteRequestMessage) ProtoMessage() {}

func (x *RouteRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteRequestMessage.ProtoReflect.Descriptor instead.
func (*RouteRequestMessage) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *RouteRequestMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RouteRequestMessage) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *RouteRequestMessage) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *RouteRequestMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RouteRequestMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RouteRequestMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RouteRequestMessage) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RouteRequestMessage) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

// 路由响应消息
type RouteResponseMessage struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RequestId      string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Success        bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Payload        []byte                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	StatusCode     int32                  `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers        map[string]string      `protobuf:"bytes,6,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ProcessingTime int64                  `protobuf:"varint,7,opt,name=processing_time,json=processingTime,proto3" json:"processing_time,omitempty"` // 处理时间（毫秒）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RouteResponseMessage) Reset() {
	*x = RouteResponseMessage{}
	mi := &file_proto_gateway_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteResponseMessage) ProtoMessage() {}

func (x *RouteResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteResponseMessage.ProtoReflect.Descriptor instead.
func (*RouteResponseMessage) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *RouteResponseMessage) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RouteResponseMessage) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RouteResponseMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RouteResponseMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *RouteResponseMessage) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *RouteResponseMessage) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RouteResponseMessage) GetProcessingTime() int64 {
	if x != nil {
		return x.ProcessingTime
	}
	return 0
}

// 连接请求
type ConnectionRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId        string                 `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	AccessToken      string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ConnectionType   ConnectionType         `protobuf:"varint,4,opt,name=connection_type,json=connectionType,proto3,enum=greatestworks.gateway.ConnectionType" json:"connection_type,omitempty"`
	ClientVersion    string                 `protobuf:"bytes,5,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ConnectionParams map[string]string      `protobuf:"bytes,6,rep,name=connection_params,json=connectionParams,proto3" json:"connection_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	mi := &file_proto_gateway_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConnectionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ConnectionRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ConnectionRequest) GetConnectionType() ConnectionType {
	if x != nil {
		return x.ConnectionType
	}
	return ConnectionType_CONNECTION_TYPE_UNSPECIFIED
}

func (x *ConnectionRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ConnectionRequest) GetConnectionParams() map[string]string {
	if x != nil {
		return x.ConnectionParams
	}
	return nil
}

// 连接响应
type ConnectionResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Common             *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ConnectionId       string                 `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	WebsocketUrl       string                 `protobuf:"bytes,3,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"`
	SupportedProtocols []string               `protobuf:"bytes,4,rep,name=supported_protocols,json=supportedProtocols,proto3" json:"supported_protocols,omitempty"`
	HeartbeatInterval  int32                  `protobuf:"varint,5,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"` // 心跳间隔（秒）
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	mi := &file_proto_gateway_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *ConnectionResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ConnectionResponse) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ConnectionResponse) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

func (x *ConnectionResponse) GetSupportedProtocols() []string {
	if x != nil {
		return x.SupportedProtocols
	}
	return nil
}

func (x *ConnectionResponse) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

// 心跳请求
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	StatusInfo    map[string]string      `protobuf:"bytes,4,rep,name=status_info,json=statusInfo,proto3" json:"status_info,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_gateway_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *HeartbeatRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *HeartbeatRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HeartbeatRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HeartbeatRequest) GetStatusInfo() map[string]string {
	if x != nil {
		return x.StatusInfo
	}
	return nil
}

// 心跳响应
type HeartbeatResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Common                *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ServerTimestamp       int64                  `protobuf:"varint,2,opt,name=server_timestamp,json=serverTimestamp,proto3" json:"server_timestamp,omitempty"`
	NextHeartbeatInterval int32                  `protobuf:"varint,3,opt,name=next_heartbeat_interval,json=nextHeartbeatInterval,proto3" json:"next_heartbeat_interval,omitempty"`
	GatewayStatus         *GatewayStatus         `protobuf:"bytes,4,opt,name=gateway_status,json=gatewayStatus,proto3" json:"gateway_status,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_gateway_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *HeartbeatResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *HeartbeatResponse) GetServerTimestamp() int64 {
	if x != nil {
		return x.ServerTimestamp
	}
	return 0
}

func (x *HeartbeatResponse) GetNextHeartbeatInterval() int32 {
	if x != nil {
		return x.NextHeartbeatInterval
	}
	return 0
}

func (x *HeartbeatResponse) GetGatewayStatus() *GatewayStatus {
	if x != nil {
		return x.GatewayStatus
	}
	return nil
}

// 获取网关状态请求
type GetGatewayStatusRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AdminToken     string                 `protobuf:"bytes,1,opt,name=admin_token,json=adminToken,proto3" json:"admin_token,omitempty"`
	IncludeMetrics bool                   `protobuf:"varint,2,opt,name=include_metrics,json=includeMetrics,proto3" json:"include_metrics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetGatewayStatusRequest) Reset() {
	*x = GetGatewayStatusRequest{}
	mi := &file_proto_gateway_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayStatusRequest) ProtoMessage() {}

func (x *GetGatewayStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayStatusRequest.ProtoReflect.Descriptor instead.
func (*GetGatewayStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *GetGatewayStatusRequest) GetAdminToken() string {
	if x != nil {
		return x.AdminToken
	}
	return ""
}

func (x *GetGatewayStatusRequest) GetIncludeMetrics() bool {
	if x != nil {
		return x.IncludeMetrics
	}
	return false
}

// 获取网关状态响应
type GetGatewayStatusResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Common          *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Status          *GatewayStatus         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Metrics         *GatewayMetrics        `protobuf:"bytes,3,opt,name=metrics,proto3" json:"metrics,omitempty"`
	BackendServices []*ServiceStatus       `protobuf:"bytes,4,rep,name=backend_services,json=backendServices,proto3" json:"backend_services,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetGatewayStatusResponse) Reset() {
	*x = GetGatewayStatusResponse{}
	mi := &file_proto_gateway_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayStatusResponse) ProtoMessage() {}

func (x *GetGatewayStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayStatusResponse.ProtoReflect.Descriptor instead.
func (*GetGatewayStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *GetGatewayStatusResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetGatewayStatusResponse) GetStatus() *GatewayStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetGatewayStatusResponse) GetMetrics() *GatewayMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *GetGatewayStatusResponse) GetBackendServices() []*ServiceStatus {
	if x != nil {
		return x.BackendServices
	}
	return nil
}

// 限流检查请求
type RateLimitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IpAddress     string                 `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Resource      string                 `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"` // 请求的资源
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`     // 请求的操作
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimitRequest) Reset() {
	*x = RateLimitRequest{}
	mi := &file_proto_gateway_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitRequest) ProtoMessage() {}

func (x *RateLimitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitRequest.ProtoReflect.Descriptor instead.
func (*RateLimitRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *RateLimitRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RateLimitRequest) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *RateLimitRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *RateLimitRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// 限流检查响应
type RateLimitResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Allowed           bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	RemainingRequests int32                  `protobuf:"varint,2,opt,name=remaining_requests,json=remainingRequests,proto3" json:"remaining_requests,omitempty"`
	ResetTime         int64                  `protobuf:"varint,3,opt,name=reset_time,json=resetTime,proto3" json:"reset_time,omitempty"` // 限制重置时间
	LimitType         string                 `protobuf:"bytes,4,opt,name=limit_type,json=limitType,proto3" json:"limit_type,omitempty"`
	ErrorMessage      string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RateLimitResponse) Reset() {
	*x = RateLimitResponse{}
	mi := &file_proto_gateway_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitResponse) ProtoMessage() {}

func (x *RateLimitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitResponse.ProtoReflect.Descriptor instead.
func (*RateLimitResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{19}
}

func (x *RateLimitResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *RateLimitResponse) GetRemainingRequests() int32 {
	if x != nil {
		return x.RemainingRequests
	}
	return 0
}

func (x *RateLimitResponse) GetResetTime() int64 {
	if x != nil {
		return x.ResetTime
	}
	return 0
}

func (x *RateLimitResponse) GetLimitType() string {
	if x != nil {
		return x.LimitType
	}
	return ""
}

func (x *RateLimitResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 获取会话信息请求
type GetSessionInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionInfoRequest) Reset() {
	*x = GetSessionInfoRequest{}
	mi := &file_proto_gateway_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoRequest) ProtoMessage() {}

func (x *GetSessionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSessionInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{20}
}

func (x *GetSessionInfoRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetSessionInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 获取会话信息响应
type GetSessionInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	SessionInfo   *SessionInfo           `protobuf:"bytes,2,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionInfoResponse) Reset() {
	*x = GetSessionInfoResponse{}
	mi := &file_proto_gateway_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionInfoResponse) ProtoMessage() {}

func (x *GetSessionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSessionInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{21}
}

func (x *GetSessionInfoResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetSessionInfoResponse) GetSessionInfo() *SessionInfo {
	if x != nil {
		return x.SessionInfo
	}
	return nil
}

// 服务器信息
type ServerInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ServerId       string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Region         string                 `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	ServerType     ServerType             `protobuf:"varint,4,opt,name=server_type,json=serverType,proto3,enum=greatestworks.gateway.ServerType" json:"server_type,omitempty"`
	Status         ServerStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=greatestworks.gateway.ServerStatus" json:"status,omitempty"`
	CurrentPlayers int32                  `protobuf:"varint,6,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`
	MaxPlayers     int32                  `protobuf:"varint,7,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	LoadPercentage float32                `protobuf:"fixed32,8,opt,name=load_percentage,json=loadPercentage,proto3" json:"load_percentage,omitempty"`
	Ping           int32                  `protobuf:"varint,9,opt,name=ping,proto3" json:"ping,omitempty"`
	Version        string                 `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
	IsRecommended  bool                   `protobuf:"varint,11,opt,name=is_recommended,json=isRecommended,proto3" json:"is_recommended,omitempty"`
	IsNew          bool                   `protobuf:"varint,12,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
	LastUpdate     int64                  `protobuf:"varint,13,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	Features       map[string]string      `protobuf:"bytes,14,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 服务器特性
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	mi := &file_proto_gateway_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{22}
}

func (x *ServerInfo) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ServerInfo) GetServerType() ServerType {
	if x != nil {
		return x.ServerType
	}
	return ServerType_SERVER_TYPE_UNSPECIFIED
}

func (x *ServerInfo) GetStatus() ServerStatus {
	if x != nil {
		return x.Status
	}
	return ServerStatus_SERVER_STATUS_UNSPECIFIED
}

func (x *ServerInfo) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *ServerInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *ServerInfo) GetLoadPercentage() float32 {
	if x != nil {
		return x.LoadPercentage
	}
	return 0
}

func (x *ServerInfo) GetPing() int32 {
	if x != nil {
		return x.Ping
	}
	return 0
}

func (x *ServerInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerInfo) GetIsRecommended() bool {
	if x != nil {
		return x.IsRecommended
	}
	return false
}

func (x *ServerInfo) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

func (x *ServerInfo) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *ServerInfo) GetFeatures() map[string]string {
	if x != nil {
		return x.Features
	}
	return nil
}

// 用户档案
type UserProfile struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username          string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email             string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	DisplayName       string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarUrl         string                 `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	UserLevel         UserLevel              `protobuf:"varint,6,opt,name=user_level,json=userLevel,proto3,enum=greatestworks.gateway.UserLevel" json:"user_level,omitempty"`
	IsPremium         bool                   `protobuf:"varint,7,opt,name=is_premium,json=isPremium,proto3" json:"is_premium,omitempty"`
	CreatedAt         int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastLogin         int64                  `protobuf:"varint,9,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	PreferredLanguage string                 `protobuf:"bytes,10,opt,name=preferred_language,json=preferredLanguage,proto3" json:"preferred_language,omitempty"`
	Timezone          string                 `protobuf:"bytes,11,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Preferences       map[string]string      `protobuf:"bytes,12,rep,name=preferences,proto3" json:"preferences,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UserProfile) Reset() {
	*x = UserProfile{}
	mi := &file_proto_gateway_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProfile) ProtoMessage() {}

func (x *UserProfile) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProfile.ProtoReflect.Descriptor instead.
func (*UserProfile) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{23}
}

func (x *UserProfile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserProfile) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserProfile) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserProfile) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserProfile) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserProfile) GetUserLevel() UserLevel {
	if x != nil {
		return x.UserLevel
	}
	return UserLevel_USER_LEVEL_UNSPECIFIED
}

func (x *UserProfile) GetIsPremium() bool {
	if x != nil {
		return x.IsPremium
	}
	return false
}

func (x *UserProfile) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UserProfile) GetLastLogin() int64 {
	if x != nil {
		return x.LastLogin
	}
	return 0
}

func (x *UserProfile) GetPreferredLanguage() string {
	if x != nil {
		return x.PreferredLanguage
	}
	return ""
}

func (x *UserProfile) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserProfile) GetPreferences() map[string]string {
	if x != nil {
		return x.Preferences
	}
	return nil
}

// 网关状态
type GatewayStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	IsHealthy         bool                   `protobuf:"varint,1,opt,name=is_healthy,json=isHealthy,proto3" json:"is_healthy,omitempty"`
	Version           string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Uptime            int64                  `protobuf:"varint,3,opt,name=uptime,proto3" json:"uptime,omitempty"` // 运行时间（秒）
	ActiveConnections int32                  `protobuf:"varint,4,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	TotalRequests     int32                  `protobuf:"varint,5,opt,name=total_requests,json=totalRequests,proto3" json:"total_requests,omitempty"`
	CpuUsage          float32                `protobuf:"fixed32,6,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage       float32                `protobuf:"fixed32,7,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	ErrorRate         int32                  `protobuf:"varint,8,opt,name=error_rate,json=errorRate,proto3" json:"error_rate,omitempty"` // 错误率（每万次请求）
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GatewayStatus) Reset() {
	*x = GatewayStatus{}
	mi := &file_proto_gateway_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayStatus) ProtoMessage() {}

func (x *GatewayStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayStatus.ProtoReflect.Descriptor instead.
func (*GatewayStatus) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{24}
}

func (x *GatewayStatus) GetIsHealthy() bool {
	if x != nil {
		return x.IsHealthy
	}
	return false
}

func (x *GatewayStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GatewayStatus) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *GatewayStatus) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *GatewayStatus) GetTotalRequests() int32 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

func (x *GatewayStatus) GetCpuUsage() float32 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *GatewayStatus) GetMemoryUsage() float32 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *GatewayStatus) GetErrorRate() int32 {
	if x != nil {
		return x.ErrorRate
	}
	return 0
}

// 网关指标
type GatewayMetrics struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	TotalRequests           int64                  `protobuf:"varint,1,opt,name=total_requests,json=totalRequests,proto3" json:"total_requests,omitempty"`
	SuccessfulRequests      int64                  `protobuf:"varint,2,opt,name=successful_requests,json=successfulRequests,proto3" json:"successful_requests,omitempty"`
	FailedRequests          int64                  `protobuf:"varint,3,opt,name=failed_requests,json=failedRequests,proto3" json:"failed_requests,omitempty"`
	AverageResponseTime     float32                `protobuf:"fixed32,4,opt,name=average_response_time,json=averageResponseTime,proto3" json:"average_response_time,omitempty"` // 平均响应时间（毫秒）
	ActiveUsers             int32                  `protobuf:"varint,5,opt,name=active_users,json=activeUsers,proto3" json:"active_users,omitempty"`
	PeakConcurrentUsers     int32                  `protobuf:"varint,6,opt,name=peak_concurrent_users,json=peakConcurrentUsers,proto3" json:"peak_concurrent_users,omitempty"`
	RequestsPerService      map[string]int64       `protobuf:"bytes,7,rep,name=requests_per_service,json=requestsPerService,proto3" json:"requests_per_service,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                   // 各服务请求数
	ResponseTimesPerService map[string]float32     `protobuf:"bytes,8,rep,name=response_times_per_service,json=responseTimesPerService,proto3" json:"response_times_per_service,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // 各服务响应时间
	BandwidthIn             int64                  `protobuf:"varint,9,opt,name=bandwidth_in,json=bandwidthIn,proto3" json:"bandwidth_in,omitempty"`                                                                                                                    // 入站带宽（字节）
	BandwidthOut            int64                  `protobuf:"varint,10,opt,name=bandwidth_out,json=bandwidthOut,proto3" json:"bandwidth_out,omitempty"`                                                                                                                // 出站带宽（字节）
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GatewayMetrics) Reset() {
	*x = GatewayMetrics{}
	mi := &file_proto_gateway_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayMetrics) ProtoMessage() {}

func (x *GatewayMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayMetrics.ProtoReflect.Descriptor instead.
func (*GatewayMetrics) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{25}
}

func (x *GatewayMetrics) GetTotalRequests() int64 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

func (x *GatewayMetrics) GetSuccessfulRequests() int64 {
	if x != nil {
		return x.SuccessfulRequests
	}
	return 0
}

func (x *GatewayMetrics) GetFailedRequests() int64 {
	if x != nil {
		return x.FailedRequests
	}
	return 0
}

func (x *GatewayMetrics) GetAverageResponseTime() float32 {
	if x != nil {
		return x.AverageResponseTime
	}
	return 0
}

func (x *GatewayMetrics) GetActiveUsers() int32 {
	if x != nil {
		return x.ActiveUsers
	}
	return 0
}

func (x *GatewayMetrics) GetPeakConcurrentUsers() int32 {
	if x != nil {
		return x.PeakConcurrentUsers
	}
	return 0
}

func (x *GatewayMetrics) GetRequestsPerService() map[string]int64 {
	if x != nil {
		return x.RequestsPerService
	}
	return nil
}

func (x *GatewayMetrics) GetResponseTimesPerService() map[string]float32 {
	if x != nil {
		return x.ResponseTimesPerService
	}
	return nil
}

func (x *GatewayMetrics) GetBandwidthIn() int64 {
	if x != nil {
		return x.BandwidthIn
	}
	return 0
}

func (x *GatewayMetrics) GetBandwidthOut() int64 {
	if x != nil {
		return x.BandwidthOut
	}
	return 0
}

// 服务状态
type ServiceStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ServiceName       string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceUrl        string                 `protobuf:"bytes,2,opt,name=service_url,json=serviceUrl,proto3" json:"service_url,omitempty"`
	Health            ServiceHealth          `protobuf:"varint,3,opt,name=health,proto3,enum=greatestworks.gateway.ServiceHealth" json:"health,omitempty"`
	ResponseTime      float32                `protobuf:"fixed32,4,opt,name=response_time,json=responseTime,proto3" json:"response_time,omitempty"` // 平均响应时间
	ActiveConnections int32                  `protobuf:"varint,5,opt,name=active_connections,json=activeConnections,proto3" json:"active_connections,omitempty"`
	LastCheck         int64                  `protobuf:"varint,6,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	Version           string                 `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Metadata          map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ServiceStatus) Reset() {
	*x = ServiceStatus{}
	mi := &file_proto_gateway_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceStatus) ProtoMessage() {}

func (x *ServiceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceStatus.ProtoReflect.Descriptor instead.
func (*ServiceStatus) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{26}
}

func (x *ServiceStatus) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *ServiceStatus) GetServiceUrl() string {
	if x != nil {
		return x.ServiceUrl
	}
	return ""
}

func (x *ServiceStatus) GetHealth() ServiceHealth {
	if x != nil {
		return x.Health
	}
	return ServiceHealth_SERVICE_HEALTH_UNSPECIFIED
}

func (x *ServiceStatus) GetResponseTime() float32 {
	if x != nil {
		return x.ResponseTime
	}
	return 0
}

func (x *ServiceStatus) GetActiveConnections() int32 {
	if x != nil {
		return x.ActiveConnections
	}
	return 0
}

func (x *ServiceStatus) GetLastCheck() int64 {
	if x != nil {
		return x.LastCheck
	}
	return 0
}

func (x *ServiceStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServiceStatus) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 会话信息
type SessionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccessToken   string                 `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	LastActivity  int64                  `protobuf:"varint,6,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	ClientIp      string                 `protobuf:"bytes,7,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	UserAgent     string                 `protobuf:"bytes,8,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	CurrentServer string                 `protobuf:"bytes,9,opt,name=current_server,json=currentServer,proto3" json:"current_server,omitempty"`
	Status        SessionStatus          `protobuf:"varint,10,opt,name=status,proto3,enum=greatestworks.gateway.SessionStatus" json:"status,omitempty"`
	SessionData   map[string]string      `protobuf:"bytes,11,rep,name=session_data,json=sessionData,proto3" json:"session_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	mi := &file_proto_gateway_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_gateway_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_proto_gateway_proto_rawDescGZIP(), []int{27}
}

func (x *SessionInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SessionInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *SessionInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SessionInfo) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *SessionInfo) GetLastActivity() int64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

func (x *SessionInfo) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *SessionInfo) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *SessionInfo) GetCurrentServer() string {
	if x != nil {
		return x.CurrentServer
	}
	return ""
}

func (x *SessionInfo) GetStatus() SessionStatus {
	if x != nil {
		return x.Status
	}
	return SessionStatus_SESSION_STATUS_UNSPECIFIED
}

func (x *SessionInfo) GetSessionData() map[string]string {
	if x != nil {
		return x.SessionData
	}
	return nil
}

var File_proto_gateway_proto protoreflect.FileDescriptor

const file_proto_gateway_proto_rawDesc = "" +
	"\n" +
	"\x13proto/gateway.proto\x12\x15greatestworks.gateway\x1a\x12proto/common.proto\"\xaf\x03\n" +
	"\x13AuthenticateRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x1b\n" +
	"\tclient_id\x18\x03 \x01(\tR\bclientId\x12%\n" +
	"\x0eclient_version\x18\x04 \x01(\tR\rclientVersion\x12\x1f\n" +
	"\vdevice_info\x18\x05 \x01(\tR\n" +
	"deviceInfo\x12<\n" +
	"\tauth_type\x18\x06 \x01(\x0e2\x1f.greatestworks.gateway.AuthTypeR\bauthType\x12*\n" +
	"\x11third_party_token\x18\a \x01(\tR\x0fthirdPartyToken\x12T\n" +
	"\bmetadata\x18\b \x03(\v28.greatestworks.gateway.AuthenticateRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xdc\x02\n" +
	"\x14AuthenticateResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x04 \x01(\x03R\texpiresIn\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x06 \x01(\tR\tsessionId\x12E\n" +
	"\fuser_profile\x18\a \x01(\v2\".greatestworks.gateway.UserProfileR\vuserProfile\x12 \n" +
	"\vpermissions\x18\b \x03(\tR\vpermissions\"S\n" +
	"\x13RefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\xbb\x01\n" +
	"\x14RefreshTokenResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12!\n" +
	"\faccess_token\x18\x02 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x04 \x01(\x03R\texpiresIn\"j\n" +
	"\rLogoutRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\"N\n" +
	"\x0eLogoutResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\x99\x01\n" +
	"\x14GetServerListRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\x12B\n" +
	"\vserver_type\x18\x02 \x01(\x0e2!.greatestworks.gateway.ServerTypeR\n" +
	"serverType\x12%\n" +
	"\x0eonly_available\x18\x03 \x01(\bR\ronlyAvailable\"\xc6\x01\n" +
	"\x15GetServerListResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12;\n" +
	"\aservers\x18\x02 \x03(\v2!.greatestworks.gateway.ServerInfoR\aservers\x122\n" +
	"\x15recommended_server_id\x18\x03 \x01(\tR\x13recommendedServerId\"n\n" +
	"\x13SelectServerRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tserver_id\x18\x02 \x01(\tR\bserverId\x12!\n" +
	"\fcharacter_id\x18\x03 \x01(\tR\vcharacterId\"\xf0\x01\n" +
	"\x14SelectServerResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12B\n" +
	"\vserver_info\x18\x02 \x01(\v2!.greatestworks.gateway.ServerInfoR\n" +
	"serverInfo\x12)\n" +
	"\x10connection_token\x18\x03 \x01(\tR\x0fconnectionToken\x12+\n" +
	"\x11service_endpoints\x18\x04 \x03(\tR\x10serviceEndpoints\"\xf3\x02\n" +
	"\x13RouteRequestMessage\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12!\n" +
	"\fservice_name\x18\x02 \x01(\tR\vserviceName\x12\x1f\n" +
	"\vmethod_name\x18\x03 \x01(\tR\n" +
	"methodName\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x06 \x01(\tR\tsessionId\x12Q\n" +
	"\aheaders\x18\a \x03(\v27.greatestworks.gateway.RouteRequestMessage.HeadersEntryR\aheaders\x12\x18\n" +
	"\atimeout\x18\b \x01(\x05R\atimeout\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe8\x02\n" +
	"\x14RouteResponseMessage\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\apayload\x18\x03 \x01(\fR\apayload\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vstatus_code\x18\x05 \x01(\x05R\n" +
	"statusCode\x12R\n" +
	"\aheaders\x18\x06 \x03(\v28.greatestworks.gateway.RouteResponseMessage.HeadersEntryR\aheaders\x12'\n" +
	"\x0fprocessing_time\x18\a \x01(\x03R\x0eprocessingTime\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x97\x03\n" +
	"\x11ConnectionRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\x12N\n" +
	"\x0fconnection_type\x18\x04 \x01(\x0e2%.greatestworks.gateway.ConnectionTypeR\x0econnectionType\x12%\n" +
	"\x0eclient_version\x18\x05 \x01(\tR\rclientVersion\x12k\n" +
	"\x11connection_params\x18\x06 \x03(\v2>.greatestworks.gateway.ConnectionRequest.ConnectionParamsEntryR\x10connectionParams\x1aC\n" +
	"\x15ConnectionParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfc\x01\n" +
	"\x12ConnectionResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12#\n" +
	"\rconnection_id\x18\x02 \x01(\tR\fconnectionId\x12#\n" +
	"\rwebsocket_url\x18\x03 \x01(\tR\fwebsocketUrl\x12/\n" +
	"\x13supported_protocols\x18\x04 \x03(\tR\x12supportedProtocols\x12-\n" +
	"\x12heartbeat_interval\x18\x05 \x01(\x05R\x11heartbeatInterval\"\x87\x02\n" +
	"\x10HeartbeatRequest\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12X\n" +
	"\vstatus_info\x18\x04 \x03(\v27.greatestworks.gateway.HeartbeatRequest.StatusInfoEntryR\n" +
	"statusInfo\x1a=\n" +
	"\x0fStatusInfoEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x02\n" +
	"\x11HeartbeatResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12)\n" +
	"\x10server_timestamp\x18\x02 \x01(\x03R\x0fserverTimestamp\x126\n" +
	"\x17next_heartbeat_interval\x18\x03 \x01(\x05R\x15nextHeartbeatInterval\x12K\n" +
	"\x0egateway_status\x18\x04 \x01(\v2$.greatestworks.gateway.GatewayStatusR\rgatewayStatus\"c\n" +
	"\x17GetGatewayStatusRequest\x12\x1f\n" +
	"\vadmin_token\x18\x01 \x01(\tR\n" +
	"adminToken\x12'\n" +
	"\x0finclude_metrics\x18\x02 \x01(\bR\x0eincludeMetrics\"\xa8\x02\n" +
	"\x18GetGatewayStatusResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12<\n" +
	"\x06status\x18\x02 \x01(\v2$.greatestworks.gateway.GatewayStatusR\x06status\x12?\n" +
	"\ametrics\x18\x03 \x01(\v2%.greatestworks.gateway.GatewayMetricsR\ametrics\x12O\n" +
	"\x10backend_services\x18\x04 \x03(\v2$.greatestworks.gateway.ServiceStatusR\x0fbackendServices\"~\n" +
	"\x10RateLimitRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x02 \x01(\tR\tipAddress\x12\x1a\n" +
	"\bresource\x18\x03 \x01(\tR\bresource\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\"\xbf\x01\n" +
	"\x11RateLimitResponse\x12\x18\n" +
	"\aallowed\x18\x01 \x01(\bR\aallowed\x12-\n" +
	"\x12remaining_requests\x18\x02 \x01(\x05R\x11remainingRequests\x12\x1d\n" +
	"\n" +
	"reset_time\x18\x03 \x01(\x03R\tresetTime\x12\x1d\n" +
	"\n" +
	"limit_type\x18\x04 \x01(\tR\tlimitType\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"O\n" +
	"\x15GetSessionInfoRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"\x9d\x01\n" +
	"\x16GetSessionInfoResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12E\n" +
	"\fsession_info\x18\x02 \x01(\v2\".greatestworks.gateway.SessionInfoR\vsessionInfo\"\xe0\x04\n" +
	"\n" +
	"ServerInfo\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06region\x18\x03 \x01(\tR\x06region\x12B\n" +
	"\vserver_type\x18\x04 \x01(\x0e2!.greatestworks.gateway.ServerTypeR\n" +
	"serverType\x12;\n" +
	"\x06status\x18\x05 \x01(\x0e2#.greatestworks.gateway.ServerStatusR\x06status\x12'\n" +
	"\x0fcurrent_players\x18\x06 \x01(\x05R\x0ecurrentPlayers\x12\x1f\n" +
	"\vmax_players\x18\a \x01(\x05R\n" +
	"maxPlayers\x12'\n" +
	"\x0fload_percentage\x18\b \x01(\x02R\x0eloadPercentage\x12\x12\n" +
	"\x04ping\x18\t \x01(\x05R\x04ping\x12\x18\n" +
	"\aversion\x18\n" +
	" \x01(\tR\aversion\x12%\n" +
	"\x0eis_recommended\x18\v \x01(\bR\risRecommended\x12\x15\n" +
	"\x06is_new\x18\f \x01(\bR\x05isNew\x12\x1f\n" +
	"\vlast_update\x18\r \x01(\x03R\n" +
	"lastUpdate\x12K\n" +
	"\bfeatures\x18\x0e \x03(\v2/.greatestworks.gateway.ServerInfo.FeaturesEntryR\bfeatures\x1a;\n" +
	"\rFeaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9a\x04\n" +
	"\vUserProfile\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12!\n" +
	"\fdisplay_name\x18\x04 \x01(\tR\vdisplayName\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x05 \x01(\tR\tavatarUrl\x12?\n" +
	"\n" +
	"user_level\x18\x06 \x01(\x0e2 .greatestworks.gateway.UserLevelR\tuserLevel\x12\x1d\n" +
	"\n" +
	"is_premium\x18\a \x01(\bR\tisPremium\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"last_login\x18\t \x01(\x03R\tlastLogin\x12-\n" +
	"\x12preferred_language\x18\n" +
	" \x01(\tR\x11preferredLanguage\x12\x1a\n" +
	"\btimezone\x18\v \x01(\tR\btimezone\x12U\n" +
	"\vpreferences\x18\f \x03(\v23.greatestworks.gateway.UserProfile.PreferencesEntryR\vpreferences\x1a>\n" +
	"\x10PreferencesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x02\n" +
	"\rGatewayStatus\x12\x1d\n" +
	"\n" +
	"is_healthy\x18\x01 \x01(\bR\tisHealthy\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x16\n" +
	"\x06uptime\x18\x03 \x01(\x03R\x06uptime\x12-\n" +
	"\x12active_connections\x18\x04 \x01(\x05R\x11activeConnections\x12%\n" +
	"\x0etotal_requests\x18\x05 \x01(\x05R\rtotalRequests\x12\x1b\n" +
	"\tcpu_usage\x18\x06 \x01(\x02R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\a \x01(\x02R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"error_rate\x18\b \x01(\x05R\terrorRate\"\xe9\x05\n" +
	"\x0eGatewayMetrics\x12%\n" +
	"\x0etotal_requests\x18\x01 \x01(\x03R\rtotalRequests\x12/\n" +
	"\x13successful_requests\x18\x02 \x01(\x03R\x12successfulRequests\x12'\n" +
	"\x0ffailed_requests\x18\x03 \x01(\x03R\x0efailedRequests\x122\n" +
	"\x15average_response_time\x18\x04 \x01(\x02R\x13averageResponseTime\x12!\n" +
	"\factive_users\x18\x05 \x01(\x05R\vactiveUsers\x122\n" +
	"\x15peak_concurrent_users\x18\x06 \x01(\x05R\x13peakConcurrentUsers\x12o\n" +
	"\x14requests_per_service\x18\a \x03(\v2=.greatestworks.gateway.GatewayMetrics.RequestsPerServiceEntryR\x12requestsPerService\x12\x7f\n" +
	"\x1aresponse_times_per_service\x18\b \x03(\v2B.greatestworks.gateway.GatewayMetrics.ResponseTimesPerServiceEntryR\x17responseTimesPerService\x12!\n" +
	"\fbandwidth_in\x18\t \x01(\x03R\vbandwidthIn\x12#\n" +
	"\rbandwidth_out\x18\n" +
	" \x01(\x03R\fbandwidthOut\x1aE\n" +
	"\x17RequestsPerServiceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1aJ\n" +
	"\x1cResponseTimesPerServiceEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\xab\x03\n" +
	"\rServiceStatus\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x1f\n" +
	"\vservice_url\x18\x02 \x01(\tR\n" +
	"serviceUrl\x12<\n" +
	"\x06health\x18\x03 \x01(\x0e2$.greatestworks.gateway.ServiceHealthR\x06health\x12#\n" +
	"\rresponse_time\x18\x04 \x01(\x02R\fresponseTime\x12-\n" +
	"\x12active_connections\x18\x05 \x01(\x05R\x11activeConnections\x12\x1d\n" +
	"\n" +
	"last_check\x18\x06 \x01(\x03R\tlastCheck\x12\x18\n" +
	"\aversion\x18\a \x01(\tR\aversion\x12N\n" +
	"\bmetadata\x18\b \x03(\v22.greatestworks.gateway.ServiceStatus.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x84\x04\n" +
	"\vSessionInfo\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\x12#\n" +
	"\rlast_activity\x18\x06 \x01(\x03R\flastActivity\x12\x1b\n" +
	"\tclient_ip\x18\a \x01(\tR\bclientIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\b \x01(\tR\tuserAgent\x12%\n" +
	"\x0ecurrent_server\x18\t \x01(\tR\rcurrentServer\x12<\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2$.greatestworks.gateway.SessionStatusR\x06status\x12V\n" +
	"\fsession_data\x18\v \x03(\v23.greatestworks.gateway.SessionInfo.SessionDataEntryR\vsessionData\x1a>\n" +
	"\x10SessionDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xd4\x01\n" +
	"\bAuthType\x12\x19\n" +
	"\x15AUTH_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12AUTH_TYPE_PASSWORD\x10\x01\x12\x13\n" +
	"\x0fAUTH_TYPE_OAUTH\x10\x02\x12\x11\n" +
	"\rAUTH_TYPE_JWT\x10\x03\x12\x13\n" +
	"\x0fAUTH_TYPE_GUEST\x10\x04\x12\x16\n" +
	"\x12AUTH_TYPE_FACEBOOK\x10\x05\x12\x14\n" +
	"\x10AUTH_TYPE_GOOGLE\x10\x06\x12\x15\n" +
	"\x11AUTH_TYPE_TWITTER\x10\a\x12\x13\n" +
	"\x0fAUTH_TYPE_APPLE\x10\b*\xb2\x01\n" +
	"\n" +
	"ServerType\x12\x1b\n" +
	"\x17SERVER_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10SERVER_TYPE_GAME\x10\x01\x12\x14\n" +
	"\x10SERVER_TYPE_CHAT\x10\x02\x12\x15\n" +
	"\x11SERVER_TYPE_MATCH\x10\x03\x12\x16\n" +
	"\x12SERVER_TYPE_BATTLE\x10\x04\x12\x16\n" +
	"\x12SERVER_TYPE_SOCIAL\x10\x05\x12\x14\n" +
	"\x10SERVER_TYPE_TEST\x10\x06*\xb7\x01\n" +
	"\fServerStatus\x12\x1d\n" +
	"\x19SERVER_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14SERVER_STATUS_ONLINE\x10\x01\x12\x19\n" +
	"\x15SERVER_STATUS_OFFLINE\x10\x02\x12\x1d\n" +
	"\x19SERVER_STATUS_MAINTENANCE\x10\x03\x12\x16\n" +
	"\x12SERVER_STATUS_FULL\x10\x04\x12\x1c\n" +
	"\x18SERVER_STATUS_RESTRICTED\x10\x05*\x9d\x01\n" +
	"\x0eConnectionType\x12\x1f\n" +
	"\x1bCONNECTION_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19CONNECTION_TYPE_WEBSOCKET\x10\x01\x12\x17\n" +
	"\x13CONNECTION_TYPE_TCP\x10\x02\x12\x18\n" +
	"\x14CONNECTION_TYPE_HTTP\x10\x03\x12\x18\n" +
	"\x14CONNECTION_TYPE_GRPC\x10\x04*\xb3\x01\n" +
	"\tUserLevel\x12\x1a\n" +
	"\x16USER_LEVEL_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10USER_LEVEL_GUEST\x10\x01\x12\x19\n" +
	"\x15USER_LEVEL_REGISTERED\x10\x02\x12\x17\n" +
	"\x13USER_LEVEL_VERIFIED\x10\x03\x12\x16\n" +
	"\x12USER_LEVEL_PREMIUM\x10\x04\x12\x12\n" +
	"\x0eUSER_LEVEL_VIP\x10\x05\x12\x14\n" +
	"\x10USER_LEVEL_ADMIN\x10\x06*\xa3\x01\n" +
	"\rServiceHealth\x12\x1e\n" +
	"\x1aSERVICE_HEALTH_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16SERVICE_HEALTH_HEALTHY\x10\x01\x12\x1b\n" +
	"\x17SERVICE_HEALTH_DEGRADED\x10\x02\x12\x1c\n" +
	"\x18SERVICE_HEALTH_UNHEALTHY\x10\x03\x12\x1b\n" +
	"\x17SERVICE_HEALTH_CRITICAL\x10\x04*\xbc\x01\n" +
	"\rSessionStatus\x12\x1e\n" +
	"\x1aSESSION_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SESSION_STATUS_ACTIVE\x10\x01\x12\x17\n" +
	"\x13SESSION_STATUS_IDLE\x10\x02\x12\x1a\n" +
	"\x16SESSION_STATUS_EXPIRED\x10\x03\x12\x1d\n" +
	"\x19SESSION_STATUS_TERMINATED\x10\x04\x12\x1c\n" +
	"\x18SESSION_STATUS_SUSPENDED\x10\x052\x8c\t\n" +
	"\x0eGatewayService\x12g\n" +
	"\fAuthenticate\x12*.greatestworks.gateway.AuthenticateRequest\x1a+.greatestworks.gateway.AuthenticateResponse\x12g\n" +
	"\fRefreshToken\x12*.greatestworks.gateway.RefreshTokenRequest\x1a+.greatestworks.gateway.RefreshTokenResponse\x12U\n" +
	"\x06Logout\x12$.greatestworks.gateway.LogoutRequest\x1a%.greatestworks.gateway.LogoutResponse\x12j\n" +
	"\rGetServerList\x12+.greatestworks.gateway.GetServerListRequest\x1a,.greatestworks.gateway.GetServerListResponse\x12g\n" +
	"\fSelectServer\x12*.greatestworks.gateway.SelectServerRequest\x1a+.greatestworks.gateway.SelectServerResponse\x12g\n" +
	"\fRouteRequest\x12*.greatestworks.gateway.RouteRequestMessage\x1a+.greatestworks.gateway.RouteResponseMessage\x12j\n" +
	"\x13EstablishConnection\x12(.greatestworks.gateway.ConnectionRequest\x1a).greatestworks.gateway.ConnectionResponse\x12^\n" +
	"\tHeartbeat\x12'.greatestworks.gateway.HeartbeatRequest\x1a(.greatestworks.gateway.HeartbeatResponse\x12s\n" +
	"\x10GetGatewayStatus\x12..greatestworks.gateway.GetGatewayStatusRequest\x1a/.greatestworks.gateway.GetGatewayStatusResponse\x12c\n" +
	"\x0eRateLimitCheck\x12'.greatestworks.gateway.RateLimitRequest\x1a(.greatestworks.gateway.RateLimitResponse\x12m\n" +
	"\x0eGetSessionInfo\x12,.greatestworks.gateway.GetSessionInfoRequest\x1a-.greatestworks.gateway.GetSessionInfoResponseB>Z$greatestworks/internal/proto/gateway\xaa\x02\x15GreatestWorks.Gatewayb\x06proto3"

var (
	file_proto_gateway_proto_rawDescOnce sync.Once
	file_proto_gateway_proto_rawDescData []byte
)

func file_proto_gateway_proto_rawDescGZIP() []byte {
	file_proto_gateway_proto_rawDescOnce.Do(func() {
		file_proto_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_gateway_proto_rawDesc), len(file_proto_gateway_proto_rawDesc)))
	})
	return file_proto_gateway_proto_rawDescData
}

var file_proto_gateway_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_proto_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_proto_gateway_proto_goTypes = []any{
	(AuthType)(0),                    // 0: greatestworks.gateway.AuthType
	(ServerType)(0),                  // 1: greatestworks.gateway.ServerType
	(ServerStatus)(0),                // 2: greatestworks.gateway.ServerStatus
	(ConnectionType)(0),              // 3: greatestworks.gateway.ConnectionType
	(UserLevel)(0),                   // 4: greatestworks.gateway.UserLevel
	(ServiceHealth)(0),               // 5: greatestworks.gateway.ServiceHealth
	(SessionStatus)(0),               // 6: greatestworks.gateway.SessionStatus
	(*AuthenticateRequest)(nil),      // 7: greatestworks.gateway.AuthenticateRequest
	(*AuthenticateResponse)(nil),     // 8: greatestworks.gateway.AuthenticateResponse
	(*RefreshTokenRequest)(nil),      // 9: greatestworks.gateway.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),     // 10: greatestworks.gateway.RefreshTokenResponse
	(*LogoutRequest)(nil),            // 11: greatestworks.gateway.LogoutRequest
	(*LogoutResponse)(nil),           // 12: greatestworks.gateway.LogoutResponse
	(*GetServerListRequest)(nil),     // 13: greatestworks.gateway.GetServerListRequest
	(*GetServerListResponse)(nil),    // 14: greatestworks.gateway.GetServerListResponse
	(*SelectServerRequest)(nil),      // 15: greatestworks.gateway.SelectServerRequest
	(*SelectServerResponse)(nil),     // 16: greatestworks.gateway.SelectServerResponse
	(*RouteRequestMessage)(nil),      // 17: greatestworks.gateway.RouteRequestMessage
	(*RouteResponseMessage)(nil),     // 18: greatestworks.gateway.RouteResponseMessage
	(*ConnectionRequest)(nil),        // 19: greatestworks.gateway.ConnectionRequest
	(*ConnectionResponse)(nil),       // 20: greatestworks.gateway.ConnectionResponse
	(*HeartbeatRequest)(nil),         // 21: greatestworks.gateway.HeartbeatRequest
	(*HeartbeatResponse)(nil),        // 22: greatestworks.gateway.HeartbeatResponse
	(*GetGatewayStatusRequest)(nil),  // 23: greatestworks.gateway.GetGatewayStatusRequest
	(*GetGatewayStatusResponse)(nil), // 24: greatestworks.gateway.GetGatewayStatusResponse
	(*RateLimitRequest)(nil),         // 25: greatestworks.gateway.RateLimitRequest
	(*RateLimitResponse)(nil),        // 26: greatestworks.gateway.RateLimitResponse
	(*GetSessionInfoRequest)(nil),    // 27: greatestworks.gateway.GetSessionInfoRequest
	(*GetSessionInfoResponse)(nil),   // 28: greatestworks.gateway.GetSessionInfoResponse
	(*ServerInfo)(nil),               // 29: greatestworks.gateway.ServerInfo
	(*UserProfile)(nil),              // 30: greatestworks.gateway.UserProfile
	(*GatewayStatus)(nil),            // 31: greatestworks.gateway.GatewayStatus
	(*GatewayMetrics)(nil),           // 32: greatestworks.gateway.GatewayMetrics
	(*ServiceStatus)(nil),            // 33: greatestworks.gateway.ServiceStatus
	(*SessionInfo)(nil),              // 34: greatestworks.gateway.SessionInfo
	nil,                              // 35: greatestworks.gateway.AuthenticateRequest.MetadataEntry
	nil,                              // 36: greatestworks.gateway.RouteRequestMessage.HeadersEntry
	nil,                              // 37: greatestworks.gateway.RouteResponseMessage.HeadersEntry
	nil,                              // 38: greatestworks.gateway.ConnectionRequest.ConnectionParamsEntry
	nil,                              // 39: greatestworks.gateway.HeartbeatRequest.StatusInfoEntry
	nil,                              // 40: greatestworks.gateway.ServerInfo.FeaturesEntry
	nil,                              // 41: greatestworks.gateway.UserProfile.PreferencesEntry
	nil,                              // 42: greatestworks.gateway.GatewayMetrics.RequestsPerServiceEntry
	nil,                              // 43: greatestworks.gateway.GatewayMetrics.ResponseTimesPerServiceEntry
	nil,                              // 44: greatestworks.gateway.ServiceStatus.MetadataEntry
	nil,                              // 45: greatestworks.gateway.SessionInfo.SessionDataEntry
	(*common.CommonResponse)(nil),    // 46: greatestworks.common.CommonResponse
}
var file_proto_gateway_proto_depIdxs = []int32{
	0,  // 0: greatestworks.gateway.AuthenticateRequest.auth_type:type_name -> greatestworks.gateway.AuthType
	35, // 1: greatestworks.gateway.AuthenticateRequest.metadata:type_name -> greatestworks.gateway.AuthenticateRequest.MetadataEntry
	46, // 2: greatestworks.gateway.AuthenticateResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 3: greatestworks.gateway.AuthenticateResponse.user_profile:type_name -> greatestworks.gateway.UserProfile
	46, // 4: greatestworks.gateway.RefreshTokenResponse.common:type_name -> greatestworks.common.CommonResponse
	46, // 5: greatestworks.gateway.LogoutResponse.common:type_name -> greatestworks.common.CommonResponse
	1,  // 6: greatestworks.gateway.GetServerListRequest.server_type:type_name -> greatestworks.gateway.ServerType
	46, // 7: greatestworks.gateway.GetServerListResponse.common:type_name -> greatestworks.common.CommonResponse
	29, // 8: greatestworks.gateway.GetServerListResponse.servers:type_name -> greatestworks.gateway.ServerInfo
	46, // 9: greatestworks.gateway.SelectServerResponse.common:type_name -> greatestworks.common.CommonResponse
	29, // 10: greatestworks.gateway.SelectServerResponse.server_info:type_name -> greatestworks.gateway.ServerInfo
	36, // 11: greatestworks.gateway.RouteRequestMessage.headers:type_name -> greatestworks.gateway.RouteRequestMessage.HeadersEntry
	37, // 12: greatestworks.gateway.RouteResponseMessage.headers:type_name -> greatestworks.gateway.RouteResponseMessage.HeadersEntry
	3,  // 13: greatestworks.gateway.ConnectionRequest.connection_type:type_name -> greatestworks.gateway.ConnectionType
	38, // 14: greatestworks.gateway.ConnectionRequest.connection_params:type_name -> greatestworks.gateway.ConnectionRequest.ConnectionParamsEntry
	46, // 15: greatestworks.gateway.ConnectionResponse.common:type_name -> greatestworks.common.CommonResponse
	39, // 16: greatestworks.gateway.HeartbeatRequest.status_info:type_name -> greatestworks.gateway.HeartbeatRequest.StatusInfoEntry
	46, // 17: greatestworks.gateway.HeartbeatResponse.common:type_name -> greatestworks.common.CommonResponse
	31, // 18: greatestworks.gateway.HeartbeatResponse.gateway_status:type_name -> greatestworks.gateway.GatewayStatus
	46, // 19: greatestworks.gateway.GetGatewayStatusResponse.common:type_name -> greatestworks.common.CommonResponse
	31, // 20: greatestworks.gateway.GetGatewayStatusResponse.status:type_name -> greatestworks.gateway.GatewayStatus
	32, // 21: greatestworks.gateway.GetGatewayStatusResponse.metrics:type_name -> greatestworks.gateway.GatewayMetrics
	33, // 22: greatestworks.gateway.GetGatewayStatusResponse.backend_services:type_name -> greatestworks.gateway.ServiceStatus
	46, // 23: greatestworks.gateway.GetSessionInfoResponse.common:type_name -> greatestworks.common.CommonResponse
	34, // 24: greatestworks.gateway.GetSessionInfoResponse.session_info:type_name -> greatestworks.gateway.SessionInfo
	1,  // 25: greatestworks.gateway.ServerInfo.server_type:type_name -> greatestworks.gateway.ServerType
	2,  // 26: greatestworks.gateway.ServerInfo.status:type_name -> greatestworks.gateway.ServerStatus
	40, // 27: greatestworks.gateway.ServerInfo.features:type_name -> greatestworks.gateway.ServerInfo.FeaturesEntry
	4,  // 28: greatestworks.gateway.UserProfile.user_level:type_name -> greatestworks.gateway.UserLevel
	41, // 29: greatestworks.gateway.UserProfile.preferences:type_name -> greatestworks.gateway.UserProfile.PreferencesEntry
	42, // 30: greatestworks.gateway.GatewayMetrics.requests_per_service:type_name -> greatestworks.gateway.GatewayMetrics.RequestsPerServiceEntry
	43, // 31: greatestworks.gateway.GatewayMetrics.response_times_per_service:type_name -> greatestworks.gateway.GatewayMetrics.ResponseTimesPerServiceEntry
	5,  // 32: greatestworks.gateway.ServiceStatus.health:type_name -> greatestworks.gateway.ServiceHealth
	44, // 33: greatestworks.gateway.ServiceStatus.metadata:type_name -> greatestworks.gateway.ServiceStatus.MetadataEntry
	6,  // 34: greatestworks.gateway.SessionInfo.status:type_name -> greatestworks.gateway.SessionStatus
	45, // 35: greatestworks.gateway.SessionInfo.session_data:type_name -> greatestworks.gateway.SessionInfo.SessionDataEntry
	7,  // 36: greatestworks.gateway.GatewayService.Authenticate:input_type -> greatestworks.gateway.AuthenticateRequest
	9,  // 37: greatestworks.gateway.GatewayService.RefreshToken:input_type -> greatestworks.gateway.RefreshTokenRequest
	11, // 38: greatestworks.gateway.GatewayService.Logout:input_type -> greatestworks.gateway.LogoutRequest
	13, // 39: greatestworks.gateway.GatewayService.GetServerList:input_type -> greatestworks.gateway.GetServerListRequest
	15, // 40: greatestworks.gateway.GatewayService.SelectServer:input_type -> greatestworks.gateway.SelectServerRequest
	17, // 41: greatestworks.gateway.GatewayService.RouteRequest:input_type -> greatestworks.gateway.RouteRequestMessage
	19, // 42: greatestworks.gateway.GatewayService.EstablishConnection:input_type -> greatestworks.gateway.ConnectionRequest
	21, // 43: greatestworks.gateway.GatewayService.Heartbeat:input_type -> greatestworks.gateway.HeartbeatRequest
	23, // 44: greatestworks.gateway.GatewayService.GetGatewayStatus:input_type -> greatestworks.gateway.GetGatewayStatusRequest
	25, // 45: greatestworks.gateway.GatewayService.RateLimitCheck:input_type -> greatestworks.gateway.RateLimitRequest
	27, // 46: greatestworks.gateway.GatewayService.GetSessionInfo:input_type -> greatestworks.gateway.GetSessionInfoRequest
	8,  // 47: greatestworks.gateway.GatewayService.Authenticate:output_type -> greatestworks.gateway.AuthenticateResponse
	10, // 48: greatestworks.gateway.GatewayService.RefreshToken:output_type -> greatestworks.gateway.RefreshTokenResponse
	12, // 49: greatestworks.gateway.GatewayService.Logout:output_type -> greatestworks.gateway.LogoutResponse
	14, // 50: greatestworks.gateway.GatewayService.GetServerList:output_type -> greatestworks.gateway.GetServerListResponse
	16, // 51: greatestworks.gateway.GatewayService.SelectServer:output_type -> greatestworks.gateway.SelectServerResponse
	18, // 52: greatestworks.gateway.GatewayService.RouteRequest:output_type -> greatestworks.gateway.RouteResponseMessage
	20, // 53: greatestworks.gateway.GatewayService.EstablishConnection:output_type -> greatestworks.gateway.ConnectionResponse
	22, // 54: greatestworks.gateway.GatewayService.Heartbeat:output_type -> greatestworks.gateway.HeartbeatResponse
	24, // 55: greatestworks.gateway.GatewayService.GetGatewayStatus:output_type -> greatestworks.gateway.GetGatewayStatusResponse
	26, // 56: greatestworks.gateway.GatewayService.RateLimitCheck:output_type -> greatestworks.gateway.RateLimitResponse
	28, // 57: greatestworks.gateway.GatewayService.GetSessionInfo:output_type -> greatestworks.gateway.GetSessionInfoResponse
	47, // [47:58] is the sub-list for method output_type
	36, // [36:47] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_proto_gateway_proto_init() }
func file_proto_gateway_proto_init() {
	if File_proto_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_gateway_proto_rawDesc), len(file_proto_gateway_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_gateway_proto_goTypes,
		DependencyIndexes: file_proto_gateway_proto_depIdxs,
		EnumInfos:         file_proto_gateway_proto_enumTypes,
		MessageInfos:      file_proto_gateway_proto_msgTypes,
	}.Build()
	File_proto_gateway_proto = out.File
	file_proto_gateway_proto_goTypes = nil
	file_proto_gateway_proto_depIdxs = nil
}
