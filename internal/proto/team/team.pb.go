// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/team.proto

package team

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "greatestworks/internal/proto/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 团队类型枚举
type TeamType int32

const (
	TeamType_TEAM_TYPE_UNSPECIFIED TeamType = 0
	TeamType_TEAM_TYPE_CASUAL      TeamType = 1 // 休闲团队
	TeamType_TEAM_TYPE_COMPETITIVE TeamType = 2 // 竞技团队
	TeamType_TEAM_TYPE_PVE         TeamType = 3 // PVE团队
	TeamType_TEAM_TYPE_PVP         TeamType = 4 // PVP团队
	TeamType_TEAM_TYPE_GUILD       TeamType = 5 // 公会
	TeamType_TEAM_TYPE_PARTY       TeamType = 6 // 小队
	TeamType_TEAM_TYPE_RAID        TeamType = 7 // 团本队伍
	TeamType_TEAM_TYPE_TOURNAMENT  TeamType = 8 // 锦标赛队伍
)

// Enum value maps for TeamType.
var (
	TeamType_name = map[int32]string{
		0: "TEAM_TYPE_UNSPECIFIED",
		1: "TEAM_TYPE_CASUAL",
		2: "TEAM_TYPE_COMPETITIVE",
		3: "TEAM_TYPE_PVE",
		4: "TEAM_TYPE_PVP",
		5: "TEAM_TYPE_GUILD",
		6: "TEAM_TYPE_PARTY",
		7: "TEAM_TYPE_RAID",
		8: "TEAM_TYPE_TOURNAMENT",
	}
	TeamType_value = map[string]int32{
		"TEAM_TYPE_UNSPECIFIED": 0,
		"TEAM_TYPE_CASUAL":      1,
		"TEAM_TYPE_COMPETITIVE": 2,
		"TEAM_TYPE_PVE":         3,
		"TEAM_TYPE_PVP":         4,
		"TEAM_TYPE_GUILD":       5,
		"TEAM_TYPE_PARTY":       6,
		"TEAM_TYPE_RAID":        7,
		"TEAM_TYPE_TOURNAMENT":  8,
	}
)

func (x TeamType) Enum() *TeamType {
	p := new(TeamType)
	*p = x
	return p
}

func (x TeamType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeamType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_team_proto_enumTypes[0].Descriptor()
}

func (TeamType) Type() protoreflect.EnumType {
	return &file_proto_team_proto_enumTypes[0]
}

func (x TeamType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeamType.Descriptor instead.
func (TeamType) EnumDescriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{0}
}

// 团队状态枚举
type TeamStatus int32

const (
	TeamStatus_TEAM_STATUS_UNSPECIFIED TeamStatus = 0
	TeamStatus_TEAM_STATUS_ACTIVE      TeamStatus = 1 // 活跃
	TeamStatus_TEAM_STATUS_INACTIVE    TeamStatus = 2 // 不活跃
	TeamStatus_TEAM_STATUS_DISBANDED   TeamStatus = 3 // 已解散
	TeamStatus_TEAM_STATUS_SUSPENDED   TeamStatus = 4 // 已暂停
	TeamStatus_TEAM_STATUS_RECRUITING  TeamStatus = 5 // 招募中
	TeamStatus_TEAM_STATUS_FULL        TeamStatus = 6 // 已满员
)

// Enum value maps for TeamStatus.
var (
	TeamStatus_name = map[int32]string{
		0: "TEAM_STATUS_UNSPECIFIED",
		1: "TEAM_STATUS_ACTIVE",
		2: "TEAM_STATUS_INACTIVE",
		3: "TEAM_STATUS_DISBANDED",
		4: "TEAM_STATUS_SUSPENDED",
		5: "TEAM_STATUS_RECRUITING",
		6: "TEAM_STATUS_FULL",
	}
	TeamStatus_value = map[string]int32{
		"TEAM_STATUS_UNSPECIFIED": 0,
		"TEAM_STATUS_ACTIVE":      1,
		"TEAM_STATUS_INACTIVE":    2,
		"TEAM_STATUS_DISBANDED":   3,
		"TEAM_STATUS_SUSPENDED":   4,
		"TEAM_STATUS_RECRUITING":  5,
		"TEAM_STATUS_FULL":        6,
	}
)

func (x TeamStatus) Enum() *TeamStatus {
	p := new(TeamStatus)
	*p = x
	return p
}

func (x TeamStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeamStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_team_proto_enumTypes[1].Descriptor()
}

func (TeamStatus) Type() protoreflect.EnumType {
	return &file_proto_team_proto_enumTypes[1]
}

func (x TeamStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeamStatus.Descriptor instead.
func (TeamStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{1}
}

// 成员角色枚举
type MemberRole int32

const (
	MemberRole_MEMBER_ROLE_UNSPECIFIED MemberRole = 0
	MemberRole_MEMBER_ROLE_LEADER      MemberRole = 1 // 队长
	MemberRole_MEMBER_ROLE_OFFICER     MemberRole = 2 // 副队长
	MemberRole_MEMBER_ROLE_VETERAN     MemberRole = 3 // 老队员
	MemberRole_MEMBER_ROLE_MEMBER      MemberRole = 4 // 普通成员
	MemberRole_MEMBER_ROLE_RECRUIT     MemberRole = 5 // 新成员
)

// Enum value maps for MemberRole.
var (
	MemberRole_name = map[int32]string{
		0: "MEMBER_ROLE_UNSPECIFIED",
		1: "MEMBER_ROLE_LEADER",
		2: "MEMBER_ROLE_OFFICER",
		3: "MEMBER_ROLE_VETERAN",
		4: "MEMBER_ROLE_MEMBER",
		5: "MEMBER_ROLE_RECRUIT",
	}
	MemberRole_value = map[string]int32{
		"MEMBER_ROLE_UNSPECIFIED": 0,
		"MEMBER_ROLE_LEADER":      1,
		"MEMBER_ROLE_OFFICER":     2,
		"MEMBER_ROLE_VETERAN":     3,
		"MEMBER_ROLE_MEMBER":      4,
		"MEMBER_ROLE_RECRUIT":     5,
	}
)

func (x MemberRole) Enum() *MemberRole {
	p := new(MemberRole)
	*p = x
	return p
}

func (x MemberRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_team_proto_enumTypes[2].Descriptor()
}

func (MemberRole) Type() protoreflect.EnumType {
	return &file_proto_team_proto_enumTypes[2]
}

func (x MemberRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberRole.Descriptor instead.
func (MemberRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{2}
}

// 成员状态枚举
type MemberStatus int32

const (
	MemberStatus_MEMBER_STATUS_UNSPECIFIED MemberStatus = 0
	MemberStatus_MEMBER_STATUS_ONLINE      MemberStatus = 1 // 在线
	MemberStatus_MEMBER_STATUS_OFFLINE     MemberStatus = 2 // 离线
	MemberStatus_MEMBER_STATUS_IN_BATTLE   MemberStatus = 3 // 战斗中
	MemberStatus_MEMBER_STATUS_AFK         MemberStatus = 4 // 暂离
	MemberStatus_MEMBER_STATUS_BUSY        MemberStatus = 5 // 忙碌
)

// Enum value maps for MemberStatus.
var (
	MemberStatus_name = map[int32]string{
		0: "MEMBER_STATUS_UNSPECIFIED",
		1: "MEMBER_STATUS_ONLINE",
		2: "MEMBER_STATUS_OFFLINE",
		3: "MEMBER_STATUS_IN_BATTLE",
		4: "MEMBER_STATUS_AFK",
		5: "MEMBER_STATUS_BUSY",
	}
	MemberStatus_value = map[string]int32{
		"MEMBER_STATUS_UNSPECIFIED": 0,
		"MEMBER_STATUS_ONLINE":      1,
		"MEMBER_STATUS_OFFLINE":     2,
		"MEMBER_STATUS_IN_BATTLE":   3,
		"MEMBER_STATUS_AFK":         4,
		"MEMBER_STATUS_BUSY":        5,
	}
)

func (x MemberStatus) Enum() *MemberStatus {
	p := new(MemberStatus)
	*p = x
	return p
}

func (x MemberStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MemberStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_team_proto_enumTypes[3].Descriptor()
}

func (MemberStatus) Type() protoreflect.EnumType {
	return &file_proto_team_proto_enumTypes[3]
}

func (x MemberStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MemberStatus.Descriptor instead.
func (MemberStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{3}
}

// 邀请状态枚举
type InvitationStatus int32

const (
	InvitationStatus_INVITATION_STATUS_UNSPECIFIED InvitationStatus = 0
	InvitationStatus_INVITATION_STATUS_PENDING     InvitationStatus = 1 // 待处理
	InvitationStatus_INVITATION_STATUS_ACCEPTED    InvitationStatus = 2 // 已接受
	InvitationStatus_INVITATION_STATUS_REJECTED    InvitationStatus = 3 // 已拒绝
	InvitationStatus_INVITATION_STATUS_EXPIRED     InvitationStatus = 4 // 已过期
	InvitationStatus_INVITATION_STATUS_CANCELLED   InvitationStatus = 5 // 已取消
)

// Enum value maps for InvitationStatus.
var (
	InvitationStatus_name = map[int32]string{
		0: "INVITATION_STATUS_UNSPECIFIED",
		1: "INVITATION_STATUS_PENDING",
		2: "INVITATION_STATUS_ACCEPTED",
		3: "INVITATION_STATUS_REJECTED",
		4: "INVITATION_STATUS_EXPIRED",
		5: "INVITATION_STATUS_CANCELLED",
	}
	InvitationStatus_value = map[string]int32{
		"INVITATION_STATUS_UNSPECIFIED": 0,
		"INVITATION_STATUS_PENDING":     1,
		"INVITATION_STATUS_ACCEPTED":    2,
		"INVITATION_STATUS_REJECTED":    3,
		"INVITATION_STATUS_EXPIRED":     4,
		"INVITATION_STATUS_CANCELLED":   5,
	}
)

func (x InvitationStatus) Enum() *InvitationStatus {
	p := new(InvitationStatus)
	*p = x
	return p
}

func (x InvitationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvitationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_team_proto_enumTypes[4].Descriptor()
}

func (InvitationStatus) Type() protoreflect.EnumType {
	return &file_proto_team_proto_enumTypes[4]
}

func (x InvitationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvitationStatus.Descriptor instead.
func (InvitationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{4}
}

// 申请状态枚举
type ApplicationStatus int32

const (
	ApplicationStatus_APPLICATION_STATUS_UNSPECIFIED ApplicationStatus = 0
	ApplicationStatus_APPLICATION_STATUS_PENDING     ApplicationStatus = 1 // 待审核
	ApplicationStatus_APPLICATION_STATUS_APPROVED    ApplicationStatus = 2 // 已批准
	ApplicationStatus_APPLICATION_STATUS_REJECTED    ApplicationStatus = 3 // 已拒绝
	ApplicationStatus_APPLICATION_STATUS_WITHDRAWN   ApplicationStatus = 4 // 已撤回
)

// Enum value maps for ApplicationStatus.
var (
	ApplicationStatus_name = map[int32]string{
		0: "APPLICATION_STATUS_UNSPECIFIED",
		1: "APPLICATION_STATUS_PENDING",
		2: "APPLICATION_STATUS_APPROVED",
		3: "APPLICATION_STATUS_REJECTED",
		4: "APPLICATION_STATUS_WITHDRAWN",
	}
	ApplicationStatus_value = map[string]int32{
		"APPLICATION_STATUS_UNSPECIFIED": 0,
		"APPLICATION_STATUS_PENDING":     1,
		"APPLICATION_STATUS_APPROVED":    2,
		"APPLICATION_STATUS_REJECTED":    3,
		"APPLICATION_STATUS_WITHDRAWN":   4,
	}
)

func (x ApplicationStatus) Enum() *ApplicationStatus {
	p := new(ApplicationStatus)
	*p = x
	return p
}

func (x ApplicationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_team_proto_enumTypes[5].Descriptor()
}

func (ApplicationStatus) Type() protoreflect.EnumType {
	return &file_proto_team_proto_enumTypes[5]
}

func (x ApplicationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationStatus.Descriptor instead.
func (ApplicationStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{5}
}

// 创建团队请求
type CreateTeamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatorId     string                 `protobuf:"bytes,1,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	TeamName      string                 `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TeamType      TeamType               `protobuf:"varint,4,opt,name=team_type,json=teamType,proto3,enum=greatestworks.team.TeamType" json:"team_type,omitempty"`
	MaxMembers    int32                  `protobuf:"varint,5,opt,name=max_members,json=maxMembers,proto3" json:"max_members,omitempty"`
	IsPublic      bool                   `protobuf:"varint,6,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	Password      string                 `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Settings      map[string]string      `protobuf:"bytes,8,rep,name=settings,proto3" json:"settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeamRequest) Reset() {
	*x = CreateTeamRequest{}
	mi := &file_proto_team_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamRequest) ProtoMessage() {}

func (x *CreateTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeamRequest) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *CreateTeamRequest) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *CreateTeamRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTeamRequest) GetTeamType() TeamType {
	if x != nil {
		return x.TeamType
	}
	return TeamType_TEAM_TYPE_UNSPECIFIED
}

func (x *CreateTeamRequest) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *CreateTeamRequest) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *CreateTeamRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateTeamRequest) GetSettings() map[string]string {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 创建团队响应
type CreateTeamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TeamId        string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamInfo      *TeamInfo              `protobuf:"bytes,3,opt,name=team_info,json=teamInfo,proto3" json:"team_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeamResponse) Reset() {
	*x = CreateTeamResponse{}
	mi := &file_proto_team_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamResponse) ProtoMessage() {}

func (x *CreateTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeamResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CreateTeamResponse) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *CreateTeamResponse) GetTeamInfo() *TeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

// 加入团队请求
type JoinTeamRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TeamId         string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Password       string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` // 如果是私有团队
	InvitationCode string                 `protobuf:"bytes,4,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JoinTeamRequest) Reset() {
	*x = JoinTeamRequest{}
	mi := &file_proto_team_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTeamRequest) ProtoMessage() {}

func (x *JoinTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTeamRequest.ProtoReflect.Descriptor instead.
func (*JoinTeamRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{2}
}

func (x *JoinTeamRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinTeamRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *JoinTeamRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *JoinTeamRequest) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

// 加入团队响应
type JoinTeamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TeamInfo      *TeamInfo              `protobuf:"bytes,2,opt,name=team_info,json=teamInfo,proto3" json:"team_info,omitempty"`
	MemberInfo    *TeamMember            `protobuf:"bytes,3,opt,name=member_info,json=memberInfo,proto3" json:"member_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinTeamResponse) Reset() {
	*x = JoinTeamResponse{}
	mi := &file_proto_team_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinTeamResponse) ProtoMessage() {}

func (x *JoinTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinTeamResponse.ProtoReflect.Descriptor instead.
func (*JoinTeamResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{3}
}

func (x *JoinTeamResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *JoinTeamResponse) GetTeamInfo() *TeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

func (x *JoinTeamResponse) GetMemberInfo() *TeamMember {
	if x != nil {
		return x.MemberInfo
	}
	return nil
}

// 离开团队请求
type LeaveTeamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TeamId        string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveTeamRequest) Reset() {
	*x = LeaveTeamRequest{}
	mi := &file_proto_team_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTeamRequest) ProtoMessage() {}

func (x *LeaveTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTeamRequest.ProtoReflect.Descriptor instead.
func (*LeaveTeamRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveTeamRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LeaveTeamRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

// 离开团队响应
type LeaveTeamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveTeamResponse) Reset() {
	*x = LeaveTeamResponse{}
	mi := &file_proto_team_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveTeamResponse) ProtoMessage() {}

func (x *LeaveTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveTeamResponse.ProtoReflect.Descriptor instead.
func (*LeaveTeamResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{5}
}

func (x *LeaveTeamResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 邀请玩家请求
type InvitePlayerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InviterId      string                 `protobuf:"bytes,1,opt,name=inviter_id,json=inviterId,proto3" json:"inviter_id,omitempty"`
	TeamId         string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	Message        string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InvitePlayerRequest) Reset() {
	*x = InvitePlayerRequest{}
	mi := &file_proto_team_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerRequest) ProtoMessage() {}

func (x *InvitePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerRequest.ProtoReflect.Descriptor instead.
func (*InvitePlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{6}
}

func (x *InvitePlayerRequest) GetInviterId() string {
	if x != nil {
		return x.InviterId
	}
	return ""
}

func (x *InvitePlayerRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *InvitePlayerRequest) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

func (x *InvitePlayerRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 邀请玩家响应
type InvitePlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	InvitationId  string                 `protobuf:"bytes,2,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvitePlayerResponse) Reset() {
	*x = InvitePlayerResponse{}
	mi := &file_proto_team_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerResponse) ProtoMessage() {}

func (x *InvitePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerResponse.ProtoReflect.Descriptor instead.
func (*InvitePlayerResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{7}
}

func (x *InvitePlayerResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *InvitePlayerResponse) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

// 踢出玩家请求
type KickPlayerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	KickerId       string                 `protobuf:"bytes,1,opt,name=kicker_id,json=kickerId,proto3" json:"kicker_id,omitempty"`
	TeamId         string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	Reason         string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KickPlayerRequest) Reset() {
	*x = KickPlayerRequest{}
	mi := &file_proto_team_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerRequest) ProtoMessage() {}

func (x *KickPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerRequest.ProtoReflect.Descriptor instead.
func (*KickPlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{8}
}

func (x *KickPlayerRequest) GetKickerId() string {
	if x != nil {
		return x.KickerId
	}
	return ""
}

func (x *KickPlayerRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *KickPlayerRequest) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

func (x *KickPlayerRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 踢出玩家响应
type KickPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickPlayerResponse) Reset() {
	*x = KickPlayerResponse{}
	mi := &file_proto_team_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerResponse) ProtoMessage() {}

func (x *KickPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerResponse.ProtoReflect.Descriptor instead.
func (*KickPlayerResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{9}
}

func (x *KickPlayerResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 转让队长请求
type TransferLeadershipRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CurrentLeaderId string                 `protobuf:"bytes,1,opt,name=current_leader_id,json=currentLeaderId,proto3" json:"current_leader_id,omitempty"`
	TeamId          string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	NewLeaderId     string                 `protobuf:"bytes,3,opt,name=new_leader_id,json=newLeaderId,proto3" json:"new_leader_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferLeadershipRequest) Reset() {
	*x = TransferLeadershipRequest{}
	mi := &file_proto_team_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferLeadershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferLeadershipRequest) ProtoMessage() {}

func (x *TransferLeadershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferLeadershipRequest.ProtoReflect.Descriptor instead.
func (*TransferLeadershipRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{10}
}

func (x *TransferLeadershipRequest) GetCurrentLeaderId() string {
	if x != nil {
		return x.CurrentLeaderId
	}
	return ""
}

func (x *TransferLeadershipRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *TransferLeadershipRequest) GetNewLeaderId() string {
	if x != nil {
		return x.NewLeaderId
	}
	return ""
}

// 转让队长响应
type TransferLeadershipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewLeader     *TeamMember            `protobuf:"bytes,2,opt,name=new_leader,json=newLeader,proto3" json:"new_leader,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferLeadershipResponse) Reset() {
	*x = TransferLeadershipResponse{}
	mi := &file_proto_team_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferLeadershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferLeadershipResponse) ProtoMessage() {}

func (x *TransferLeadershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferLeadershipResponse.ProtoReflect.Descriptor instead.
func (*TransferLeadershipResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{11}
}

func (x *TransferLeadershipResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *TransferLeadershipResponse) GetNewLeader() *TeamMember {
	if x != nil {
		return x.NewLeader
	}
	return nil
}

// 获取团队信息请求
type GetTeamInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamId        string                 `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 查询者ID，用于权限检查
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeamInfoRequest) Reset() {
	*x = GetTeamInfoRequest{}
	mi := &file_proto_team_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamInfoRequest) ProtoMessage() {}

func (x *GetTeamInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTeamInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{12}
}

func (x *GetTeamInfoRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *GetTeamInfoRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// 获取团队信息响应
type GetTeamInfoResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Common              *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TeamInfo            *TeamInfo              `protobuf:"bytes,2,opt,name=team_info,json=teamInfo,proto3" json:"team_info,omitempty"`
	Members             []*TeamMember          `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	PendingInvitations  []*TeamInvitation      `protobuf:"bytes,4,rep,name=pending_invitations,json=pendingInvitations,proto3" json:"pending_invitations,omitempty"`
	PendingApplications []*TeamApplication     `protobuf:"bytes,5,rep,name=pending_applications,json=pendingApplications,proto3" json:"pending_applications,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetTeamInfoResponse) Reset() {
	*x = GetTeamInfoResponse{}
	mi := &file_proto_team_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamInfoResponse) ProtoMessage() {}

func (x *GetTeamInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTeamInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{13}
}

func (x *GetTeamInfoResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetTeamInfoResponse) GetTeamInfo() *TeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

func (x *GetTeamInfoResponse) GetMembers() []*TeamMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GetTeamInfoResponse) GetPendingInvitations() []*TeamInvitation {
	if x != nil {
		return x.PendingInvitations
	}
	return nil
}

func (x *GetTeamInfoResponse) GetPendingApplications() []*TeamApplication {
	if x != nil {
		return x.PendingApplications
	}
	return nil
}

// 搜索团队请求
type SearchTeamsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	TeamType      TeamType               `protobuf:"varint,2,opt,name=team_type,json=teamType,proto3,enum=greatestworks.team.TeamType" json:"team_type,omitempty"`
	OnlyPublic    bool                   `protobuf:"varint,3,opt,name=only_public,json=onlyPublic,proto3" json:"only_public,omitempty"`
	MinLevel      int32                  `protobuf:"varint,4,opt,name=min_level,json=minLevel,proto3" json:"min_level,omitempty"`
	MaxLevel      int32                  `protobuf:"varint,5,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTeamsRequest) Reset() {
	*x = SearchTeamsRequest{}
	mi := &file_proto_team_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamsRequest) ProtoMessage() {}

func (x *SearchTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamsRequest.ProtoReflect.Descriptor instead.
func (*SearchTeamsRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{14}
}

func (x *SearchTeamsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchTeamsRequest) GetTeamType() TeamType {
	if x != nil {
		return x.TeamType
	}
	return TeamType_TEAM_TYPE_UNSPECIFIED
}

func (x *SearchTeamsRequest) GetOnlyPublic() bool {
	if x != nil {
		return x.OnlyPublic
	}
	return false
}

func (x *SearchTeamsRequest) GetMinLevel() int32 {
	if x != nil {
		return x.MinLevel
	}
	return 0
}

func (x *SearchTeamsRequest) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *SearchTeamsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchTeamsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 搜索团队响应
type SearchTeamsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Teams         []*TeamInfo            `protobuf:"bytes,2,rep,name=teams,proto3" json:"teams,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchTeamsResponse) Reset() {
	*x = SearchTeamsResponse{}
	mi := &file_proto_team_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTeamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTeamsResponse) ProtoMessage() {}

func (x *SearchTeamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTeamsResponse.ProtoReflect.Descriptor instead.
func (*SearchTeamsResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{15}
}

func (x *SearchTeamsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SearchTeamsResponse) GetTeams() []*TeamInfo {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *SearchTeamsResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 更新团队设置请求
type UpdateTeamSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TeamId        string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Settings      *TeamSettings          `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTeamSettingsRequest) Reset() {
	*x = UpdateTeamSettingsRequest{}
	mi := &file_proto_team_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTeamSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamSettingsRequest) ProtoMessage() {}

func (x *UpdateTeamSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateTeamSettingsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *UpdateTeamSettingsRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *UpdateTeamSettingsRequest) GetSettings() *TeamSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 更新团队设置响应
type UpdateTeamSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewSettings   *TeamSettings          `protobuf:"bytes,2,opt,name=new_settings,json=newSettings,proto3" json:"new_settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTeamSettingsResponse) Reset() {
	*x = UpdateTeamSettingsResponse{}
	mi := &file_proto_team_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTeamSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamSettingsResponse) ProtoMessage() {}

func (x *UpdateTeamSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateTeamSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateTeamSettingsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *UpdateTeamSettingsResponse) GetNewSettings() *TeamSettings {
	if x != nil {
		return x.NewSettings
	}
	return nil
}

// 处理邀请请求
type HandleInvitationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	InvitationId  string                 `protobuf:"bytes,2,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	Accept        bool                   `protobuf:"varint,3,opt,name=accept,proto3" json:"accept,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleInvitationRequest) Reset() {
	*x = HandleInvitationRequest{}
	mi := &file_proto_team_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleInvitationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleInvitationRequest) ProtoMessage() {}

func (x *HandleInvitationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleInvitationRequest.ProtoReflect.Descriptor instead.
func (*HandleInvitationRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{18}
}

func (x *HandleInvitationRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *HandleInvitationRequest) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

func (x *HandleInvitationRequest) GetAccept() bool {
	if x != nil {
		return x.Accept
	}
	return false
}

// 处理邀请响应
type HandleInvitationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TeamInfo      *TeamInfo              `protobuf:"bytes,2,opt,name=team_info,json=teamInfo,proto3" json:"team_info,omitempty"` // 如果接受邀请
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleInvitationResponse) Reset() {
	*x = HandleInvitationResponse{}
	mi := &file_proto_team_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleInvitationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleInvitationResponse) ProtoMessage() {}

func (x *HandleInvitationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleInvitationResponse.ProtoReflect.Descriptor instead.
func (*HandleInvitationResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{19}
}

func (x *HandleInvitationResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *HandleInvitationResponse) GetTeamInfo() *TeamInfo {
	if x != nil {
		return x.TeamInfo
	}
	return nil
}

// 申请加入团队请求
type ApplyToJoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TeamId        string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyToJoinRequest) Reset() {
	*x = ApplyToJoinRequest{}
	mi := &file_proto_team_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyToJoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyToJoinRequest) ProtoMessage() {}

func (x *ApplyToJoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyToJoinRequest.ProtoReflect.Descriptor instead.
func (*ApplyToJoinRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{20}
}

func (x *ApplyToJoinRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ApplyToJoinRequest) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *ApplyToJoinRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 申请加入团队响应
type ApplyToJoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyToJoinResponse) Reset() {
	*x = ApplyToJoinResponse{}
	mi := &file_proto_team_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyToJoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyToJoinResponse) ProtoMessage() {}

func (x *ApplyToJoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyToJoinResponse.ProtoReflect.Descriptor instead.
func (*ApplyToJoinResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{21}
}

func (x *ApplyToJoinResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ApplyToJoinResponse) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

// 处理申请请求
type HandleApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HandlerId     string                 `protobuf:"bytes,1,opt,name=handler_id,json=handlerId,proto3" json:"handler_id,omitempty"`
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Approve       bool                   `protobuf:"varint,3,opt,name=approve,proto3" json:"approve,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleApplicationRequest) Reset() {
	*x = HandleApplicationRequest{}
	mi := &file_proto_team_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleApplicationRequest) ProtoMessage() {}

func (x *HandleApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleApplicationRequest.ProtoReflect.Descriptor instead.
func (*HandleApplicationRequest) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{22}
}

func (x *HandleApplicationRequest) GetHandlerId() string {
	if x != nil {
		return x.HandlerId
	}
	return ""
}

func (x *HandleApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *HandleApplicationRequest) GetApprove() bool {
	if x != nil {
		return x.Approve
	}
	return false
}

func (x *HandleApplicationRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 处理申请响应
type HandleApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewMember     *TeamMember            `protobuf:"bytes,2,opt,name=new_member,json=newMember,proto3" json:"new_member,omitempty"` // 如果批准申请
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleApplicationResponse) Reset() {
	*x = HandleApplicationResponse{}
	mi := &file_proto_team_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleApplicationResponse) ProtoMessage() {}

func (x *HandleApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleApplicationResponse.ProtoReflect.Descriptor instead.
func (*HandleApplicationResponse) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{23}
}

func (x *HandleApplicationResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *HandleApplicationResponse) GetNewMember() *TeamMember {
	if x != nil {
		return x.NewMember
	}
	return nil
}

// 团队信息
type TeamInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamId        string                 `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TeamType      TeamType               `protobuf:"varint,4,opt,name=team_type,json=teamType,proto3,enum=greatestworks.team.TeamType" json:"team_type,omitempty"`
	Status        TeamStatus             `protobuf:"varint,5,opt,name=status,proto3,enum=greatestworks.team.TeamStatus" json:"status,omitempty"`
	LeaderId      string                 `protobuf:"bytes,6,opt,name=leader_id,json=leaderId,proto3" json:"leader_id,omitempty"`
	LeaderName    string                 `protobuf:"bytes,7,opt,name=leader_name,json=leaderName,proto3" json:"leader_name,omitempty"`
	MemberCount   int32                  `protobuf:"varint,8,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	MaxMembers    int32                  `protobuf:"varint,9,opt,name=max_members,json=maxMembers,proto3" json:"max_members,omitempty"`
	AverageLevel  int32                  `protobuf:"varint,10,opt,name=average_level,json=averageLevel,proto3" json:"average_level,omitempty"`
	IsPublic      bool                   `protobuf:"varint,11,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`
	IsRecruiting  bool                   `protobuf:"varint,12,opt,name=is_recruiting,json=isRecruiting,proto3" json:"is_recruiting,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastActivity  int64                  `protobuf:"varint,14,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
	Settings      *TeamSettings          `protobuf:"bytes,15,opt,name=settings,proto3" json:"settings,omitempty"`
	Stats         *TeamStats             `protobuf:"bytes,16,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamInfo) Reset() {
	*x = TeamInfo{}
	mi := &file_proto_team_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamInfo) ProtoMessage() {}

func (x *TeamInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamInfo.ProtoReflect.Descriptor instead.
func (*TeamInfo) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{24}
}

func (x *TeamInfo) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *TeamInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TeamInfo) GetTeamType() TeamType {
	if x != nil {
		return x.TeamType
	}
	return TeamType_TEAM_TYPE_UNSPECIFIED
}

func (x *TeamInfo) GetStatus() TeamStatus {
	if x != nil {
		return x.Status
	}
	return TeamStatus_TEAM_STATUS_UNSPECIFIED
}

func (x *TeamInfo) GetLeaderId() string {
	if x != nil {
		return x.LeaderId
	}
	return ""
}

func (x *TeamInfo) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *TeamInfo) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *TeamInfo) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *TeamInfo) GetAverageLevel() int32 {
	if x != nil {
		return x.AverageLevel
	}
	return 0
}

func (x *TeamInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *TeamInfo) GetIsRecruiting() bool {
	if x != nil {
		return x.IsRecruiting
	}
	return false
}

func (x *TeamInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TeamInfo) GetLastActivity() int64 {
	if x != nil {
		return x.LastActivity
	}
	return 0
}

func (x *TeamInfo) GetSettings() *TeamSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TeamInfo) GetStats() *TeamStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 团队成员
type TeamMember struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PlayerId           string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName         string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Level              int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Role               MemberRole             `protobuf:"varint,4,opt,name=role,proto3,enum=greatestworks.team.MemberRole" json:"role,omitempty"`
	Status             MemberStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=greatestworks.team.MemberStatus" json:"status,omitempty"`
	JoinedAt           int64                  `protobuf:"varint,6,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	LastOnline         int64                  `protobuf:"varint,7,opt,name=last_online,json=lastOnline,proto3" json:"last_online,omitempty"`
	ContributionPoints int32                  `protobuf:"varint,8,opt,name=contribution_points,json=contributionPoints,proto3" json:"contribution_points,omitempty"`
	Position           *common.Position       `protobuf:"bytes,9,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TeamMember) Reset() {
	*x = TeamMember{}
	mi := &file_proto_team_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMember) ProtoMessage() {}

func (x *TeamMember) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMember.ProtoReflect.Descriptor instead.
func (*TeamMember) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{25}
}

func (x *TeamMember) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *TeamMember) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *TeamMember) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TeamMember) GetRole() MemberRole {
	if x != nil {
		return x.Role
	}
	return MemberRole_MEMBER_ROLE_UNSPECIFIED
}

func (x *TeamMember) GetStatus() MemberStatus {
	if x != nil {
		return x.Status
	}
	return MemberStatus_MEMBER_STATUS_UNSPECIFIED
}

func (x *TeamMember) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

func (x *TeamMember) GetLastOnline() int64 {
	if x != nil {
		return x.LastOnline
	}
	return 0
}

func (x *TeamMember) GetContributionPoints() int32 {
	if x != nil {
		return x.ContributionPoints
	}
	return 0
}

func (x *TeamMember) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// 团队邀请
type TeamInvitation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InvitationId  string                 `protobuf:"bytes,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	TeamId        string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName      string                 `protobuf:"bytes,3,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	InviterId     string                 `protobuf:"bytes,4,opt,name=inviter_id,json=inviterId,proto3" json:"inviter_id,omitempty"`
	InviterName   string                 `protobuf:"bytes,5,opt,name=inviter_name,json=inviterName,proto3" json:"inviter_name,omitempty"`
	InviteeId     string                 `protobuf:"bytes,6,opt,name=invitee_id,json=inviteeId,proto3" json:"invitee_id,omitempty"`
	InviteeName   string                 `protobuf:"bytes,7,opt,name=invitee_name,json=inviteeName,proto3" json:"invitee_name,omitempty"`
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Status        InvitationStatus       `protobuf:"varint,11,opt,name=status,proto3,enum=greatestworks.team.InvitationStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeamInvitation) Reset() {
	*x = TeamInvitation{}
	mi := &file_proto_team_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamInvitation) ProtoMessage() {}

func (x *TeamInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamInvitation.ProtoReflect.Descriptor instead.
func (*TeamInvitation) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{26}
}

func (x *TeamInvitation) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

func (x *TeamInvitation) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *TeamInvitation) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *TeamInvitation) GetInviterId() string {
	if x != nil {
		return x.InviterId
	}
	return ""
}

func (x *TeamInvitation) GetInviterName() string {
	if x != nil {
		return x.InviterName
	}
	return ""
}

func (x *TeamInvitation) GetInviteeId() string {
	if x != nil {
		return x.InviteeId
	}
	return ""
}

func (x *TeamInvitation) GetInviteeName() string {
	if x != nil {
		return x.InviteeName
	}
	return ""
}

func (x *TeamInvitation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TeamInvitation) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TeamInvitation) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *TeamInvitation) GetStatus() InvitationStatus {
	if x != nil {
		return x.Status
	}
	return InvitationStatus_INVITATION_STATUS_UNSPECIFIED
}

// 团队申请
type TeamApplication struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId  string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	TeamId         string                 `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	ApplicantId    string                 `protobuf:"bytes,3,opt,name=applicant_id,json=applicantId,proto3" json:"applicant_id,omitempty"`
	ApplicantName  string                 `protobuf:"bytes,4,opt,name=applicant_name,json=applicantName,proto3" json:"applicant_name,omitempty"`
	ApplicantLevel int32                  `protobuf:"varint,5,opt,name=applicant_level,json=applicantLevel,proto3" json:"applicant_level,omitempty"`
	Message        string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Status         ApplicationStatus      `protobuf:"varint,8,opt,name=status,proto3,enum=greatestworks.team.ApplicationStatus" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TeamApplication) Reset() {
	*x = TeamApplication{}
	mi := &file_proto_team_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamApplication) ProtoMessage() {}

func (x *TeamApplication) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamApplication.ProtoReflect.Descriptor instead.
func (*TeamApplication) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{27}
}

func (x *TeamApplication) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *TeamApplication) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *TeamApplication) GetApplicantId() string {
	if x != nil {
		return x.ApplicantId
	}
	return ""
}

func (x *TeamApplication) GetApplicantName() string {
	if x != nil {
		return x.ApplicantName
	}
	return ""
}

func (x *TeamApplication) GetApplicantLevel() int32 {
	if x != nil {
		return x.ApplicantLevel
	}
	return 0
}

func (x *TeamApplication) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TeamApplication) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TeamApplication) GetStatus() ApplicationStatus {
	if x != nil {
		return x.Status
	}
	return ApplicationStatus_APPLICATION_STATUS_UNSPECIFIED
}

// 团队设置
type TeamSettings struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	AutoAcceptApplications bool                   `protobuf:"varint,1,opt,name=auto_accept_applications,json=autoAcceptApplications,proto3" json:"auto_accept_applications,omitempty"`
	MinLevelRequirement    int32                  `protobuf:"varint,2,opt,name=min_level_requirement,json=minLevelRequirement,proto3" json:"min_level_requirement,omitempty"`
	MaxLevelRequirement    int32                  `protobuf:"varint,3,opt,name=max_level_requirement,json=maxLevelRequirement,proto3" json:"max_level_requirement,omitempty"`
	AllowMemberInvite      bool                   `protobuf:"varint,4,opt,name=allow_member_invite,json=allowMemberInvite,proto3" json:"allow_member_invite,omitempty"`
	RequireApproval        bool                   `protobuf:"varint,5,opt,name=require_approval,json=requireApproval,proto3" json:"require_approval,omitempty"`
	WelcomeMessage         string                 `protobuf:"bytes,6,opt,name=welcome_message,json=welcomeMessage,proto3" json:"welcome_message,omitempty"`
	Tags                   []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	CustomSettings         map[string]string      `protobuf:"bytes,8,rep,name=custom_settings,json=customSettings,proto3" json:"custom_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *TeamSettings) Reset() {
	*x = TeamSettings{}
	mi := &file_proto_team_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamSettings) ProtoMessage() {}

func (x *TeamSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamSettings.ProtoReflect.Descriptor instead.
func (*TeamSettings) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{28}
}

func (x *TeamSettings) GetAutoAcceptApplications() bool {
	if x != nil {
		return x.AutoAcceptApplications
	}
	return false
}

func (x *TeamSettings) GetMinLevelRequirement() int32 {
	if x != nil {
		return x.MinLevelRequirement
	}
	return 0
}

func (x *TeamSettings) GetMaxLevelRequirement() int32 {
	if x != nil {
		return x.MaxLevelRequirement
	}
	return 0
}

func (x *TeamSettings) GetAllowMemberInvite() bool {
	if x != nil {
		return x.AllowMemberInvite
	}
	return false
}

func (x *TeamSettings) GetRequireApproval() bool {
	if x != nil {
		return x.RequireApproval
	}
	return false
}

func (x *TeamSettings) GetWelcomeMessage() string {
	if x != nil {
		return x.WelcomeMessage
	}
	return ""
}

func (x *TeamSettings) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TeamSettings) GetCustomSettings() map[string]string {
	if x != nil {
		return x.CustomSettings
	}
	return nil
}

// 团队统计
type TeamStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TotalBattles         int32                  `protobuf:"varint,1,opt,name=total_battles,json=totalBattles,proto3" json:"total_battles,omitempty"`
	Wins                 int32                  `protobuf:"varint,2,opt,name=wins,proto3" json:"wins,omitempty"`
	Losses               int32                  `protobuf:"varint,3,opt,name=losses,proto3" json:"losses,omitempty"`
	WinRate              float32                `protobuf:"fixed32,4,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`
	TotalExperience      int32                  `protobuf:"varint,5,opt,name=total_experience,json=totalExperience,proto3" json:"total_experience,omitempty"`
	AchievementsUnlocked int32                  `protobuf:"varint,6,opt,name=achievements_unlocked,json=achievementsUnlocked,proto3" json:"achievements_unlocked,omitempty"`
	TotalPlaytime        int64                  `protobuf:"varint,7,opt,name=total_playtime,json=totalPlaytime,proto3" json:"total_playtime,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TeamStats) Reset() {
	*x = TeamStats{}
	mi := &file_proto_team_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStats) ProtoMessage() {}

func (x *TeamStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_team_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStats.ProtoReflect.Descriptor instead.
func (*TeamStats) Descriptor() ([]byte, []int) {
	return file_proto_team_proto_rawDescGZIP(), []int{29}
}

func (x *TeamStats) GetTotalBattles() int32 {
	if x != nil {
		return x.TotalBattles
	}
	return 0
}

func (x *TeamStats) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *TeamStats) GetLosses() int32 {
	if x != nil {
		return x.Losses
	}
	return 0
}

func (x *TeamStats) GetWinRate() float32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *TeamStats) GetTotalExperience() int32 {
	if x != nil {
		return x.TotalExperience
	}
	return 0
}

func (x *TeamStats) GetAchievementsUnlocked() int32 {
	if x != nil {
		return x.AchievementsUnlocked
	}
	return 0
}

func (x *TeamStats) GetTotalPlaytime() int64 {
	if x != nil {
		return x.TotalPlaytime
	}
	return 0
}

var File_proto_team_proto protoreflect.FileDescriptor

const file_proto_team_proto_rawDesc = "" +
	"\n" +
	"\x10proto/team.proto\x12\x12greatestworks.team\x1a\x12proto/common.proto\"\x94\x03\n" +
	"\x11CreateTeamRequest\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x01 \x01(\tR\tcreatorId\x12\x1b\n" +
	"\tteam_name\x18\x02 \x01(\tR\bteamName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\tteam_type\x18\x04 \x01(\x0e2\x1c.greatestworks.team.TeamTypeR\bteamType\x12\x1f\n" +
	"\vmax_members\x18\x05 \x01(\x05R\n" +
	"maxMembers\x12\x1b\n" +
	"\tis_public\x18\x06 \x01(\bR\bisPublic\x12\x1a\n" +
	"\bpassword\x18\a \x01(\tR\bpassword\x12O\n" +
	"\bsettings\x18\b \x03(\v23.greatestworks.team.CreateTeamRequest.SettingsEntryR\bsettings\x1a;\n" +
	"\rSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x01\n" +
	"\x12CreateTeamResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x129\n" +
	"\tteam_info\x18\x03 \x01(\v2\x1c.greatestworks.team.TeamInfoR\bteamInfo\"\x8c\x01\n" +
	"\x0fJoinTeamRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12'\n" +
	"\x0finvitation_code\x18\x04 \x01(\tR\x0einvitationCode\"\xcc\x01\n" +
	"\x10JoinTeamResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x129\n" +
	"\tteam_info\x18\x02 \x01(\v2\x1c.greatestworks.team.TeamInfoR\bteamInfo\x12?\n" +
	"\vmember_info\x18\x03 \x01(\v2\x1e.greatestworks.team.TeamMemberR\n" +
	"memberInfo\"H\n" +
	"\x10LeaveTeamRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\"Q\n" +
	"\x11LeaveTeamResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\x91\x01\n" +
	"\x13InvitePlayerRequest\x12\x1d\n" +
	"\n" +
	"inviter_id\x18\x01 \x01(\tR\tinviterId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12(\n" +
	"\x10target_player_id\x18\x03 \x01(\tR\x0etargetPlayerId\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"y\n" +
	"\x14InvitePlayerResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12#\n" +
	"\rinvitation_id\x18\x02 \x01(\tR\finvitationId\"\x8b\x01\n" +
	"\x11KickPlayerRequest\x12\x1b\n" +
	"\tkicker_id\x18\x01 \x01(\tR\bkickerId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12(\n" +
	"\x10target_player_id\x18\x03 \x01(\tR\x0etargetPlayerId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"R\n" +
	"\x12KickPlayerResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\x84\x01\n" +
	"\x19TransferLeadershipRequest\x12*\n" +
	"\x11current_leader_id\x18\x01 \x01(\tR\x0fcurrentLeaderId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12\"\n" +
	"\rnew_leader_id\x18\x03 \x01(\tR\vnewLeaderId\"\x99\x01\n" +
	"\x1aTransferLeadershipResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12=\n" +
	"\n" +
	"new_leader\x18\x02 \x01(\v2\x1e.greatestworks.team.TeamMemberR\tnewLeader\"J\n" +
	"\x12GetTeamInfoRequest\x12\x17\n" +
	"\ateam_id\x18\x01 \x01(\tR\x06teamId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\"\xf5\x02\n" +
	"\x13GetTeamInfoResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x129\n" +
	"\tteam_info\x18\x02 \x01(\v2\x1c.greatestworks.team.TeamInfoR\bteamInfo\x128\n" +
	"\amembers\x18\x03 \x03(\v2\x1e.greatestworks.team.TeamMemberR\amembers\x12S\n" +
	"\x13pending_invitations\x18\x04 \x03(\v2\".greatestworks.team.TeamInvitationR\x12pendingInvitations\x12V\n" +
	"\x14pending_applications\x18\x05 \x03(\v2#.greatestworks.team.TeamApplicationR\x13pendingApplications\"\xee\x01\n" +
	"\x12SearchTeamsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x129\n" +
	"\tteam_type\x18\x02 \x01(\x0e2\x1c.greatestworks.team.TeamTypeR\bteamType\x12\x1f\n" +
	"\vonly_public\x18\x03 \x01(\bR\n" +
	"onlyPublic\x12\x1b\n" +
	"\tmin_level\x18\x04 \x01(\x05R\bminLevel\x12\x1b\n" +
	"\tmax_level\x18\x05 \x01(\x05R\bmaxLevel\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\a \x01(\x05R\x06offset\"\xcd\x01\n" +
	"\x13SearchTeamsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x122\n" +
	"\x05teams\x18\x02 \x03(\v2\x1c.greatestworks.team.TeamInfoR\x05teams\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\"\x8f\x01\n" +
	"\x19UpdateTeamSettingsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12<\n" +
	"\bsettings\x18\x03 \x01(\v2 .greatestworks.team.TeamSettingsR\bsettings\"\x9f\x01\n" +
	"\x1aUpdateTeamSettingsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12C\n" +
	"\fnew_settings\x18\x02 \x01(\v2 .greatestworks.team.TeamSettingsR\vnewSettings\"s\n" +
	"\x17HandleInvitationRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12#\n" +
	"\rinvitation_id\x18\x02 \x01(\tR\finvitationId\x12\x16\n" +
	"\x06accept\x18\x03 \x01(\bR\x06accept\"\x93\x01\n" +
	"\x18HandleInvitationResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x129\n" +
	"\tteam_info\x18\x02 \x01(\v2\x1c.greatestworks.team.TeamInfoR\bteamInfo\"d\n" +
	"\x12ApplyToJoinRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"z\n" +
	"\x13ApplyToJoinResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\"\x92\x01\n" +
	"\x18HandleApplicationRequest\x12\x1d\n" +
	"\n" +
	"handler_id\x18\x01 \x01(\tR\thandlerId\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x12\x18\n" +
	"\aapprove\x18\x03 \x01(\bR\aapprove\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\x98\x01\n" +
	"\x19HandleApplicationResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12=\n" +
	"\n" +
	"new_member\x18\x02 \x01(\v2\x1e.greatestworks.team.TeamMemberR\tnewMember\"\xec\x04\n" +
	"\bTeamInfo\x12\x17\n" +
	"\ateam_id\x18\x01 \x01(\tR\x06teamId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\tteam_type\x18\x04 \x01(\x0e2\x1c.greatestworks.team.TeamTypeR\bteamType\x126\n" +
	"\x06status\x18\x05 \x01(\x0e2\x1e.greatestworks.team.TeamStatusR\x06status\x12\x1b\n" +
	"\tleader_id\x18\x06 \x01(\tR\bleaderId\x12\x1f\n" +
	"\vleader_name\x18\a \x01(\tR\n" +
	"leaderName\x12!\n" +
	"\fmember_count\x18\b \x01(\x05R\vmemberCount\x12\x1f\n" +
	"\vmax_members\x18\t \x01(\x05R\n" +
	"maxMembers\x12#\n" +
	"\raverage_level\x18\n" +
	" \x01(\x05R\faverageLevel\x12\x1b\n" +
	"\tis_public\x18\v \x01(\bR\bisPublic\x12#\n" +
	"\ris_recruiting\x18\f \x01(\bR\fisRecruiting\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\x03R\tcreatedAt\x12#\n" +
	"\rlast_activity\x18\x0e \x01(\x03R\flastActivity\x12<\n" +
	"\bsettings\x18\x0f \x01(\v2 .greatestworks.team.TeamSettingsR\bsettings\x123\n" +
	"\x05stats\x18\x10 \x01(\v2\x1d.greatestworks.team.TeamStatsR\x05stats\"\xf9\x02\n" +
	"\n" +
	"TeamMember\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x122\n" +
	"\x04role\x18\x04 \x01(\x0e2\x1e.greatestworks.team.MemberRoleR\x04role\x128\n" +
	"\x06status\x18\x05 \x01(\x0e2 .greatestworks.team.MemberStatusR\x06status\x12\x1b\n" +
	"\tjoined_at\x18\x06 \x01(\x03R\bjoinedAt\x12\x1f\n" +
	"\vlast_online\x18\a \x01(\x03R\n" +
	"lastOnline\x12/\n" +
	"\x13contribution_points\x18\b \x01(\x05R\x12contributionPoints\x12:\n" +
	"\bposition\x18\t \x01(\v2\x1e.greatestworks.common.PositionR\bposition\"\x85\x03\n" +
	"\x0eTeamInvitation\x12#\n" +
	"\rinvitation_id\x18\x01 \x01(\tR\finvitationId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12\x1b\n" +
	"\tteam_name\x18\x03 \x01(\tR\bteamName\x12\x1d\n" +
	"\n" +
	"inviter_id\x18\x04 \x01(\tR\tinviterId\x12!\n" +
	"\finviter_name\x18\x05 \x01(\tR\vinviterName\x12\x1d\n" +
	"\n" +
	"invitee_id\x18\x06 \x01(\tR\tinviteeId\x12!\n" +
	"\finvitee_name\x18\a \x01(\tR\vinviteeName\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\n" +
	" \x01(\x03R\texpiresAt\x12<\n" +
	"\x06status\x18\v \x01(\x0e2$.greatestworks.team.InvitationStatusR\x06status\"\xbc\x02\n" +
	"\x0fTeamApplication\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x12\x17\n" +
	"\ateam_id\x18\x02 \x01(\tR\x06teamId\x12!\n" +
	"\fapplicant_id\x18\x03 \x01(\tR\vapplicantId\x12%\n" +
	"\x0eapplicant_name\x18\x04 \x01(\tR\rapplicantName\x12'\n" +
	"\x0fapplicant_level\x18\x05 \x01(\x05R\x0eapplicantLevel\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\x03R\tcreatedAt\x12=\n" +
	"\x06status\x18\b \x01(\x0e2%.greatestworks.team.ApplicationStatusR\x06status\"\xea\x03\n" +
	"\fTeamSettings\x128\n" +
	"\x18auto_accept_applications\x18\x01 \x01(\bR\x16autoAcceptApplications\x122\n" +
	"\x15min_level_requirement\x18\x02 \x01(\x05R\x13minLevelRequirement\x122\n" +
	"\x15max_level_requirement\x18\x03 \x01(\x05R\x13maxLevelRequirement\x12.\n" +
	"\x13allow_member_invite\x18\x04 \x01(\bR\x11allowMemberInvite\x12)\n" +
	"\x10require_approval\x18\x05 \x01(\bR\x0frequireApproval\x12'\n" +
	"\x0fwelcome_message\x18\x06 \x01(\tR\x0ewelcomeMessage\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12]\n" +
	"\x0fcustom_settings\x18\b \x03(\v24.greatestworks.team.TeamSettings.CustomSettingsEntryR\x0ecustomSettings\x1aA\n" +
	"\x13CustomSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfe\x01\n" +
	"\tTeamStats\x12#\n" +
	"\rtotal_battles\x18\x01 \x01(\x05R\ftotalBattles\x12\x12\n" +
	"\x04wins\x18\x02 \x01(\x05R\x04wins\x12\x16\n" +
	"\x06losses\x18\x03 \x01(\x05R\x06losses\x12\x19\n" +
	"\bwin_rate\x18\x04 \x01(\x02R\awinRate\x12)\n" +
	"\x10total_experience\x18\x05 \x01(\x05R\x0ftotalExperience\x123\n" +
	"\x15achievements_unlocked\x18\x06 \x01(\x05R\x14achievementsUnlocked\x12%\n" +
	"\x0etotal_playtime\x18\a \x01(\x03R\rtotalPlaytime*\xd4\x01\n" +
	"\bTeamType\x12\x19\n" +
	"\x15TEAM_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TEAM_TYPE_CASUAL\x10\x01\x12\x19\n" +
	"\x15TEAM_TYPE_COMPETITIVE\x10\x02\x12\x11\n" +
	"\rTEAM_TYPE_PVE\x10\x03\x12\x11\n" +
	"\rTEAM_TYPE_PVP\x10\x04\x12\x13\n" +
	"\x0fTEAM_TYPE_GUILD\x10\x05\x12\x13\n" +
	"\x0fTEAM_TYPE_PARTY\x10\x06\x12\x12\n" +
	"\x0eTEAM_TYPE_RAID\x10\a\x12\x18\n" +
	"\x14TEAM_TYPE_TOURNAMENT\x10\b*\xc3\x01\n" +
	"\n" +
	"TeamStatus\x12\x1b\n" +
	"\x17TEAM_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12TEAM_STATUS_ACTIVE\x10\x01\x12\x18\n" +
	"\x14TEAM_STATUS_INACTIVE\x10\x02\x12\x19\n" +
	"\x15TEAM_STATUS_DISBANDED\x10\x03\x12\x19\n" +
	"\x15TEAM_STATUS_SUSPENDED\x10\x04\x12\x1a\n" +
	"\x16TEAM_STATUS_RECRUITING\x10\x05\x12\x14\n" +
	"\x10TEAM_STATUS_FULL\x10\x06*\xa4\x01\n" +
	"\n" +
	"MemberRole\x12\x1b\n" +
	"\x17MEMBER_ROLE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12MEMBER_ROLE_LEADER\x10\x01\x12\x17\n" +
	"\x13MEMBER_ROLE_OFFICER\x10\x02\x12\x17\n" +
	"\x13MEMBER_ROLE_VETERAN\x10\x03\x12\x16\n" +
	"\x12MEMBER_ROLE_MEMBER\x10\x04\x12\x17\n" +
	"\x13MEMBER_ROLE_RECRUIT\x10\x05*\xae\x01\n" +
	"\fMemberStatus\x12\x1d\n" +
	"\x19MEMBER_STATUS_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MEMBER_STATUS_ONLINE\x10\x01\x12\x19\n" +
	"\x15MEMBER_STATUS_OFFLINE\x10\x02\x12\x1b\n" +
	"\x17MEMBER_STATUS_IN_BATTLE\x10\x03\x12\x15\n" +
	"\x11MEMBER_STATUS_AFK\x10\x04\x12\x16\n" +
	"\x12MEMBER_STATUS_BUSY\x10\x05*\xd4\x01\n" +
	"\x10InvitationStatus\x12!\n" +
	"\x1dINVITATION_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19INVITATION_STATUS_PENDING\x10\x01\x12\x1e\n" +
	"\x1aINVITATION_STATUS_ACCEPTED\x10\x02\x12\x1e\n" +
	"\x1aINVITATION_STATUS_REJECTED\x10\x03\x12\x1d\n" +
	"\x19INVITATION_STATUS_EXPIRED\x10\x04\x12\x1f\n" +
	"\x1bINVITATION_STATUS_CANCELLED\x10\x05*\xbb\x01\n" +
	"\x11ApplicationStatus\x12\"\n" +
	"\x1eAPPLICATION_STATUS_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aAPPLICATION_STATUS_PENDING\x10\x01\x12\x1f\n" +
	"\x1bAPPLICATION_STATUS_APPROVED\x10\x02\x12\x1f\n" +
	"\x1bAPPLICATION_STATUS_REJECTED\x10\x03\x12 \n" +
	"\x1cAPPLICATION_STATUS_WITHDRAWN\x10\x042\xc6\t\n" +
	"\vTeamService\x12[\n" +
	"\n" +
	"CreateTeam\x12%.greatestworks.team.CreateTeamRequest\x1a&.greatestworks.team.CreateTeamResponse\x12U\n" +
	"\bJoinTeam\x12#.greatestworks.team.JoinTeamRequest\x1a$.greatestworks.team.JoinTeamResponse\x12X\n" +
	"\tLeaveTeam\x12$.greatestworks.team.LeaveTeamRequest\x1a%.greatestworks.team.LeaveTeamResponse\x12a\n" +
	"\fInvitePlayer\x12'.greatestworks.team.InvitePlayerRequest\x1a(.greatestworks.team.InvitePlayerResponse\x12[\n" +
	"\n" +
	"KickPlayer\x12%.greatestworks.team.KickPlayerRequest\x1a&.greatestworks.team.KickPlayerResponse\x12s\n" +
	"\x12TransferLeadership\x12-.greatestworks.team.TransferLeadershipRequest\x1a..greatestworks.team.TransferLeadershipResponse\x12^\n" +
	"\vGetTeamInfo\x12&.greatestworks.team.GetTeamInfoRequest\x1a'.greatestworks.team.GetTeamInfoResponse\x12^\n" +
	"\vSearchTeams\x12&.greatestworks.team.SearchTeamsRequest\x1a'.greatestworks.team.SearchTeamsResponse\x12s\n" +
	"\x12UpdateTeamSettings\x12-.greatestworks.team.UpdateTeamSettingsRequest\x1a..greatestworks.team.UpdateTeamSettingsResponse\x12m\n" +
	"\x10HandleInvitation\x12+.greatestworks.team.HandleInvitationRequest\x1a,.greatestworks.team.HandleInvitationResponse\x12^\n" +
	"\vApplyToJoin\x12&.greatestworks.team.ApplyToJoinRequest\x1a'.greatestworks.team.ApplyToJoinResponse\x12p\n" +
	"\x11HandleApplication\x12,.greatestworks.team.HandleApplicationRequest\x1a-.greatestworks.team.HandleApplicationResponseB8Z!greatestworks/internal/proto/team\xaa\x02\x12GreatestWorks.Teamb\x06proto3"

var (
	file_proto_team_proto_rawDescOnce sync.Once
	file_proto_team_proto_rawDescData []byte
)

func file_proto_team_proto_rawDescGZIP() []byte {
	file_proto_team_proto_rawDescOnce.Do(func() {
		file_proto_team_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_team_proto_rawDesc), len(file_proto_team_proto_rawDesc)))
	})
	return file_proto_team_proto_rawDescData
}

var file_proto_team_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_team_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_proto_team_proto_goTypes = []any{
	(TeamType)(0),                      // 0: greatestworks.team.TeamType
	(TeamStatus)(0),                    // 1: greatestworks.team.TeamStatus
	(MemberRole)(0),                    // 2: greatestworks.team.MemberRole
	(MemberStatus)(0),                  // 3: greatestworks.team.MemberStatus
	(InvitationStatus)(0),              // 4: greatestworks.team.InvitationStatus
	(ApplicationStatus)(0),             // 5: greatestworks.team.ApplicationStatus
	(*CreateTeamRequest)(nil),          // 6: greatestworks.team.CreateTeamRequest
	(*CreateTeamResponse)(nil),         // 7: greatestworks.team.CreateTeamResponse
	(*JoinTeamRequest)(nil),            // 8: greatestworks.team.JoinTeamRequest
	(*JoinTeamResponse)(nil),           // 9: greatestworks.team.JoinTeamResponse
	(*LeaveTeamRequest)(nil),           // 10: greatestworks.team.LeaveTeamRequest
	(*LeaveTeamResponse)(nil),          // 11: greatestworks.team.LeaveTeamResponse
	(*InvitePlayerRequest)(nil),        // 12: greatestworks.team.InvitePlayerRequest
	(*InvitePlayerResponse)(nil),       // 13: greatestworks.team.InvitePlayerResponse
	(*KickPlayerRequest)(nil),          // 14: greatestworks.team.KickPlayerRequest
	(*KickPlayerResponse)(nil),         // 15: greatestworks.team.KickPlayerResponse
	(*TransferLeadershipRequest)(nil),  // 16: greatestworks.team.TransferLeadershipRequest
	(*TransferLeadershipResponse)(nil), // 17: greatestworks.team.TransferLeadershipResponse
	(*GetTeamInfoRequest)(nil),         // 18: greatestworks.team.GetTeamInfoRequest
	(*GetTeamInfoResponse)(nil),        // 19: greatestworks.team.GetTeamInfoResponse
	(*SearchTeamsRequest)(nil),         // 20: greatestworks.team.SearchTeamsRequest
	(*SearchTeamsResponse)(nil),        // 21: greatestworks.team.SearchTeamsResponse
	(*UpdateTeamSettingsRequest)(nil),  // 22: greatestworks.team.UpdateTeamSettingsRequest
	(*UpdateTeamSettingsResponse)(nil), // 23: greatestworks.team.UpdateTeamSettingsResponse
	(*HandleInvitationRequest)(nil),    // 24: greatestworks.team.HandleInvitationRequest
	(*HandleInvitationResponse)(nil),   // 25: greatestworks.team.HandleInvitationResponse
	(*ApplyToJoinRequest)(nil),         // 26: greatestworks.team.ApplyToJoinRequest
	(*ApplyToJoinResponse)(nil),        // 27: greatestworks.team.ApplyToJoinResponse
	(*HandleApplicationRequest)(nil),   // 28: greatestworks.team.HandleApplicationRequest
	(*HandleApplicationResponse)(nil),  // 29: greatestworks.team.HandleApplicationResponse
	(*TeamInfo)(nil),                   // 30: greatestworks.team.TeamInfo
	(*TeamMember)(nil),                 // 31: greatestworks.team.TeamMember
	(*TeamInvitation)(nil),             // 32: greatestworks.team.TeamInvitation
	(*TeamApplication)(nil),            // 33: greatestworks.team.TeamApplication
	(*TeamSettings)(nil),               // 34: greatestworks.team.TeamSettings
	(*TeamStats)(nil),                  // 35: greatestworks.team.TeamStats
	nil,                                // 36: greatestworks.team.CreateTeamRequest.SettingsEntry
	nil,                                // 37: greatestworks.team.TeamSettings.CustomSettingsEntry
	(*common.CommonResponse)(nil),      // 38: greatestworks.common.CommonResponse
	(*common.PaginationInfo)(nil),      // 39: greatestworks.common.PaginationInfo
	(*common.Position)(nil),            // 40: greatestworks.common.Position
}
var file_proto_team_proto_depIdxs = []int32{
	0,  // 0: greatestworks.team.CreateTeamRequest.team_type:type_name -> greatestworks.team.TeamType
	36, // 1: greatestworks.team.CreateTeamRequest.settings:type_name -> greatestworks.team.CreateTeamRequest.SettingsEntry
	38, // 2: greatestworks.team.CreateTeamResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 3: greatestworks.team.CreateTeamResponse.team_info:type_name -> greatestworks.team.TeamInfo
	38, // 4: greatestworks.team.JoinTeamResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 5: greatestworks.team.JoinTeamResponse.team_info:type_name -> greatestworks.team.TeamInfo
	31, // 6: greatestworks.team.JoinTeamResponse.member_info:type_name -> greatestworks.team.TeamMember
	38, // 7: greatestworks.team.LeaveTeamResponse.common:type_name -> greatestworks.common.CommonResponse
	38, // 8: greatestworks.team.InvitePlayerResponse.common:type_name -> greatestworks.common.CommonResponse
	38, // 9: greatestworks.team.KickPlayerResponse.common:type_name -> greatestworks.common.CommonResponse
	38, // 10: greatestworks.team.TransferLeadershipResponse.common:type_name -> greatestworks.common.CommonResponse
	31, // 11: greatestworks.team.TransferLeadershipResponse.new_leader:type_name -> greatestworks.team.TeamMember
	38, // 12: greatestworks.team.GetTeamInfoResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 13: greatestworks.team.GetTeamInfoResponse.team_info:type_name -> greatestworks.team.TeamInfo
	31, // 14: greatestworks.team.GetTeamInfoResponse.members:type_name -> greatestworks.team.TeamMember
	32, // 15: greatestworks.team.GetTeamInfoResponse.pending_invitations:type_name -> greatestworks.team.TeamInvitation
	33, // 16: greatestworks.team.GetTeamInfoResponse.pending_applications:type_name -> greatestworks.team.TeamApplication
	0,  // 17: greatestworks.team.SearchTeamsRequest.team_type:type_name -> greatestworks.team.TeamType
	38, // 18: greatestworks.team.SearchTeamsResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 19: greatestworks.team.SearchTeamsResponse.teams:type_name -> greatestworks.team.TeamInfo
	39, // 20: greatestworks.team.SearchTeamsResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	34, // 21: greatestworks.team.UpdateTeamSettingsRequest.settings:type_name -> greatestworks.team.TeamSettings
	38, // 22: greatestworks.team.UpdateTeamSettingsResponse.common:type_name -> greatestworks.common.CommonResponse
	34, // 23: greatestworks.team.UpdateTeamSettingsResponse.new_settings:type_name -> greatestworks.team.TeamSettings
	38, // 24: greatestworks.team.HandleInvitationResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 25: greatestworks.team.HandleInvitationResponse.team_info:type_name -> greatestworks.team.TeamInfo
	38, // 26: greatestworks.team.ApplyToJoinResponse.common:type_name -> greatestworks.common.CommonResponse
	38, // 27: greatestworks.team.HandleApplicationResponse.common:type_name -> greatestworks.common.CommonResponse
	31, // 28: greatestworks.team.HandleApplicationResponse.new_member:type_name -> greatestworks.team.TeamMember
	0,  // 29: greatestworks.team.TeamInfo.team_type:type_name -> greatestworks.team.TeamType
	1,  // 30: greatestworks.team.TeamInfo.status:type_name -> greatestworks.team.TeamStatus
	34, // 31: greatestworks.team.TeamInfo.settings:type_name -> greatestworks.team.TeamSettings
	35, // 32: greatestworks.team.TeamInfo.stats:type_name -> greatestworks.team.TeamStats
	2,  // 33: greatestworks.team.TeamMember.role:type_name -> greatestworks.team.MemberRole
	3,  // 34: greatestworks.team.TeamMember.status:type_name -> greatestworks.team.MemberStatus
	40, // 35: greatestworks.team.TeamMember.position:type_name -> greatestworks.common.Position
	4,  // 36: greatestworks.team.TeamInvitation.status:type_name -> greatestworks.team.InvitationStatus
	5,  // 37: greatestworks.team.TeamApplication.status:type_name -> greatestworks.team.ApplicationStatus
	37, // 38: greatestworks.team.TeamSettings.custom_settings:type_name -> greatestworks.team.TeamSettings.CustomSettingsEntry
	6,  // 39: greatestworks.team.TeamService.CreateTeam:input_type -> greatestworks.team.CreateTeamRequest
	8,  // 40: greatestworks.team.TeamService.JoinTeam:input_type -> greatestworks.team.JoinTeamRequest
	10, // 41: greatestworks.team.TeamService.LeaveTeam:input_type -> greatestworks.team.LeaveTeamRequest
	12, // 42: greatestworks.team.TeamService.InvitePlayer:input_type -> greatestworks.team.InvitePlayerRequest
	14, // 43: greatestworks.team.TeamService.KickPlayer:input_type -> greatestworks.team.KickPlayerRequest
	16, // 44: greatestworks.team.TeamService.TransferLeadership:input_type -> greatestworks.team.TransferLeadershipRequest
	18, // 45: greatestworks.team.TeamService.GetTeamInfo:input_type -> greatestworks.team.GetTeamInfoRequest
	20, // 46: greatestworks.team.TeamService.SearchTeams:input_type -> greatestworks.team.SearchTeamsRequest
	22, // 47: greatestworks.team.TeamService.UpdateTeamSettings:input_type -> greatestworks.team.UpdateTeamSettingsRequest
	24, // 48: greatestworks.team.TeamService.HandleInvitation:input_type -> greatestworks.team.HandleInvitationRequest
	26, // 49: greatestworks.team.TeamService.ApplyToJoin:input_type -> greatestworks.team.ApplyToJoinRequest
	28, // 50: greatestworks.team.TeamService.HandleApplication:input_type -> greatestworks.team.HandleApplicationRequest
	7,  // 51: greatestworks.team.TeamService.CreateTeam:output_type -> greatestworks.team.CreateTeamResponse
	9,  // 52: greatestworks.team.TeamService.JoinTeam:output_type -> greatestworks.team.JoinTeamResponse
	11, // 53: greatestworks.team.TeamService.LeaveTeam:output_type -> greatestworks.team.LeaveTeamResponse
	13, // 54: greatestworks.team.TeamService.InvitePlayer:output_type -> greatestworks.team.InvitePlayerResponse
	15, // 55: greatestworks.team.TeamService.KickPlayer:output_type -> greatestworks.team.KickPlayerResponse
	17, // 56: greatestworks.team.TeamService.TransferLeadership:output_type -> greatestworks.team.TransferLeadershipResponse
	19, // 57: greatestworks.team.TeamService.GetTeamInfo:output_type -> greatestworks.team.GetTeamInfoResponse
	21, // 58: greatestworks.team.TeamService.SearchTeams:output_type -> greatestworks.team.SearchTeamsResponse
	23, // 59: greatestworks.team.TeamService.UpdateTeamSettings:output_type -> greatestworks.team.UpdateTeamSettingsResponse
	25, // 60: greatestworks.team.TeamService.HandleInvitation:output_type -> greatestworks.team.HandleInvitationResponse
	27, // 61: greatestworks.team.TeamService.ApplyToJoin:output_type -> greatestworks.team.ApplyToJoinResponse
	29, // 62: greatestworks.team.TeamService.HandleApplication:output_type -> greatestworks.team.HandleApplicationResponse
	51, // [51:63] is the sub-list for method output_type
	39, // [39:51] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_proto_team_proto_init() }
func file_proto_team_proto_init() {
	if File_proto_team_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_team_proto_rawDesc), len(file_proto_team_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_team_proto_goTypes,
		DependencyIndexes: file_proto_team_proto_depIdxs,
		EnumInfos:         file_proto_team_proto_enumTypes,
		MessageInfos:      file_proto_team_proto_msgTypes,
	}.Build()
	File_proto_team_proto = out.File
	file_proto_team_proto_goTypes = nil
	file_proto_team_proto_depIdxs = nil
}
