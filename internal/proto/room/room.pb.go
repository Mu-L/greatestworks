// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/room.proto

package room

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "greatestworks/internal/proto/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 房间类型枚举
type RoomType int32

const (
	RoomType_ROOM_TYPE_UNSPECIFIED   RoomType = 0
	RoomType_ROOM_TYPE_CASUAL        RoomType = 1 // 休闲模式
	RoomType_ROOM_TYPE_RANKED        RoomType = 2 // 排位模式
	RoomType_ROOM_TYPE_CUSTOM        RoomType = 3 // 自定义模式
	RoomType_ROOM_TYPE_TOURNAMENT    RoomType = 4 // 锦标赛模式
	RoomType_ROOM_TYPE_PRACTICE      RoomType = 5 // 练习模式
	RoomType_ROOM_TYPE_SPECTATE      RoomType = 6 // 观战模式
	RoomType_ROOM_TYPE_PRIVATE_MATCH RoomType = 7 // 私人对战
)

// Enum value maps for RoomType.
var (
	RoomType_name = map[int32]string{
		0: "ROOM_TYPE_UNSPECIFIED",
		1: "ROOM_TYPE_CASUAL",
		2: "ROOM_TYPE_RANKED",
		3: "ROOM_TYPE_CUSTOM",
		4: "ROOM_TYPE_TOURNAMENT",
		5: "ROOM_TYPE_PRACTICE",
		6: "ROOM_TYPE_SPECTATE",
		7: "ROOM_TYPE_PRIVATE_MATCH",
	}
	RoomType_value = map[string]int32{
		"ROOM_TYPE_UNSPECIFIED":   0,
		"ROOM_TYPE_CASUAL":        1,
		"ROOM_TYPE_RANKED":        2,
		"ROOM_TYPE_CUSTOM":        3,
		"ROOM_TYPE_TOURNAMENT":    4,
		"ROOM_TYPE_PRACTICE":      5,
		"ROOM_TYPE_SPECTATE":      6,
		"ROOM_TYPE_PRIVATE_MATCH": 7,
	}
)

func (x RoomType) Enum() *RoomType {
	p := new(RoomType)
	*p = x
	return p
}

func (x RoomType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_room_proto_enumTypes[0].Descriptor()
}

func (RoomType) Type() protoreflect.EnumType {
	return &file_proto_room_proto_enumTypes[0]
}

func (x RoomType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomType.Descriptor instead.
func (RoomType) EnumDescriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{0}
}

// 房间状态枚举
type RoomStatus int32

const (
	RoomStatus_ROOM_STATUS_UNSPECIFIED RoomStatus = 0
	RoomStatus_ROOM_STATUS_WAITING     RoomStatus = 1 // 等待玩家
	RoomStatus_ROOM_STATUS_PREPARING   RoomStatus = 2 // 准备中
	RoomStatus_ROOM_STATUS_IN_GAME     RoomStatus = 3 // 游戏中
	RoomStatus_ROOM_STATUS_FINISHED    RoomStatus = 4 // 已结束
	RoomStatus_ROOM_STATUS_DISBANDED   RoomStatus = 5 // 已解散
	RoomStatus_ROOM_STATUS_PAUSED      RoomStatus = 6 // 已暂停
)

// Enum value maps for RoomStatus.
var (
	RoomStatus_name = map[int32]string{
		0: "ROOM_STATUS_UNSPECIFIED",
		1: "ROOM_STATUS_WAITING",
		2: "ROOM_STATUS_PREPARING",
		3: "ROOM_STATUS_IN_GAME",
		4: "ROOM_STATUS_FINISHED",
		5: "ROOM_STATUS_DISBANDED",
		6: "ROOM_STATUS_PAUSED",
	}
	RoomStatus_value = map[string]int32{
		"ROOM_STATUS_UNSPECIFIED": 0,
		"ROOM_STATUS_WAITING":     1,
		"ROOM_STATUS_PREPARING":   2,
		"ROOM_STATUS_IN_GAME":     3,
		"ROOM_STATUS_FINISHED":    4,
		"ROOM_STATUS_DISBANDED":   5,
		"ROOM_STATUS_PAUSED":      6,
	}
)

func (x RoomStatus) Enum() *RoomStatus {
	p := new(RoomStatus)
	*p = x
	return p
}

func (x RoomStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_room_proto_enumTypes[1].Descriptor()
}

func (RoomStatus) Type() protoreflect.EnumType {
	return &file_proto_room_proto_enumTypes[1]
}

func (x RoomStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomStatus.Descriptor instead.
func (RoomStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{1}
}

// 玩家角色枚举
type PlayerRole int32

const (
	PlayerRole_PLAYER_ROLE_UNSPECIFIED PlayerRole = 0
	PlayerRole_PLAYER_ROLE_OWNER       PlayerRole = 1 // 房主
	PlayerRole_PLAYER_ROLE_MODERATOR   PlayerRole = 2 // 管理员
	PlayerRole_PLAYER_ROLE_PLAYER      PlayerRole = 3 // 玩家
	PlayerRole_PLAYER_ROLE_SPECTATOR   PlayerRole = 4 // 观战者
)

// Enum value maps for PlayerRole.
var (
	PlayerRole_name = map[int32]string{
		0: "PLAYER_ROLE_UNSPECIFIED",
		1: "PLAYER_ROLE_OWNER",
		2: "PLAYER_ROLE_MODERATOR",
		3: "PLAYER_ROLE_PLAYER",
		4: "PLAYER_ROLE_SPECTATOR",
	}
	PlayerRole_value = map[string]int32{
		"PLAYER_ROLE_UNSPECIFIED": 0,
		"PLAYER_ROLE_OWNER":       1,
		"PLAYER_ROLE_MODERATOR":   2,
		"PLAYER_ROLE_PLAYER":      3,
		"PLAYER_ROLE_SPECTATOR":   4,
	}
)

func (x PlayerRole) Enum() *PlayerRole {
	p := new(PlayerRole)
	*p = x
	return p
}

func (x PlayerRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerRole) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_room_proto_enumTypes[2].Descriptor()
}

func (PlayerRole) Type() protoreflect.EnumType {
	return &file_proto_room_proto_enumTypes[2]
}

func (x PlayerRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerRole.Descriptor instead.
func (PlayerRole) EnumDescriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{2}
}

// 房间消息类型枚举
type RoomMessageType int32

const (
	RoomMessageType_ROOM_MESSAGE_TYPE_UNSPECIFIED RoomMessageType = 0
	RoomMessageType_ROOM_MESSAGE_TYPE_CHAT        RoomMessageType = 1 // 聊天消息
	RoomMessageType_ROOM_MESSAGE_TYPE_SYSTEM      RoomMessageType = 2 // 系统消息
	RoomMessageType_ROOM_MESSAGE_TYPE_JOIN        RoomMessageType = 3 // 加入消息
	RoomMessageType_ROOM_MESSAGE_TYPE_LEAVE       RoomMessageType = 4 // 离开消息
	RoomMessageType_ROOM_MESSAGE_TYPE_READY       RoomMessageType = 5 // 准备消息
	RoomMessageType_ROOM_MESSAGE_TYPE_START       RoomMessageType = 6 // 开始消息
	RoomMessageType_ROOM_MESSAGE_TYPE_END         RoomMessageType = 7 // 结束消息
)

// Enum value maps for RoomMessageType.
var (
	RoomMessageType_name = map[int32]string{
		0: "ROOM_MESSAGE_TYPE_UNSPECIFIED",
		1: "ROOM_MESSAGE_TYPE_CHAT",
		2: "ROOM_MESSAGE_TYPE_SYSTEM",
		3: "ROOM_MESSAGE_TYPE_JOIN",
		4: "ROOM_MESSAGE_TYPE_LEAVE",
		5: "ROOM_MESSAGE_TYPE_READY",
		6: "ROOM_MESSAGE_TYPE_START",
		7: "ROOM_MESSAGE_TYPE_END",
	}
	RoomMessageType_value = map[string]int32{
		"ROOM_MESSAGE_TYPE_UNSPECIFIED": 0,
		"ROOM_MESSAGE_TYPE_CHAT":        1,
		"ROOM_MESSAGE_TYPE_SYSTEM":      2,
		"ROOM_MESSAGE_TYPE_JOIN":        3,
		"ROOM_MESSAGE_TYPE_LEAVE":       4,
		"ROOM_MESSAGE_TYPE_READY":       5,
		"ROOM_MESSAGE_TYPE_START":       6,
		"ROOM_MESSAGE_TYPE_END":         7,
	}
)

func (x RoomMessageType) Enum() *RoomMessageType {
	p := new(RoomMessageType)
	*p = x
	return p
}

func (x RoomMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_room_proto_enumTypes[3].Descriptor()
}

func (RoomMessageType) Type() protoreflect.EnumType {
	return &file_proto_room_proto_enumTypes[3]
}

func (x RoomMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomMessageType.Descriptor instead.
func (RoomMessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{3}
}

// 房间排序枚举
type RoomSortBy int32

const (
	RoomSortBy_ROOM_SORT_BY_UNSPECIFIED  RoomSortBy = 0
	RoomSortBy_ROOM_SORT_BY_NAME         RoomSortBy = 1 // 按名称排序
	RoomSortBy_ROOM_SORT_BY_PLAYERS      RoomSortBy = 2 // 按玩家数量排序
	RoomSortBy_ROOM_SORT_BY_CREATED_TIME RoomSortBy = 3 // 按创建时间排序
	RoomSortBy_ROOM_SORT_BY_PING         RoomSortBy = 4 // 按延迟排序
	RoomSortBy_ROOM_SORT_BY_POPULARITY   RoomSortBy = 5 // 按热门程度排序
)

// Enum value maps for RoomSortBy.
var (
	RoomSortBy_name = map[int32]string{
		0: "ROOM_SORT_BY_UNSPECIFIED",
		1: "ROOM_SORT_BY_NAME",
		2: "ROOM_SORT_BY_PLAYERS",
		3: "ROOM_SORT_BY_CREATED_TIME",
		4: "ROOM_SORT_BY_PING",
		5: "ROOM_SORT_BY_POPULARITY",
	}
	RoomSortBy_value = map[string]int32{
		"ROOM_SORT_BY_UNSPECIFIED":  0,
		"ROOM_SORT_BY_NAME":         1,
		"ROOM_SORT_BY_PLAYERS":      2,
		"ROOM_SORT_BY_CREATED_TIME": 3,
		"ROOM_SORT_BY_PING":         4,
		"ROOM_SORT_BY_POPULARITY":   5,
	}
)

func (x RoomSortBy) Enum() *RoomSortBy {
	p := new(RoomSortBy)
	*p = x
	return p
}

func (x RoomSortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomSortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_room_proto_enumTypes[4].Descriptor()
}

func (RoomSortBy) Type() protoreflect.EnumType {
	return &file_proto_room_proto_enumTypes[4]
}

func (x RoomSortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomSortBy.Descriptor instead.
func (RoomSortBy) EnumDescriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{4}
}

// 难度等级枚举
type DifficultyLevel int32

const (
	DifficultyLevel_DIFFICULTY_LEVEL_UNSPECIFIED DifficultyLevel = 0
	DifficultyLevel_DIFFICULTY_LEVEL_EASY        DifficultyLevel = 1 // 简单
	DifficultyLevel_DIFFICULTY_LEVEL_NORMAL      DifficultyLevel = 2 // 普通
	DifficultyLevel_DIFFICULTY_LEVEL_HARD        DifficultyLevel = 3 // 困难
	DifficultyLevel_DIFFICULTY_LEVEL_EXPERT      DifficultyLevel = 4 // 专家
	DifficultyLevel_DIFFICULTY_LEVEL_NIGHTMARE   DifficultyLevel = 5 // 噩梦
)

// Enum value maps for DifficultyLevel.
var (
	DifficultyLevel_name = map[int32]string{
		0: "DIFFICULTY_LEVEL_UNSPECIFIED",
		1: "DIFFICULTY_LEVEL_EASY",
		2: "DIFFICULTY_LEVEL_NORMAL",
		3: "DIFFICULTY_LEVEL_HARD",
		4: "DIFFICULTY_LEVEL_EXPERT",
		5: "DIFFICULTY_LEVEL_NIGHTMARE",
	}
	DifficultyLevel_value = map[string]int32{
		"DIFFICULTY_LEVEL_UNSPECIFIED": 0,
		"DIFFICULTY_LEVEL_EASY":        1,
		"DIFFICULTY_LEVEL_NORMAL":      2,
		"DIFFICULTY_LEVEL_HARD":        3,
		"DIFFICULTY_LEVEL_EXPERT":      4,
		"DIFFICULTY_LEVEL_NIGHTMARE":   5,
	}
)

func (x DifficultyLevel) Enum() *DifficultyLevel {
	p := new(DifficultyLevel)
	*p = x
	return p
}

func (x DifficultyLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DifficultyLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_room_proto_enumTypes[5].Descriptor()
}

func (DifficultyLevel) Type() protoreflect.EnumType {
	return &file_proto_room_proto_enumTypes[5]
}

func (x DifficultyLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DifficultyLevel.Descriptor instead.
func (DifficultyLevel) EnumDescriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{5}
}

// 创建房间请求
type CreateRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	RoomName      string                 `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	RoomType      RoomType               `protobuf:"varint,3,opt,name=room_type,json=roomType,proto3,enum=greatestworks.room.RoomType" json:"room_type,omitempty"`
	GameMode      string                 `protobuf:"bytes,4,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	MapId         string                 `protobuf:"bytes,5,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	MaxPlayers    int32                  `protobuf:"varint,6,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,7,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	Password      string                 `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Settings      *RoomSettings          `protobuf:"bytes,9,opt,name=settings,proto3" json:"settings,omitempty"`
	CustomRules   map[string]string      `protobuf:"bytes,10,rep,name=custom_rules,json=customRules,proto3" json:"custom_rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	mi := &file_proto_room_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRoomRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateRoomRequest) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *CreateRoomRequest) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *CreateRoomRequest) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *CreateRoomRequest) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *CreateRoomRequest) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *CreateRoomRequest) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *CreateRoomRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateRoomRequest) GetSettings() *RoomSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *CreateRoomRequest) GetCustomRules() map[string]string {
	if x != nil {
		return x.CustomRules
	}
	return nil
}

// 创建房间响应
type CreateRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,3,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	mi := &file_proto_room_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRoomResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *CreateRoomResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *CreateRoomResponse) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

// 加入房间请求
type JoinRoomRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId         string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Password       string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	InvitationCode string                 `protobuf:"bytes,4,opt,name=invitation_code,json=invitationCode,proto3" json:"invitation_code,omitempty"`
	PreferredTeam  int32                  `protobuf:"varint,5,opt,name=preferred_team,json=preferredTeam,proto3" json:"preferred_team,omitempty"` // 希望加入的队伍
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	mi := &file_proto_room_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{2}
}

func (x *JoinRoomRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *JoinRoomRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *JoinRoomRequest) GetInvitationCode() string {
	if x != nil {
		return x.InvitationCode
	}
	return ""
}

func (x *JoinRoomRequest) GetPreferredTeam() int32 {
	if x != nil {
		return x.PreferredTeam
	}
	return 0
}

// 加入房间响应
type JoinRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,2,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	PlayerInfo    *RoomPlayer            `protobuf:"bytes,3,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	OtherPlayers  []*RoomPlayer          `protobuf:"bytes,4,rep,name=other_players,json=otherPlayers,proto3" json:"other_players,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomResponse) Reset() {
	*x = JoinRoomResponse{}
	mi := &file_proto_room_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomResponse) ProtoMessage() {}

func (x *JoinRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinRoomResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{3}
}

func (x *JoinRoomResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *JoinRoomResponse) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

func (x *JoinRoomResponse) GetPlayerInfo() *RoomPlayer {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *JoinRoomResponse) GetOtherPlayers() []*RoomPlayer {
	if x != nil {
		return x.OtherPlayers
	}
	return nil
}

// 离开房间请求
type LeaveRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRoomRequest) Reset() {
	*x = LeaveRoomRequest{}
	mi := &file_proto_room_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomRequest) ProtoMessage() {}

func (x *LeaveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveRoomRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{4}
}

func (x *LeaveRoomRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LeaveRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

// 离开房间响应
type LeaveRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRoomResponse) Reset() {
	*x = LeaveRoomResponse{}
	mi := &file_proto_room_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomResponse) ProtoMessage() {}

func (x *LeaveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomResponse.ProtoReflect.Descriptor instead.
func (*LeaveRoomResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{5}
}

func (x *LeaveRoomResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 获取房间列表请求
type GetRoomListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomType      RoomType               `protobuf:"varint,1,opt,name=room_type,json=roomType,proto3,enum=greatestworks.room.RoomType" json:"room_type,omitempty"`
	GameMode      string                 `protobuf:"bytes,2,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	OnlyPublic    bool                   `protobuf:"varint,3,opt,name=only_public,json=onlyPublic,proto3" json:"only_public,omitempty"`
	OnlyAvailable bool                   `protobuf:"varint,4,opt,name=only_available,json=onlyAvailable,proto3" json:"only_available,omitempty"` // 只显示有空位的房间
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy        RoomSortBy             `protobuf:"varint,7,opt,name=sort_by,json=sortBy,proto3,enum=greatestworks.room.RoomSortBy" json:"sort_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomListRequest) Reset() {
	*x = GetRoomListRequest{}
	mi := &file_proto_room_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomListRequest) ProtoMessage() {}

func (x *GetRoomListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomListRequest.ProtoReflect.Descriptor instead.
func (*GetRoomListRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoomListRequest) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *GetRoomListRequest) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *GetRoomListRequest) GetOnlyPublic() bool {
	if x != nil {
		return x.OnlyPublic
	}
	return false
}

func (x *GetRoomListRequest) GetOnlyAvailable() bool {
	if x != nil {
		return x.OnlyAvailable
	}
	return false
}

func (x *GetRoomListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRoomListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetRoomListRequest) GetSortBy() RoomSortBy {
	if x != nil {
		return x.SortBy
	}
	return RoomSortBy_ROOM_SORT_BY_UNSPECIFIED
}

// 获取房间列表响应
type GetRoomListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Rooms         []*RoomInfo            `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomListResponse) Reset() {
	*x = GetRoomListResponse{}
	mi := &file_proto_room_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomListResponse) ProtoMessage() {}

func (x *GetRoomListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomListResponse.ProtoReflect.Descriptor instead.
func (*GetRoomListResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{7}
}

func (x *GetRoomListResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetRoomListResponse) GetRooms() []*RoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *GetRoomListResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 获取房间信息请求
type GetRoomInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 查询者ID，用于权限检查
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomInfoRequest) Reset() {
	*x = GetRoomInfoRequest{}
	mi := &file_proto_room_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoRequest) ProtoMessage() {}

func (x *GetRoomInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRoomInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{8}
}

func (x *GetRoomInfoRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetRoomInfoRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// 获取房间信息响应
type GetRoomInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	RoomDetail    *RoomDetail            `protobuf:"bytes,2,opt,name=room_detail,json=roomDetail,proto3" json:"room_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomInfoResponse) Reset() {
	*x = GetRoomInfoResponse{}
	mi := &file_proto_room_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomInfoResponse) ProtoMessage() {}

func (x *GetRoomInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomInfoResponse.ProtoReflect.Descriptor instead.
func (*GetRoomInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{9}
}

func (x *GetRoomInfoResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetRoomInfoResponse) GetRoomDetail() *RoomDetail {
	if x != nil {
		return x.RoomDetail
	}
	return nil
}

// 更新房间设置请求
type UpdateRoomSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Settings      *RoomSettings          `protobuf:"bytes,3,opt,name=settings,proto3" json:"settings,omitempty"`
	CustomRules   map[string]string      `protobuf:"bytes,4,rep,name=custom_rules,json=customRules,proto3" json:"custom_rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoomSettingsRequest) Reset() {
	*x = UpdateRoomSettingsRequest{}
	mi := &file_proto_room_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoomSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomSettingsRequest) ProtoMessage() {}

func (x *UpdateRoomSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomSettingsRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoomSettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRoomSettingsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *UpdateRoomSettingsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateRoomSettingsRequest) GetSettings() *RoomSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *UpdateRoomSettingsRequest) GetCustomRules() map[string]string {
	if x != nil {
		return x.CustomRules
	}
	return nil
}

// 更新房间设置响应
type UpdateRoomSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewSettings   *RoomSettings          `protobuf:"bytes,2,opt,name=new_settings,json=newSettings,proto3" json:"new_settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoomSettingsResponse) Reset() {
	*x = UpdateRoomSettingsResponse{}
	mi := &file_proto_room_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoomSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomSettingsResponse) ProtoMessage() {}

func (x *UpdateRoomSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomSettingsResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoomSettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRoomSettingsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *UpdateRoomSettingsResponse) GetNewSettings() *RoomSettings {
	if x != nil {
		return x.NewSettings
	}
	return nil
}

// 踢出玩家请求
type KickPlayerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	KickerId       string                 `protobuf:"bytes,1,opt,name=kicker_id,json=kickerId,proto3" json:"kicker_id,omitempty"`
	RoomId         string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	Reason         string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *KickPlayerRequest) Reset() {
	*x = KickPlayerRequest{}
	mi := &file_proto_room_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerRequest) ProtoMessage() {}

func (x *KickPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerRequest.ProtoReflect.Descriptor instead.
func (*KickPlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{12}
}

func (x *KickPlayerRequest) GetKickerId() string {
	if x != nil {
		return x.KickerId
	}
	return ""
}

func (x *KickPlayerRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *KickPlayerRequest) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

func (x *KickPlayerRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 踢出玩家响应
type KickPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KickPlayerResponse) Reset() {
	*x = KickPlayerResponse{}
	mi := &file_proto_room_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KickPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickPlayerResponse) ProtoMessage() {}

func (x *KickPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickPlayerResponse.ProtoReflect.Descriptor instead.
func (*KickPlayerResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{13}
}

func (x *KickPlayerResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 转移房主请求
type TransferOwnershipRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CurrentOwnerId string                 `protobuf:"bytes,1,opt,name=current_owner_id,json=currentOwnerId,proto3" json:"current_owner_id,omitempty"`
	RoomId         string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	NewOwnerId     string                 `protobuf:"bytes,3,opt,name=new_owner_id,json=newOwnerId,proto3" json:"new_owner_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TransferOwnershipRequest) Reset() {
	*x = TransferOwnershipRequest{}
	mi := &file_proto_room_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOwnershipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOwnershipRequest) ProtoMessage() {}

func (x *TransferOwnershipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOwnershipRequest.ProtoReflect.Descriptor instead.
func (*TransferOwnershipRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{14}
}

func (x *TransferOwnershipRequest) GetCurrentOwnerId() string {
	if x != nil {
		return x.CurrentOwnerId
	}
	return ""
}

func (x *TransferOwnershipRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *TransferOwnershipRequest) GetNewOwnerId() string {
	if x != nil {
		return x.NewOwnerId
	}
	return ""
}

// 转移房主响应
type TransferOwnershipResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewOwner      *RoomPlayer            `protobuf:"bytes,2,opt,name=new_owner,json=newOwner,proto3" json:"new_owner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferOwnershipResponse) Reset() {
	*x = TransferOwnershipResponse{}
	mi := &file_proto_room_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOwnershipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOwnershipResponse) ProtoMessage() {}

func (x *TransferOwnershipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOwnershipResponse.ProtoReflect.Descriptor instead.
func (*TransferOwnershipResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{15}
}

func (x *TransferOwnershipResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *TransferOwnershipResponse) GetNewOwner() *RoomPlayer {
	if x != nil {
		return x.NewOwner
	}
	return nil
}

// 开始游戏请求
type StartGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ForceStart    bool                   `protobuf:"varint,3,opt,name=force_start,json=forceStart,proto3" json:"force_start,omitempty"` // 强制开始（即使人数不足）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	mi := &file_proto_room_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{16}
}

func (x *StartGameRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *StartGameRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *StartGameRequest) GetForceStart() bool {
	if x != nil {
		return x.ForceStart
	}
	return false
}

// 开始游戏响应
type StartGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	GameSessionId string                 `protobuf:"bytes,2,opt,name=game_session_id,json=gameSessionId,proto3" json:"game_session_id,omitempty"`
	StartTime     int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	mi := &file_proto_room_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{17}
}

func (x *StartGameResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *StartGameResponse) GetGameSessionId() string {
	if x != nil {
		return x.GameSessionId
	}
	return ""
}

func (x *StartGameResponse) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

// 设置准备状态请求
type SetReadyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	IsReady       bool                   `protobuf:"varint,3,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetReadyRequest) Reset() {
	*x = SetReadyRequest{}
	mi := &file_proto_room_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadyRequest) ProtoMessage() {}

func (x *SetReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadyRequest.ProtoReflect.Descriptor instead.
func (*SetReadyRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{18}
}

func (x *SetReadyRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SetReadyRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SetReadyRequest) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

// 设置准备状态响应
type SetReadyResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Common          *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	IsReady         bool                   `protobuf:"varint,2,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	AllPlayersReady bool                   `protobuf:"varint,3,opt,name=all_players_ready,json=allPlayersReady,proto3" json:"all_players_ready,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SetReadyResponse) Reset() {
	*x = SetReadyResponse{}
	mi := &file_proto_room_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetReadyResponse) ProtoMessage() {}

func (x *SetReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetReadyResponse.ProtoReflect.Descriptor instead.
func (*SetReadyResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{19}
}

func (x *SetReadyResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SetReadyResponse) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *SetReadyResponse) GetAllPlayersReady() bool {
	if x != nil {
		return x.AllPlayersReady
	}
	return false
}

// 邀请玩家请求
type InvitePlayerRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InviterId      string                 `protobuf:"bytes,1,opt,name=inviter_id,json=inviterId,proto3" json:"inviter_id,omitempty"`
	RoomId         string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	TargetPlayerId string                 `protobuf:"bytes,3,opt,name=target_player_id,json=targetPlayerId,proto3" json:"target_player_id,omitempty"`
	Message        string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InvitePlayerRequest) Reset() {
	*x = InvitePlayerRequest{}
	mi := &file_proto_room_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerRequest) ProtoMessage() {}

func (x *InvitePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerRequest.ProtoReflect.Descriptor instead.
func (*InvitePlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{20}
}

func (x *InvitePlayerRequest) GetInviterId() string {
	if x != nil {
		return x.InviterId
	}
	return ""
}

func (x *InvitePlayerRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *InvitePlayerRequest) GetTargetPlayerId() string {
	if x != nil {
		return x.TargetPlayerId
	}
	return ""
}

func (x *InvitePlayerRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 邀请玩家响应
type InvitePlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	InvitationId  string                 `protobuf:"bytes,2,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvitePlayerResponse) Reset() {
	*x = InvitePlayerResponse{}
	mi := &file_proto_room_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvitePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvitePlayerResponse) ProtoMessage() {}

func (x *InvitePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvitePlayerResponse.ProtoReflect.Descriptor instead.
func (*InvitePlayerResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{21}
}

func (x *InvitePlayerResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *InvitePlayerResponse) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

// 搜索房间请求
type SearchRoomsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keyword       string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	OwnerName     string                 `protobuf:"bytes,2,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	RoomType      RoomType               `protobuf:"varint,3,opt,name=room_type,json=roomType,proto3,enum=greatestworks.room.RoomType" json:"room_type,omitempty"`
	GameMode      string                 `protobuf:"bytes,4,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	OnlyPublic    bool                   `protobuf:"varint,5,opt,name=only_public,json=onlyPublic,proto3" json:"only_public,omitempty"`
	OnlyAvailable bool                   `protobuf:"varint,6,opt,name=only_available,json=onlyAvailable,proto3" json:"only_available,omitempty"`
	Limit         int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRoomsRequest) Reset() {
	*x = SearchRoomsRequest{}
	mi := &file_proto_room_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsRequest) ProtoMessage() {}

func (x *SearchRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsRequest.ProtoReflect.Descriptor instead.
func (*SearchRoomsRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{22}
}

func (x *SearchRoomsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchRoomsRequest) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *SearchRoomsRequest) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *SearchRoomsRequest) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *SearchRoomsRequest) GetOnlyPublic() bool {
	if x != nil {
		return x.OnlyPublic
	}
	return false
}

func (x *SearchRoomsRequest) GetOnlyAvailable() bool {
	if x != nil {
		return x.OnlyAvailable
	}
	return false
}

func (x *SearchRoomsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRoomsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 搜索房间响应
type SearchRoomsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Rooms         []*RoomInfo            `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRoomsResponse) Reset() {
	*x = SearchRoomsResponse{}
	mi := &file_proto_room_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsResponse) ProtoMessage() {}

func (x *SearchRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsResponse.ProtoReflect.Descriptor instead.
func (*SearchRoomsResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{23}
}

func (x *SearchRoomsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SearchRoomsResponse) GetRooms() []*RoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *SearchRoomsResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 发送房间消息请求
type SendRoomMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageType   RoomMessageType        `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=greatestworks.room.RoomMessageType" json:"message_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRoomMessageRequest) Reset() {
	*x = SendRoomMessageRequest{}
	mi := &file_proto_room_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRoomMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRoomMessageRequest) ProtoMessage() {}

func (x *SendRoomMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRoomMessageRequest.ProtoReflect.Descriptor instead.
func (*SendRoomMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{24}
}

func (x *SendRoomMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendRoomMessageRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SendRoomMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendRoomMessageRequest) GetMessageType() RoomMessageType {
	if x != nil {
		return x.MessageType
	}
	return RoomMessageType_ROOM_MESSAGE_TYPE_UNSPECIFIED
}

// 发送房间消息响应
type SendRoomMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRoomMessageResponse) Reset() {
	*x = SendRoomMessageResponse{}
	mi := &file_proto_room_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRoomMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRoomMessageResponse) ProtoMessage() {}

func (x *SendRoomMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRoomMessageResponse.ProtoReflect.Descriptor instead.
func (*SendRoomMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{25}
}

func (x *SendRoomMessageResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SendRoomMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// 设置房间密码请求
type SetRoomPasswordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OwnerId       string                 `protobuf:"bytes,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	NewPassword   string                 `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"` // 空字符串表示移除密码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRoomPasswordRequest) Reset() {
	*x = SetRoomPasswordRequest{}
	mi := &file_proto_room_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRoomPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomPasswordRequest) ProtoMessage() {}

func (x *SetRoomPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomPasswordRequest.ProtoReflect.Descriptor instead.
func (*SetRoomPasswordRequest) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{26}
}

func (x *SetRoomPasswordRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *SetRoomPasswordRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SetRoomPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

// 设置房间密码响应
type SetRoomPasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	HasPassword   bool                   `protobuf:"varint,2,opt,name=has_password,json=hasPassword,proto3" json:"has_password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRoomPasswordResponse) Reset() {
	*x = SetRoomPasswordResponse{}
	mi := &file_proto_room_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRoomPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRoomPasswordResponse) ProtoMessage() {}

func (x *SetRoomPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRoomPasswordResponse.ProtoReflect.Descriptor instead.
func (*SetRoomPasswordResponse) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{27}
}

func (x *SetRoomPasswordResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SetRoomPasswordResponse) GetHasPassword() bool {
	if x != nil {
		return x.HasPassword
	}
	return false
}

// 房间信息
type RoomInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RoomId         string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	RoomName       string                 `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`
	OwnerId        string                 `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	OwnerName      string                 `protobuf:"bytes,4,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	RoomType       RoomType               `protobuf:"varint,5,opt,name=room_type,json=roomType,proto3,enum=greatestworks.room.RoomType" json:"room_type,omitempty"`
	GameMode       string                 `protobuf:"bytes,6,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	MapId          string                 `protobuf:"bytes,7,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	MapName        string                 `protobuf:"bytes,8,opt,name=map_name,json=mapName,proto3" json:"map_name,omitempty"`
	Status         RoomStatus             `protobuf:"varint,9,opt,name=status,proto3,enum=greatestworks.room.RoomStatus" json:"status,omitempty"`
	CurrentPlayers int32                  `protobuf:"varint,10,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`
	MaxPlayers     int32                  `protobuf:"varint,11,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	IsPrivate      bool                   `protobuf:"varint,12,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	HasPassword    bool                   `protobuf:"varint,13,opt,name=has_password,json=hasPassword,proto3" json:"has_password,omitempty"`
	Ping           int32                  `protobuf:"varint,14,opt,name=ping,proto3" json:"ping,omitempty"`
	Region         string                 `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Settings       *RoomSettings          `protobuf:"bytes,17,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	mi := &file_proto_room_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{28}
}

func (x *RoomInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomInfo) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *RoomInfo) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *RoomInfo) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *RoomInfo) GetRoomType() RoomType {
	if x != nil {
		return x.RoomType
	}
	return RoomType_ROOM_TYPE_UNSPECIFIED
}

func (x *RoomInfo) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *RoomInfo) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *RoomInfo) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

func (x *RoomInfo) GetStatus() RoomStatus {
	if x != nil {
		return x.Status
	}
	return RoomStatus_ROOM_STATUS_UNSPECIFIED
}

func (x *RoomInfo) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *RoomInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *RoomInfo) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *RoomInfo) GetHasPassword() bool {
	if x != nil {
		return x.HasPassword
	}
	return false
}

func (x *RoomInfo) GetPing() int32 {
	if x != nil {
		return x.Ping
	}
	return 0
}

func (x *RoomInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RoomInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RoomInfo) GetSettings() *RoomSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// 房间详情
type RoomDetail struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	BasicInfo      *RoomInfo              `protobuf:"bytes,1,opt,name=basic_info,json=basicInfo,proto3" json:"basic_info,omitempty"`
	Players        []*RoomPlayer          `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Teams          []*RoomTeam            `protobuf:"bytes,3,rep,name=teams,proto3" json:"teams,omitempty"`
	RecentMessages []*RoomMessage         `protobuf:"bytes,4,rep,name=recent_messages,json=recentMessages,proto3" json:"recent_messages,omitempty"`
	CustomRules    map[string]string      `protobuf:"bytes,5,rep,name=custom_rules,json=customRules,proto3" json:"custom_rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Stats          *RoomStats             `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RoomDetail) Reset() {
	*x = RoomDetail{}
	mi := &file_proto_room_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDetail) ProtoMessage() {}

func (x *RoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDetail.ProtoReflect.Descriptor instead.
func (*RoomDetail) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{29}
}

func (x *RoomDetail) GetBasicInfo() *RoomInfo {
	if x != nil {
		return x.BasicInfo
	}
	return nil
}

func (x *RoomDetail) GetPlayers() []*RoomPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *RoomDetail) GetTeams() []*RoomTeam {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *RoomDetail) GetRecentMessages() []*RoomMessage {
	if x != nil {
		return x.RecentMessages
	}
	return nil
}

func (x *RoomDetail) GetCustomRules() map[string]string {
	if x != nil {
		return x.CustomRules
	}
	return nil
}

func (x *RoomDetail) GetStats() *RoomStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 房间玩家
type RoomPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName    string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Level         int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Rank          int32                  `protobuf:"varint,4,opt,name=rank,proto3" json:"rank,omitempty"`
	Role          PlayerRole             `protobuf:"varint,5,opt,name=role,proto3,enum=greatestworks.room.PlayerRole" json:"role,omitempty"`
	TeamId        int32                  `protobuf:"varint,6,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	IsReady       bool                   `protobuf:"varint,7,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	IsOnline      bool                   `protobuf:"varint,8,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	JoinedAt      int64                  `protobuf:"varint,9,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	Stats         *PlayerStats           `protobuf:"bytes,10,opt,name=stats,proto3" json:"stats,omitempty"`
	Position      *common.Position       `protobuf:"bytes,11,opt,name=position,proto3" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomPlayer) Reset() {
	*x = RoomPlayer{}
	mi := &file_proto_room_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPlayer) ProtoMessage() {}

func (x *RoomPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPlayer.ProtoReflect.Descriptor instead.
func (*RoomPlayer) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{30}
}

func (x *RoomPlayer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *RoomPlayer) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *RoomPlayer) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *RoomPlayer) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *RoomPlayer) GetRole() PlayerRole {
	if x != nil {
		return x.Role
	}
	return PlayerRole_PLAYER_ROLE_UNSPECIFIED
}

func (x *RoomPlayer) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *RoomPlayer) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *RoomPlayer) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *RoomPlayer) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

func (x *RoomPlayer) GetStats() *PlayerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *RoomPlayer) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

// 房间队伍
type RoomTeam struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TeamId         int32                  `protobuf:"varint,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName       string                 `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	TeamColor      string                 `protobuf:"bytes,3,opt,name=team_color,json=teamColor,proto3" json:"team_color,omitempty"`
	CurrentMembers int32                  `protobuf:"varint,4,opt,name=current_members,json=currentMembers,proto3" json:"current_members,omitempty"`
	MaxMembers     int32                  `protobuf:"varint,5,opt,name=max_members,json=maxMembers,proto3" json:"max_members,omitempty"`
	PlayerIds      []string               `protobuf:"bytes,6,rep,name=player_ids,json=playerIds,proto3" json:"player_ids,omitempty"`
	IsReady        bool                   `protobuf:"varint,7,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	TeamStats      *TeamStats             `protobuf:"bytes,8,opt,name=team_stats,json=teamStats,proto3" json:"team_stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RoomTeam) Reset() {
	*x = RoomTeam{}
	mi := &file_proto_room_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomTeam) ProtoMessage() {}

func (x *RoomTeam) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomTeam.ProtoReflect.Descriptor instead.
func (*RoomTeam) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{31}
}

func (x *RoomTeam) GetTeamId() int32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *RoomTeam) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *RoomTeam) GetTeamColor() string {
	if x != nil {
		return x.TeamColor
	}
	return ""
}

func (x *RoomTeam) GetCurrentMembers() int32 {
	if x != nil {
		return x.CurrentMembers
	}
	return 0
}

func (x *RoomTeam) GetMaxMembers() int32 {
	if x != nil {
		return x.MaxMembers
	}
	return 0
}

func (x *RoomTeam) GetPlayerIds() []string {
	if x != nil {
		return x.PlayerIds
	}
	return nil
}

func (x *RoomTeam) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *RoomTeam) GetTeamStats() *TeamStats {
	if x != nil {
		return x.TeamStats
	}
	return nil
}

// 房间消息
type RoomMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName    string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	MessageType   RoomMessageType        `protobuf:"varint,5,opt,name=message_type,json=messageType,proto3,enum=greatestworks.room.RoomMessageType" json:"message_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomMessage) Reset() {
	*x = RoomMessage{}
	mi := &file_proto_room_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomMessage) ProtoMessage() {}

func (x *RoomMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomMessage.ProtoReflect.Descriptor instead.
func (*RoomMessage) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{32}
}

func (x *RoomMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *RoomMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *RoomMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *RoomMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RoomMessage) GetMessageType() RoomMessageType {
	if x != nil {
		return x.MessageType
	}
	return RoomMessageType_ROOM_MESSAGE_TYPE_UNSPECIFIED
}

func (x *RoomMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 房间设置
type RoomSettings struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GameDuration       int32                  `protobuf:"varint,1,opt,name=game_duration,json=gameDuration,proto3" json:"game_duration,omitempty"`                                                                         // 游戏时长（分钟）
	PreparationTime    int32                  `protobuf:"varint,2,opt,name=preparation_time,json=preparationTime,proto3" json:"preparation_time,omitempty"`                                                                // 准备时间（秒）
	FriendlyFire       bool                   `protobuf:"varint,3,opt,name=friendly_fire,json=friendlyFire,proto3" json:"friendly_fire,omitempty"`                                                                         // 友军伤害
	SpectatorsAllowed  bool                   `protobuf:"varint,4,opt,name=spectators_allowed,json=spectatorsAllowed,proto3" json:"spectators_allowed,omitempty"`                                                          // 允许观战
	MaxSpectators      int32                  `protobuf:"varint,5,opt,name=max_spectators,json=maxSpectators,proto3" json:"max_spectators,omitempty"`                                                                      // 最大观战人数
	AutoStart          bool                   `protobuf:"varint,6,opt,name=auto_start,json=autoStart,proto3" json:"auto_start,omitempty"`                                                                                  // 自动开始
	AutoStartCountdown int32                  `protobuf:"varint,7,opt,name=auto_start_countdown,json=autoStartCountdown,proto3" json:"auto_start_countdown,omitempty"`                                                     // 自动开始倒计时
	TeamBalance        bool                   `protobuf:"varint,8,opt,name=team_balance,json=teamBalance,proto3" json:"team_balance,omitempty"`                                                                            // 队伍平衡
	Difficulty         DifficultyLevel        `protobuf:"varint,9,opt,name=difficulty,proto3,enum=greatestworks.room.DifficultyLevel" json:"difficulty,omitempty"`                                                         // 难度等级
	ScoreLimits        map[string]int32       `protobuf:"bytes,10,rep,name=score_limits,json=scoreLimits,proto3" json:"score_limits,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 分数限制
	BannedItems        []string               `protobuf:"bytes,11,rep,name=banned_items,json=bannedItems,proto3" json:"banned_items,omitempty"`                                                                            // 禁用物品
	BannedSkills       []string               `protobuf:"bytes,12,rep,name=banned_skills,json=bannedSkills,proto3" json:"banned_skills,omitempty"`                                                                         // 禁用技能
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RoomSettings) Reset() {
	*x = RoomSettings{}
	mi := &file_proto_room_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomSettings) ProtoMessage() {}

func (x *RoomSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomSettings.ProtoReflect.Descriptor instead.
func (*RoomSettings) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{33}
}

func (x *RoomSettings) GetGameDuration() int32 {
	if x != nil {
		return x.GameDuration
	}
	return 0
}

func (x *RoomSettings) GetPreparationTime() int32 {
	if x != nil {
		return x.PreparationTime
	}
	return 0
}

func (x *RoomSettings) GetFriendlyFire() bool {
	if x != nil {
		return x.FriendlyFire
	}
	return false
}

func (x *RoomSettings) GetSpectatorsAllowed() bool {
	if x != nil {
		return x.SpectatorsAllowed
	}
	return false
}

func (x *RoomSettings) GetMaxSpectators() int32 {
	if x != nil {
		return x.MaxSpectators
	}
	return 0
}

func (x *RoomSettings) GetAutoStart() bool {
	if x != nil {
		return x.AutoStart
	}
	return false
}

func (x *RoomSettings) GetAutoStartCountdown() int32 {
	if x != nil {
		return x.AutoStartCountdown
	}
	return 0
}

func (x *RoomSettings) GetTeamBalance() bool {
	if x != nil {
		return x.TeamBalance
	}
	return false
}

func (x *RoomSettings) GetDifficulty() DifficultyLevel {
	if x != nil {
		return x.Difficulty
	}
	return DifficultyLevel_DIFFICULTY_LEVEL_UNSPECIFIED
}

func (x *RoomSettings) GetScoreLimits() map[string]int32 {
	if x != nil {
		return x.ScoreLimits
	}
	return nil
}

func (x *RoomSettings) GetBannedItems() []string {
	if x != nil {
		return x.BannedItems
	}
	return nil
}

func (x *RoomSettings) GetBannedSkills() []string {
	if x != nil {
		return x.BannedSkills
	}
	return nil
}

// 玩家统计
type PlayerStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kills         int32                  `protobuf:"varint,1,opt,name=kills,proto3" json:"kills,omitempty"`
	Deaths        int32                  `protobuf:"varint,2,opt,name=deaths,proto3" json:"deaths,omitempty"`
	Assists       int32                  `protobuf:"varint,3,opt,name=assists,proto3" json:"assists,omitempty"`
	KdRatio       float32                `protobuf:"fixed32,4,opt,name=kd_ratio,json=kdRatio,proto3" json:"kd_ratio,omitempty"`
	Score         int32                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`
	GamesPlayed   int32                  `protobuf:"varint,6,opt,name=games_played,json=gamesPlayed,proto3" json:"games_played,omitempty"`
	Wins          int32                  `protobuf:"varint,7,opt,name=wins,proto3" json:"wins,omitempty"`
	WinRate       float32                `protobuf:"fixed32,8,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	mi := &file_proto_room_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{34}
}

func (x *PlayerStats) GetKills() int32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *PlayerStats) GetDeaths() int32 {
	if x != nil {
		return x.Deaths
	}
	return 0
}

func (x *PlayerStats) GetAssists() int32 {
	if x != nil {
		return x.Assists
	}
	return 0
}

func (x *PlayerStats) GetKdRatio() float32 {
	if x != nil {
		return x.KdRatio
	}
	return 0
}

func (x *PlayerStats) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *PlayerStats) GetGamesPlayed() int32 {
	if x != nil {
		return x.GamesPlayed
	}
	return 0
}

func (x *PlayerStats) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *PlayerStats) GetWinRate() float32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

// 队伍统计
type TeamStats struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalScore          int32                  `protobuf:"varint,1,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	TotalKills          int32                  `protobuf:"varint,2,opt,name=total_kills,json=totalKills,proto3" json:"total_kills,omitempty"`
	TotalDeaths         int32                  `protobuf:"varint,3,opt,name=total_deaths,json=totalDeaths,proto3" json:"total_deaths,omitempty"`
	AverageKd           float32                `protobuf:"fixed32,4,opt,name=average_kd,json=averageKd,proto3" json:"average_kd,omitempty"`
	ObjectivesCompleted int32                  `protobuf:"varint,5,opt,name=objectives_completed,json=objectivesCompleted,proto3" json:"objectives_completed,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TeamStats) Reset() {
	*x = TeamStats{}
	mi := &file_proto_room_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStats) ProtoMessage() {}

func (x *TeamStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStats.ProtoReflect.Descriptor instead.
func (*TeamStats) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{35}
}

func (x *TeamStats) GetTotalScore() int32 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *TeamStats) GetTotalKills() int32 {
	if x != nil {
		return x.TotalKills
	}
	return 0
}

func (x *TeamStats) GetTotalDeaths() int32 {
	if x != nil {
		return x.TotalDeaths
	}
	return 0
}

func (x *TeamStats) GetAverageKd() float32 {
	if x != nil {
		return x.AverageKd
	}
	return 0
}

func (x *TeamStats) GetObjectivesCompleted() int32 {
	if x != nil {
		return x.ObjectivesCompleted
	}
	return 0
}

// 房间统计
type RoomStats struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalGamesPlayed    int32                  `protobuf:"varint,1,opt,name=total_games_played,json=totalGamesPlayed,proto3" json:"total_games_played,omitempty"`
	TotalPlaytime       int64                  `protobuf:"varint,2,opt,name=total_playtime,json=totalPlaytime,proto3" json:"total_playtime,omitempty"`
	AveragePlayers      int32                  `protobuf:"varint,3,opt,name=average_players,json=averagePlayers,proto3" json:"average_players,omitempty"`
	AverageGameDuration float32                `protobuf:"fixed32,4,opt,name=average_game_duration,json=averageGameDuration,proto3" json:"average_game_duration,omitempty"`
	LastActive          int64                  `protobuf:"varint,5,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RoomStats) Reset() {
	*x = RoomStats{}
	mi := &file_proto_room_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomStats) ProtoMessage() {}

func (x *RoomStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_room_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomStats.ProtoReflect.Descriptor instead.
func (*RoomStats) Descriptor() ([]byte, []int) {
	return file_proto_room_proto_rawDescGZIP(), []int{36}
}

func (x *RoomStats) GetTotalGamesPlayed() int32 {
	if x != nil {
		return x.TotalGamesPlayed
	}
	return 0
}

func (x *RoomStats) GetTotalPlaytime() int64 {
	if x != nil {
		return x.TotalPlaytime
	}
	return 0
}

func (x *RoomStats) GetAveragePlayers() int32 {
	if x != nil {
		return x.AveragePlayers
	}
	return 0
}

func (x *RoomStats) GetAverageGameDuration() float32 {
	if x != nil {
		return x.AverageGameDuration
	}
	return 0
}

func (x *RoomStats) GetLastActive() int64 {
	if x != nil {
		return x.LastActive
	}
	return 0
}

var File_proto_room_proto protoreflect.FileDescriptor

const file_proto_room_proto_rawDesc = "" +
	"\n" +
	"\x10proto/room.proto\x12\x12greatestworks.room\x1a\x12proto/common.proto\"\xef\x03\n" +
	"\x11CreateRoomRequest\x12\x19\n" +
	"\bowner_id\x18\x01 \x01(\tR\aownerId\x12\x1b\n" +
	"\troom_name\x18\x02 \x01(\tR\broomName\x129\n" +
	"\troom_type\x18\x03 \x01(\x0e2\x1c.greatestworks.room.RoomTypeR\broomType\x12\x1b\n" +
	"\tgame_mode\x18\x04 \x01(\tR\bgameMode\x12\x15\n" +
	"\x06map_id\x18\x05 \x01(\tR\x05mapId\x12\x1f\n" +
	"\vmax_players\x18\x06 \x01(\x05R\n" +
	"maxPlayers\x12\x1d\n" +
	"\n" +
	"is_private\x18\a \x01(\bR\tisPrivate\x12\x1a\n" +
	"\bpassword\x18\b \x01(\tR\bpassword\x12<\n" +
	"\bsettings\x18\t \x01(\v2 .greatestworks.room.RoomSettingsR\bsettings\x12Y\n" +
	"\fcustom_rules\x18\n" +
	" \x03(\v26.greatestworks.room.CreateRoomRequest.CustomRulesEntryR\vcustomRules\x1a>\n" +
	"\x10CustomRulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x01\n" +
	"\x12CreateRoomResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x129\n" +
	"\troom_info\x18\x03 \x01(\v2\x1c.greatestworks.room.RoomInfoR\broomInfo\"\xb3\x01\n" +
	"\x0fJoinRoomRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12'\n" +
	"\x0finvitation_code\x18\x04 \x01(\tR\x0einvitationCode\x12%\n" +
	"\x0epreferred_team\x18\x05 \x01(\x05R\rpreferredTeam\"\x91\x02\n" +
	"\x10JoinRoomResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x129\n" +
	"\troom_info\x18\x02 \x01(\v2\x1c.greatestworks.room.RoomInfoR\broomInfo\x12?\n" +
	"\vplayer_info\x18\x03 \x01(\v2\x1e.greatestworks.room.RoomPlayerR\n" +
	"playerInfo\x12C\n" +
	"\rother_players\x18\x04 \x03(\v2\x1e.greatestworks.room.RoomPlayerR\fotherPlayers\"H\n" +
	"\x10LeaveRoomRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\"Q\n" +
	"\x11LeaveRoomResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\x9b\x02\n" +
	"\x12GetRoomListRequest\x129\n" +
	"\troom_type\x18\x01 \x01(\x0e2\x1c.greatestworks.room.RoomTypeR\broomType\x12\x1b\n" +
	"\tgame_mode\x18\x02 \x01(\tR\bgameMode\x12\x1f\n" +
	"\vonly_public\x18\x03 \x01(\bR\n" +
	"onlyPublic\x12%\n" +
	"\x0eonly_available\x18\x04 \x01(\bR\ronlyAvailable\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x05R\x06offset\x127\n" +
	"\asort_by\x18\a \x01(\x0e2\x1e.greatestworks.room.RoomSortByR\x06sortBy\"\xcd\x01\n" +
	"\x13GetRoomListResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x122\n" +
	"\x05rooms\x18\x02 \x03(\v2\x1c.greatestworks.room.RoomInfoR\x05rooms\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\"J\n" +
	"\x12GetRoomInfoRequest\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\"\x94\x01\n" +
	"\x13GetRoomInfoResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12?\n" +
	"\vroom_detail\x18\x02 \x01(\v2\x1e.greatestworks.room.RoomDetailR\n" +
	"roomDetail\"\xb2\x02\n" +
	"\x19UpdateRoomSettingsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12<\n" +
	"\bsettings\x18\x03 \x01(\v2 .greatestworks.room.RoomSettingsR\bsettings\x12a\n" +
	"\fcustom_rules\x18\x04 \x03(\v2>.greatestworks.room.UpdateRoomSettingsRequest.CustomRulesEntryR\vcustomRules\x1a>\n" +
	"\x10CustomRulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9f\x01\n" +
	"\x1aUpdateRoomSettingsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12C\n" +
	"\fnew_settings\x18\x02 \x01(\v2 .greatestworks.room.RoomSettingsR\vnewSettings\"\x8b\x01\n" +
	"\x11KickPlayerRequest\x12\x1b\n" +
	"\tkicker_id\x18\x01 \x01(\tR\bkickerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12(\n" +
	"\x10target_player_id\x18\x03 \x01(\tR\x0etargetPlayerId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"R\n" +
	"\x12KickPlayerResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\x7f\n" +
	"\x18TransferOwnershipRequest\x12(\n" +
	"\x10current_owner_id\x18\x01 \x01(\tR\x0ecurrentOwnerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12 \n" +
	"\fnew_owner_id\x18\x03 \x01(\tR\n" +
	"newOwnerId\"\x96\x01\n" +
	"\x19TransferOwnershipResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12;\n" +
	"\tnew_owner\x18\x02 \x01(\v2\x1e.greatestworks.room.RoomPlayerR\bnewOwner\"g\n" +
	"\x10StartGameRequest\x12\x19\n" +
	"\bowner_id\x18\x01 \x01(\tR\aownerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1f\n" +
	"\vforce_start\x18\x03 \x01(\bR\n" +
	"forceStart\"\x98\x01\n" +
	"\x11StartGameResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12&\n" +
	"\x0fgame_session_id\x18\x02 \x01(\tR\rgameSessionId\x12\x1d\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03R\tstartTime\"b\n" +
	"\x0fSetReadyRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x19\n" +
	"\bis_ready\x18\x03 \x01(\bR\aisReady\"\x97\x01\n" +
	"\x10SetReadyResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12\x19\n" +
	"\bis_ready\x18\x02 \x01(\bR\aisReady\x12*\n" +
	"\x11all_players_ready\x18\x03 \x01(\bR\x0fallPlayersReady\"\x91\x01\n" +
	"\x13InvitePlayerRequest\x12\x1d\n" +
	"\n" +
	"inviter_id\x18\x01 \x01(\tR\tinviterId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12(\n" +
	"\x10target_player_id\x18\x03 \x01(\tR\x0etargetPlayerId\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"y\n" +
	"\x14InvitePlayerResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12#\n" +
	"\rinvitation_id\x18\x02 \x01(\tR\finvitationId\"\x9b\x02\n" +
	"\x12SearchRoomsRequest\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12\x1d\n" +
	"\n" +
	"owner_name\x18\x02 \x01(\tR\townerName\x129\n" +
	"\troom_type\x18\x03 \x01(\x0e2\x1c.greatestworks.room.RoomTypeR\broomType\x12\x1b\n" +
	"\tgame_mode\x18\x04 \x01(\tR\bgameMode\x12\x1f\n" +
	"\vonly_public\x18\x05 \x01(\bR\n" +
	"onlyPublic\x12%\n" +
	"\x0eonly_available\x18\x06 \x01(\bR\ronlyAvailable\x12\x14\n" +
	"\x05limit\x18\a \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\b \x01(\x05R\x06offset\"\xcd\x01\n" +
	"\x13SearchRoomsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x122\n" +
	"\x05rooms\x18\x02 \x03(\v2\x1c.greatestworks.room.RoomInfoR\x05rooms\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\"\xb0\x01\n" +
	"\x16SendRoomMessageRequest\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12F\n" +
	"\fmessage_type\x18\x04 \x01(\x0e2#.greatestworks.room.RoomMessageTypeR\vmessageType\"v\n" +
	"\x17SendRoomMessageResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\"o\n" +
	"\x16SetRoomPasswordRequest\x12\x19\n" +
	"\bowner_id\x18\x01 \x01(\tR\aownerId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12!\n" +
	"\fnew_password\x18\x03 \x01(\tR\vnewPassword\"z\n" +
	"\x17SetRoomPasswordResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12!\n" +
	"\fhas_password\x18\x02 \x01(\bR\vhasPassword\"\xd1\x04\n" +
	"\bRoomInfo\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\troom_name\x18\x02 \x01(\tR\broomName\x12\x19\n" +
	"\bowner_id\x18\x03 \x01(\tR\aownerId\x12\x1d\n" +
	"\n" +
	"owner_name\x18\x04 \x01(\tR\townerName\x129\n" +
	"\troom_type\x18\x05 \x01(\x0e2\x1c.greatestworks.room.RoomTypeR\broomType\x12\x1b\n" +
	"\tgame_mode\x18\x06 \x01(\tR\bgameMode\x12\x15\n" +
	"\x06map_id\x18\a \x01(\tR\x05mapId\x12\x19\n" +
	"\bmap_name\x18\b \x01(\tR\amapName\x126\n" +
	"\x06status\x18\t \x01(\x0e2\x1e.greatestworks.room.RoomStatusR\x06status\x12'\n" +
	"\x0fcurrent_players\x18\n" +
	" \x01(\x05R\x0ecurrentPlayers\x12\x1f\n" +
	"\vmax_players\x18\v \x01(\x05R\n" +
	"maxPlayers\x12\x1d\n" +
	"\n" +
	"is_private\x18\f \x01(\bR\tisPrivate\x12!\n" +
	"\fhas_password\x18\r \x01(\bR\vhasPassword\x12\x12\n" +
	"\x04ping\x18\x0e \x01(\x05R\x04ping\x12\x16\n" +
	"\x06region\x18\x0f \x01(\tR\x06region\x12\x1d\n" +
	"\n" +
	"created_at\x18\x10 \x01(\x03R\tcreatedAt\x12<\n" +
	"\bsettings\x18\x11 \x01(\v2 .greatestworks.room.RoomSettingsR\bsettings\"\xca\x03\n" +
	"\n" +
	"RoomDetail\x12;\n" +
	"\n" +
	"basic_info\x18\x01 \x01(\v2\x1c.greatestworks.room.RoomInfoR\tbasicInfo\x128\n" +
	"\aplayers\x18\x02 \x03(\v2\x1e.greatestworks.room.RoomPlayerR\aplayers\x122\n" +
	"\x05teams\x18\x03 \x03(\v2\x1c.greatestworks.room.RoomTeamR\x05teams\x12H\n" +
	"\x0frecent_messages\x18\x04 \x03(\v2\x1f.greatestworks.room.RoomMessageR\x0erecentMessages\x12R\n" +
	"\fcustom_rules\x18\x05 \x03(\v2/.greatestworks.room.RoomDetail.CustomRulesEntryR\vcustomRules\x123\n" +
	"\x05stats\x18\x06 \x01(\v2\x1d.greatestworks.room.RoomStatsR\x05stats\x1a>\n" +
	"\x10CustomRulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x03\n" +
	"\n" +
	"RoomPlayer\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12\x12\n" +
	"\x04rank\x18\x04 \x01(\x05R\x04rank\x122\n" +
	"\x04role\x18\x05 \x01(\x0e2\x1e.greatestworks.room.PlayerRoleR\x04role\x12\x17\n" +
	"\ateam_id\x18\x06 \x01(\x05R\x06teamId\x12\x19\n" +
	"\bis_ready\x18\a \x01(\bR\aisReady\x12\x1b\n" +
	"\tis_online\x18\b \x01(\bR\bisOnline\x12\x1b\n" +
	"\tjoined_at\x18\t \x01(\x03R\bjoinedAt\x125\n" +
	"\x05stats\x18\n" +
	" \x01(\v2\x1f.greatestworks.room.PlayerStatsR\x05stats\x12:\n" +
	"\bposition\x18\v \x01(\v2\x1e.greatestworks.common.PositionR\bposition\"\xa1\x02\n" +
	"\bRoomTeam\x12\x17\n" +
	"\ateam_id\x18\x01 \x01(\x05R\x06teamId\x12\x1b\n" +
	"\tteam_name\x18\x02 \x01(\tR\bteamName\x12\x1d\n" +
	"\n" +
	"team_color\x18\x03 \x01(\tR\tteamColor\x12'\n" +
	"\x0fcurrent_members\x18\x04 \x01(\x05R\x0ecurrentMembers\x12\x1f\n" +
	"\vmax_members\x18\x05 \x01(\x05R\n" +
	"maxMembers\x12\x1d\n" +
	"\n" +
	"player_ids\x18\x06 \x03(\tR\tplayerIds\x12\x19\n" +
	"\bis_ready\x18\a \x01(\bR\aisReady\x12<\n" +
	"\n" +
	"team_stats\x18\b \x01(\v2\x1d.greatestworks.room.TeamStatsR\tteamStats\"\xea\x01\n" +
	"\vRoomMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12F\n" +
	"\fmessage_type\x18\x05 \x01(\x0e2#.greatestworks.room.RoomMessageTypeR\vmessageType\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\"\xf0\x04\n" +
	"\fRoomSettings\x12#\n" +
	"\rgame_duration\x18\x01 \x01(\x05R\fgameDuration\x12)\n" +
	"\x10preparation_time\x18\x02 \x01(\x05R\x0fpreparationTime\x12#\n" +
	"\rfriendly_fire\x18\x03 \x01(\bR\ffriendlyFire\x12-\n" +
	"\x12spectators_allowed\x18\x04 \x01(\bR\x11spectatorsAllowed\x12%\n" +
	"\x0emax_spectators\x18\x05 \x01(\x05R\rmaxSpectators\x12\x1d\n" +
	"\n" +
	"auto_start\x18\x06 \x01(\bR\tautoStart\x120\n" +
	"\x14auto_start_countdown\x18\a \x01(\x05R\x12autoStartCountdown\x12!\n" +
	"\fteam_balance\x18\b \x01(\bR\vteamBalance\x12C\n" +
	"\n" +
	"difficulty\x18\t \x01(\x0e2#.greatestworks.room.DifficultyLevelR\n" +
	"difficulty\x12T\n" +
	"\fscore_limits\x18\n" +
	" \x03(\v21.greatestworks.room.RoomSettings.ScoreLimitsEntryR\vscoreLimits\x12!\n" +
	"\fbanned_items\x18\v \x03(\tR\vbannedItems\x12#\n" +
	"\rbanned_skills\x18\f \x03(\tR\fbannedSkills\x1a>\n" +
	"\x10ScoreLimitsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xd8\x01\n" +
	"\vPlayerStats\x12\x14\n" +
	"\x05kills\x18\x01 \x01(\x05R\x05kills\x12\x16\n" +
	"\x06deaths\x18\x02 \x01(\x05R\x06deaths\x12\x18\n" +
	"\aassists\x18\x03 \x01(\x05R\aassists\x12\x19\n" +
	"\bkd_ratio\x18\x04 \x01(\x02R\akdRatio\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x05R\x05score\x12!\n" +
	"\fgames_played\x18\x06 \x01(\x05R\vgamesPlayed\x12\x12\n" +
	"\x04wins\x18\a \x01(\x05R\x04wins\x12\x19\n" +
	"\bwin_rate\x18\b \x01(\x02R\awinRate\"\xc2\x01\n" +
	"\tTeamStats\x12\x1f\n" +
	"\vtotal_score\x18\x01 \x01(\x05R\n" +
	"totalScore\x12\x1f\n" +
	"\vtotal_kills\x18\x02 \x01(\x05R\n" +
	"totalKills\x12!\n" +
	"\ftotal_deaths\x18\x03 \x01(\x05R\vtotalDeaths\x12\x1d\n" +
	"\n" +
	"average_kd\x18\x04 \x01(\x02R\taverageKd\x121\n" +
	"\x14objectives_completed\x18\x05 \x01(\x05R\x13objectivesCompleted\"\xde\x01\n" +
	"\tRoomStats\x12,\n" +
	"\x12total_games_played\x18\x01 \x01(\x05R\x10totalGamesPlayed\x12%\n" +
	"\x0etotal_playtime\x18\x02 \x01(\x03R\rtotalPlaytime\x12'\n" +
	"\x0faverage_players\x18\x03 \x01(\x05R\x0eaveragePlayers\x122\n" +
	"\x15average_game_duration\x18\x04 \x01(\x02R\x13averageGameDuration\x12\x1f\n" +
	"\vlast_active\x18\x05 \x01(\x03R\n" +
	"lastActive*\xce\x01\n" +
	"\bRoomType\x12\x19\n" +
	"\x15ROOM_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10ROOM_TYPE_CASUAL\x10\x01\x12\x14\n" +
	"\x10ROOM_TYPE_RANKED\x10\x02\x12\x14\n" +
	"\x10ROOM_TYPE_CUSTOM\x10\x03\x12\x18\n" +
	"\x14ROOM_TYPE_TOURNAMENT\x10\x04\x12\x16\n" +
	"\x12ROOM_TYPE_PRACTICE\x10\x05\x12\x16\n" +
	"\x12ROOM_TYPE_SPECTATE\x10\x06\x12\x1b\n" +
	"\x17ROOM_TYPE_PRIVATE_MATCH\x10\a*\xc3\x01\n" +
	"\n" +
	"RoomStatus\x12\x1b\n" +
	"\x17ROOM_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13ROOM_STATUS_WAITING\x10\x01\x12\x19\n" +
	"\x15ROOM_STATUS_PREPARING\x10\x02\x12\x17\n" +
	"\x13ROOM_STATUS_IN_GAME\x10\x03\x12\x18\n" +
	"\x14ROOM_STATUS_FINISHED\x10\x04\x12\x19\n" +
	"\x15ROOM_STATUS_DISBANDED\x10\x05\x12\x16\n" +
	"\x12ROOM_STATUS_PAUSED\x10\x06*\x8e\x01\n" +
	"\n" +
	"PlayerRole\x12\x1b\n" +
	"\x17PLAYER_ROLE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11PLAYER_ROLE_OWNER\x10\x01\x12\x19\n" +
	"\x15PLAYER_ROLE_MODERATOR\x10\x02\x12\x16\n" +
	"\x12PLAYER_ROLE_PLAYER\x10\x03\x12\x19\n" +
	"\x15PLAYER_ROLE_SPECTATOR\x10\x04*\xfc\x01\n" +
	"\x0fRoomMessageType\x12!\n" +
	"\x1dROOM_MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16ROOM_MESSAGE_TYPE_CHAT\x10\x01\x12\x1c\n" +
	"\x18ROOM_MESSAGE_TYPE_SYSTEM\x10\x02\x12\x1a\n" +
	"\x16ROOM_MESSAGE_TYPE_JOIN\x10\x03\x12\x1b\n" +
	"\x17ROOM_MESSAGE_TYPE_LEAVE\x10\x04\x12\x1b\n" +
	"\x17ROOM_MESSAGE_TYPE_READY\x10\x05\x12\x1b\n" +
	"\x17ROOM_MESSAGE_TYPE_START\x10\x06\x12\x19\n" +
	"\x15ROOM_MESSAGE_TYPE_END\x10\a*\xae\x01\n" +
	"\n" +
	"RoomSortBy\x12\x1c\n" +
	"\x18ROOM_SORT_BY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11ROOM_SORT_BY_NAME\x10\x01\x12\x18\n" +
	"\x14ROOM_SORT_BY_PLAYERS\x10\x02\x12\x1d\n" +
	"\x19ROOM_SORT_BY_CREATED_TIME\x10\x03\x12\x15\n" +
	"\x11ROOM_SORT_BY_PING\x10\x04\x12\x1b\n" +
	"\x17ROOM_SORT_BY_POPULARITY\x10\x05*\xc3\x01\n" +
	"\x0fDifficultyLevel\x12 \n" +
	"\x1cDIFFICULTY_LEVEL_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15DIFFICULTY_LEVEL_EASY\x10\x01\x12\x1b\n" +
	"\x17DIFFICULTY_LEVEL_NORMAL\x10\x02\x12\x19\n" +
	"\x15DIFFICULTY_LEVEL_HARD\x10\x03\x12\x1b\n" +
	"\x17DIFFICULTY_LEVEL_EXPERT\x10\x04\x12\x1e\n" +
	"\x1aDIFFICULTY_LEVEL_NIGHTMARE\x10\x052\xeb\n" +
	"\n" +
	"\vRoomService\x12[\n" +
	"\n" +
	"CreateRoom\x12%.greatestworks.room.CreateRoomRequest\x1a&.greatestworks.room.CreateRoomResponse\x12U\n" +
	"\bJoinRoom\x12#.greatestworks.room.JoinRoomRequest\x1a$.greatestworks.room.JoinRoomResponse\x12X\n" +
	"\tLeaveRoom\x12$.greatestworks.room.LeaveRoomRequest\x1a%.greatestworks.room.LeaveRoomResponse\x12^\n" +
	"\vGetRoomList\x12&.greatestworks.room.GetRoomListRequest\x1a'.greatestworks.room.GetRoomListResponse\x12^\n" +
	"\vGetRoomInfo\x12&.greatestworks.room.GetRoomInfoRequest\x1a'.greatestworks.room.GetRoomInfoResponse\x12s\n" +
	"\x12UpdateRoomSettings\x12-.greatestworks.room.UpdateRoomSettingsRequest\x1a..greatestworks.room.UpdateRoomSettingsResponse\x12[\n" +
	"\n" +
	"KickPlayer\x12%.greatestworks.room.KickPlayerRequest\x1a&.greatestworks.room.KickPlayerResponse\x12p\n" +
	"\x11TransferOwnership\x12,.greatestworks.room.TransferOwnershipRequest\x1a-.greatestworks.room.TransferOwnershipResponse\x12X\n" +
	"\tStartGame\x12$.greatestworks.room.StartGameRequest\x1a%.greatestworks.room.StartGameResponse\x12U\n" +
	"\bSetReady\x12#.greatestworks.room.SetReadyRequest\x1a$.greatestworks.room.SetReadyResponse\x12a\n" +
	"\fInvitePlayer\x12'.greatestworks.room.InvitePlayerRequest\x1a(.greatestworks.room.InvitePlayerResponse\x12^\n" +
	"\vSearchRooms\x12&.greatestworks.room.SearchRoomsRequest\x1a'.greatestworks.room.SearchRoomsResponse\x12j\n" +
	"\x0fSendRoomMessage\x12*.greatestworks.room.SendRoomMessageRequest\x1a+.greatestworks.room.SendRoomMessageResponse\x12j\n" +
	"\x0fSetRoomPassword\x12*.greatestworks.room.SetRoomPasswordRequest\x1a+.greatestworks.room.SetRoomPasswordResponseB8Z!greatestworks/internal/proto/room\xaa\x02\x12GreatestWorks.Roomb\x06proto3"

var (
	file_proto_room_proto_rawDescOnce sync.Once
	file_proto_room_proto_rawDescData []byte
)

func file_proto_room_proto_rawDescGZIP() []byte {
	file_proto_room_proto_rawDescOnce.Do(func() {
		file_proto_room_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_room_proto_rawDesc), len(file_proto_room_proto_rawDesc)))
	})
	return file_proto_room_proto_rawDescData
}

var file_proto_room_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_room_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_proto_room_proto_goTypes = []any{
	(RoomType)(0),                      // 0: greatestworks.room.RoomType
	(RoomStatus)(0),                    // 1: greatestworks.room.RoomStatus
	(PlayerRole)(0),                    // 2: greatestworks.room.PlayerRole
	(RoomMessageType)(0),               // 3: greatestworks.room.RoomMessageType
	(RoomSortBy)(0),                    // 4: greatestworks.room.RoomSortBy
	(DifficultyLevel)(0),               // 5: greatestworks.room.DifficultyLevel
	(*CreateRoomRequest)(nil),          // 6: greatestworks.room.CreateRoomRequest
	(*CreateRoomResponse)(nil),         // 7: greatestworks.room.CreateRoomResponse
	(*JoinRoomRequest)(nil),            // 8: greatestworks.room.JoinRoomRequest
	(*JoinRoomResponse)(nil),           // 9: greatestworks.room.JoinRoomResponse
	(*LeaveRoomRequest)(nil),           // 10: greatestworks.room.LeaveRoomRequest
	(*LeaveRoomResponse)(nil),          // 11: greatestworks.room.LeaveRoomResponse
	(*GetRoomListRequest)(nil),         // 12: greatestworks.room.GetRoomListRequest
	(*GetRoomListResponse)(nil),        // 13: greatestworks.room.GetRoomListResponse
	(*GetRoomInfoRequest)(nil),         // 14: greatestworks.room.GetRoomInfoRequest
	(*GetRoomInfoResponse)(nil),        // 15: greatestworks.room.GetRoomInfoResponse
	(*UpdateRoomSettingsRequest)(nil),  // 16: greatestworks.room.UpdateRoomSettingsRequest
	(*UpdateRoomSettingsResponse)(nil), // 17: greatestworks.room.UpdateRoomSettingsResponse
	(*KickPlayerRequest)(nil),          // 18: greatestworks.room.KickPlayerRequest
	(*KickPlayerResponse)(nil),         // 19: greatestworks.room.KickPlayerResponse
	(*TransferOwnershipRequest)(nil),   // 20: greatestworks.room.TransferOwnershipRequest
	(*TransferOwnershipResponse)(nil),  // 21: greatestworks.room.TransferOwnershipResponse
	(*StartGameRequest)(nil),           // 22: greatestworks.room.StartGameRequest
	(*StartGameResponse)(nil),          // 23: greatestworks.room.StartGameResponse
	(*SetReadyRequest)(nil),            // 24: greatestworks.room.SetReadyRequest
	(*SetReadyResponse)(nil),           // 25: greatestworks.room.SetReadyResponse
	(*InvitePlayerRequest)(nil),        // 26: greatestworks.room.InvitePlayerRequest
	(*InvitePlayerResponse)(nil),       // 27: greatestworks.room.InvitePlayerResponse
	(*SearchRoomsRequest)(nil),         // 28: greatestworks.room.SearchRoomsRequest
	(*SearchRoomsResponse)(nil),        // 29: greatestworks.room.SearchRoomsResponse
	(*SendRoomMessageRequest)(nil),     // 30: greatestworks.room.SendRoomMessageRequest
	(*SendRoomMessageResponse)(nil),    // 31: greatestworks.room.SendRoomMessageResponse
	(*SetRoomPasswordRequest)(nil),     // 32: greatestworks.room.SetRoomPasswordRequest
	(*SetRoomPasswordResponse)(nil),    // 33: greatestworks.room.SetRoomPasswordResponse
	(*RoomInfo)(nil),                   // 34: greatestworks.room.RoomInfo
	(*RoomDetail)(nil),                 // 35: greatestworks.room.RoomDetail
	(*RoomPlayer)(nil),                 // 36: greatestworks.room.RoomPlayer
	(*RoomTeam)(nil),                   // 37: greatestworks.room.RoomTeam
	(*RoomMessage)(nil),                // 38: greatestworks.room.RoomMessage
	(*RoomSettings)(nil),               // 39: greatestworks.room.RoomSettings
	(*PlayerStats)(nil),                // 40: greatestworks.room.PlayerStats
	(*TeamStats)(nil),                  // 41: greatestworks.room.TeamStats
	(*RoomStats)(nil),                  // 42: greatestworks.room.RoomStats
	nil,                                // 43: greatestworks.room.CreateRoomRequest.CustomRulesEntry
	nil,                                // 44: greatestworks.room.UpdateRoomSettingsRequest.CustomRulesEntry
	nil,                                // 45: greatestworks.room.RoomDetail.CustomRulesEntry
	nil,                                // 46: greatestworks.room.RoomSettings.ScoreLimitsEntry
	(*common.CommonResponse)(nil),      // 47: greatestworks.common.CommonResponse
	(*common.PaginationInfo)(nil),      // 48: greatestworks.common.PaginationInfo
	(*common.Position)(nil),            // 49: greatestworks.common.Position
}
var file_proto_room_proto_depIdxs = []int32{
	0,  // 0: greatestworks.room.CreateRoomRequest.room_type:type_name -> greatestworks.room.RoomType
	39, // 1: greatestworks.room.CreateRoomRequest.settings:type_name -> greatestworks.room.RoomSettings
	43, // 2: greatestworks.room.CreateRoomRequest.custom_rules:type_name -> greatestworks.room.CreateRoomRequest.CustomRulesEntry
	47, // 3: greatestworks.room.CreateRoomResponse.common:type_name -> greatestworks.common.CommonResponse
	34, // 4: greatestworks.room.CreateRoomResponse.room_info:type_name -> greatestworks.room.RoomInfo
	47, // 5: greatestworks.room.JoinRoomResponse.common:type_name -> greatestworks.common.CommonResponse
	34, // 6: greatestworks.room.JoinRoomResponse.room_info:type_name -> greatestworks.room.RoomInfo
	36, // 7: greatestworks.room.JoinRoomResponse.player_info:type_name -> greatestworks.room.RoomPlayer
	36, // 8: greatestworks.room.JoinRoomResponse.other_players:type_name -> greatestworks.room.RoomPlayer
	47, // 9: greatestworks.room.LeaveRoomResponse.common:type_name -> greatestworks.common.CommonResponse
	0,  // 10: greatestworks.room.GetRoomListRequest.room_type:type_name -> greatestworks.room.RoomType
	4,  // 11: greatestworks.room.GetRoomListRequest.sort_by:type_name -> greatestworks.room.RoomSortBy
	47, // 12: greatestworks.room.GetRoomListResponse.common:type_name -> greatestworks.common.CommonResponse
	34, // 13: greatestworks.room.GetRoomListResponse.rooms:type_name -> greatestworks.room.RoomInfo
	48, // 14: greatestworks.room.GetRoomListResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	47, // 15: greatestworks.room.GetRoomInfoResponse.common:type_name -> greatestworks.common.CommonResponse
	35, // 16: greatestworks.room.GetRoomInfoResponse.room_detail:type_name -> greatestworks.room.RoomDetail
	39, // 17: greatestworks.room.UpdateRoomSettingsRequest.settings:type_name -> greatestworks.room.RoomSettings
	44, // 18: greatestworks.room.UpdateRoomSettingsRequest.custom_rules:type_name -> greatestworks.room.UpdateRoomSettingsRequest.CustomRulesEntry
	47, // 19: greatestworks.room.UpdateRoomSettingsResponse.common:type_name -> greatestworks.common.CommonResponse
	39, // 20: greatestworks.room.UpdateRoomSettingsResponse.new_settings:type_name -> greatestworks.room.RoomSettings
	47, // 21: greatestworks.room.KickPlayerResponse.common:type_name -> greatestworks.common.CommonResponse
	47, // 22: greatestworks.room.TransferOwnershipResponse.common:type_name -> greatestworks.common.CommonResponse
	36, // 23: greatestworks.room.TransferOwnershipResponse.new_owner:type_name -> greatestworks.room.RoomPlayer
	47, // 24: greatestworks.room.StartGameResponse.common:type_name -> greatestworks.common.CommonResponse
	47, // 25: greatestworks.room.SetReadyResponse.common:type_name -> greatestworks.common.CommonResponse
	47, // 26: greatestworks.room.InvitePlayerResponse.common:type_name -> greatestworks.common.CommonResponse
	0,  // 27: greatestworks.room.SearchRoomsRequest.room_type:type_name -> greatestworks.room.RoomType
	47, // 28: greatestworks.room.SearchRoomsResponse.common:type_name -> greatestworks.common.CommonResponse
	34, // 29: greatestworks.room.SearchRoomsResponse.rooms:type_name -> greatestworks.room.RoomInfo
	48, // 30: greatestworks.room.SearchRoomsResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	3,  // 31: greatestworks.room.SendRoomMessageRequest.message_type:type_name -> greatestworks.room.RoomMessageType
	47, // 32: greatestworks.room.SendRoomMessageResponse.common:type_name -> greatestworks.common.CommonResponse
	47, // 33: greatestworks.room.SetRoomPasswordResponse.common:type_name -> greatestworks.common.CommonResponse
	0,  // 34: greatestworks.room.RoomInfo.room_type:type_name -> greatestworks.room.RoomType
	1,  // 35: greatestworks.room.RoomInfo.status:type_name -> greatestworks.room.RoomStatus
	39, // 36: greatestworks.room.RoomInfo.settings:type_name -> greatestworks.room.RoomSettings
	34, // 37: greatestworks.room.RoomDetail.basic_info:type_name -> greatestworks.room.RoomInfo
	36, // 38: greatestworks.room.RoomDetail.players:type_name -> greatestworks.room.RoomPlayer
	37, // 39: greatestworks.room.RoomDetail.teams:type_name -> greatestworks.room.RoomTeam
	38, // 40: greatestworks.room.RoomDetail.recent_messages:type_name -> greatestworks.room.RoomMessage
	45, // 41: greatestworks.room.RoomDetail.custom_rules:type_name -> greatestworks.room.RoomDetail.CustomRulesEntry
	42, // 42: greatestworks.room.RoomDetail.stats:type_name -> greatestworks.room.RoomStats
	2,  // 43: greatestworks.room.RoomPlayer.role:type_name -> greatestworks.room.PlayerRole
	40, // 44: greatestworks.room.RoomPlayer.stats:type_name -> greatestworks.room.PlayerStats
	49, // 45: greatestworks.room.RoomPlayer.position:type_name -> greatestworks.common.Position
	41, // 46: greatestworks.room.RoomTeam.team_stats:type_name -> greatestworks.room.TeamStats
	3,  // 47: greatestworks.room.RoomMessage.message_type:type_name -> greatestworks.room.RoomMessageType
	5,  // 48: greatestworks.room.RoomSettings.difficulty:type_name -> greatestworks.room.DifficultyLevel
	46, // 49: greatestworks.room.RoomSettings.score_limits:type_name -> greatestworks.room.RoomSettings.ScoreLimitsEntry
	6,  // 50: greatestworks.room.RoomService.CreateRoom:input_type -> greatestworks.room.CreateRoomRequest
	8,  // 51: greatestworks.room.RoomService.JoinRoom:input_type -> greatestworks.room.JoinRoomRequest
	10, // 52: greatestworks.room.RoomService.LeaveRoom:input_type -> greatestworks.room.LeaveRoomRequest
	12, // 53: greatestworks.room.RoomService.GetRoomList:input_type -> greatestworks.room.GetRoomListRequest
	14, // 54: greatestworks.room.RoomService.GetRoomInfo:input_type -> greatestworks.room.GetRoomInfoRequest
	16, // 55: greatestworks.room.RoomService.UpdateRoomSettings:input_type -> greatestworks.room.UpdateRoomSettingsRequest
	18, // 56: greatestworks.room.RoomService.KickPlayer:input_type -> greatestworks.room.KickPlayerRequest
	20, // 57: greatestworks.room.RoomService.TransferOwnership:input_type -> greatestworks.room.TransferOwnershipRequest
	22, // 58: greatestworks.room.RoomService.StartGame:input_type -> greatestworks.room.StartGameRequest
	24, // 59: greatestworks.room.RoomService.SetReady:input_type -> greatestworks.room.SetReadyRequest
	26, // 60: greatestworks.room.RoomService.InvitePlayer:input_type -> greatestworks.room.InvitePlayerRequest
	28, // 61: greatestworks.room.RoomService.SearchRooms:input_type -> greatestworks.room.SearchRoomsRequest
	30, // 62: greatestworks.room.RoomService.SendRoomMessage:input_type -> greatestworks.room.SendRoomMessageRequest
	32, // 63: greatestworks.room.RoomService.SetRoomPassword:input_type -> greatestworks.room.SetRoomPasswordRequest
	7,  // 64: greatestworks.room.RoomService.CreateRoom:output_type -> greatestworks.room.CreateRoomResponse
	9,  // 65: greatestworks.room.RoomService.JoinRoom:output_type -> greatestworks.room.JoinRoomResponse
	11, // 66: greatestworks.room.RoomService.LeaveRoom:output_type -> greatestworks.room.LeaveRoomResponse
	13, // 67: greatestworks.room.RoomService.GetRoomList:output_type -> greatestworks.room.GetRoomListResponse
	15, // 68: greatestworks.room.RoomService.GetRoomInfo:output_type -> greatestworks.room.GetRoomInfoResponse
	17, // 69: greatestworks.room.RoomService.UpdateRoomSettings:output_type -> greatestworks.room.UpdateRoomSettingsResponse
	19, // 70: greatestworks.room.RoomService.KickPlayer:output_type -> greatestworks.room.KickPlayerResponse
	21, // 71: greatestworks.room.RoomService.TransferOwnership:output_type -> greatestworks.room.TransferOwnershipResponse
	23, // 72: greatestworks.room.RoomService.StartGame:output_type -> greatestworks.room.StartGameResponse
	25, // 73: greatestworks.room.RoomService.SetReady:output_type -> greatestworks.room.SetReadyResponse
	27, // 74: greatestworks.room.RoomService.InvitePlayer:output_type -> greatestworks.room.InvitePlayerResponse
	29, // 75: greatestworks.room.RoomService.SearchRooms:output_type -> greatestworks.room.SearchRoomsResponse
	31, // 76: greatestworks.room.RoomService.SendRoomMessage:output_type -> greatestworks.room.SendRoomMessageResponse
	33, // 77: greatestworks.room.RoomService.SetRoomPassword:output_type -> greatestworks.room.SetRoomPasswordResponse
	64, // [64:78] is the sub-list for method output_type
	50, // [50:64] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_proto_room_proto_init() }
func file_proto_room_proto_init() {
	if File_proto_room_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_room_proto_rawDesc), len(file_proto_room_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_room_proto_goTypes,
		DependencyIndexes: file_proto_room_proto_depIdxs,
		EnumInfos:         file_proto_room_proto_enumTypes,
		MessageInfos:      file_proto_room_proto_msgTypes,
	}.Build()
	File_proto_room_proto = out.File
	file_proto_room_proto_goTypes = nil
	file_proto_room_proto_depIdxs = nil
}
