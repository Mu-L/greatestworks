// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/mail.proto

package mail

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "greatestworks/internal/proto/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 邮件类型枚举
type MailType int32

const (
	MailType_MAIL_TYPE_UNSPECIFIED   MailType = 0
	MailType_MAIL_TYPE_SYSTEM        MailType = 1  // 系统邮件
	MailType_MAIL_TYPE_PLAYER        MailType = 2  // 玩家邮件
	MailType_MAIL_TYPE_REWARD        MailType = 3  // 奖励邮件
	MailType_MAIL_TYPE_NOTIFICATION  MailType = 4  // 通知邮件
	MailType_MAIL_TYPE_PROMOTION     MailType = 5  // 推广邮件
	MailType_MAIL_TYPE_ANNOUNCEMENT  MailType = 6  // 公告邮件
	MailType_MAIL_TYPE_GIFT          MailType = 7  // 礼品邮件
	MailType_MAIL_TYPE_COMPENSATION  MailType = 8  // 补偿邮件
	MailType_MAIL_TYPE_BATTLE_REPORT MailType = 9  // 战斗报告
	MailType_MAIL_TYPE_GUILD         MailType = 10 // 公会邮件
)

// Enum value maps for MailType.
var (
	MailType_name = map[int32]string{
		0:  "MAIL_TYPE_UNSPECIFIED",
		1:  "MAIL_TYPE_SYSTEM",
		2:  "MAIL_TYPE_PLAYER",
		3:  "MAIL_TYPE_REWARD",
		4:  "MAIL_TYPE_NOTIFICATION",
		5:  "MAIL_TYPE_PROMOTION",
		6:  "MAIL_TYPE_ANNOUNCEMENT",
		7:  "MAIL_TYPE_GIFT",
		8:  "MAIL_TYPE_COMPENSATION",
		9:  "MAIL_TYPE_BATTLE_REPORT",
		10: "MAIL_TYPE_GUILD",
	}
	MailType_value = map[string]int32{
		"MAIL_TYPE_UNSPECIFIED":   0,
		"MAIL_TYPE_SYSTEM":        1,
		"MAIL_TYPE_PLAYER":        2,
		"MAIL_TYPE_REWARD":        3,
		"MAIL_TYPE_NOTIFICATION":  4,
		"MAIL_TYPE_PROMOTION":     5,
		"MAIL_TYPE_ANNOUNCEMENT":  6,
		"MAIL_TYPE_GIFT":          7,
		"MAIL_TYPE_COMPENSATION":  8,
		"MAIL_TYPE_BATTLE_REPORT": 9,
		"MAIL_TYPE_GUILD":         10,
	}
)

func (x MailType) Enum() *MailType {
	p := new(MailType)
	*p = x
	return p
}

func (x MailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mail_proto_enumTypes[0].Descriptor()
}

func (MailType) Type() protoreflect.EnumType {
	return &file_proto_mail_proto_enumTypes[0]
}

func (x MailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailType.Descriptor instead.
func (MailType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{0}
}

// 邮件状态枚举
type MailStatus int32

const (
	MailStatus_MAIL_STATUS_UNSPECIFIED MailStatus = 0
	MailStatus_MAIL_STATUS_UNREAD      MailStatus = 1 // 未读
	MailStatus_MAIL_STATUS_READ        MailStatus = 2 // 已读
	MailStatus_MAIL_STATUS_ARCHIVED    MailStatus = 3 // 已归档
	MailStatus_MAIL_STATUS_DELETED     MailStatus = 4 // 已删除
	MailStatus_MAIL_STATUS_EXPIRED     MailStatus = 5 // 已过期
)

// Enum value maps for MailStatus.
var (
	MailStatus_name = map[int32]string{
		0: "MAIL_STATUS_UNSPECIFIED",
		1: "MAIL_STATUS_UNREAD",
		2: "MAIL_STATUS_READ",
		3: "MAIL_STATUS_ARCHIVED",
		4: "MAIL_STATUS_DELETED",
		5: "MAIL_STATUS_EXPIRED",
	}
	MailStatus_value = map[string]int32{
		"MAIL_STATUS_UNSPECIFIED": 0,
		"MAIL_STATUS_UNREAD":      1,
		"MAIL_STATUS_READ":        2,
		"MAIL_STATUS_ARCHIVED":    3,
		"MAIL_STATUS_DELETED":     4,
		"MAIL_STATUS_EXPIRED":     5,
	}
)

func (x MailStatus) Enum() *MailStatus {
	p := new(MailStatus)
	*p = x
	return p
}

func (x MailStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mail_proto_enumTypes[1].Descriptor()
}

func (MailStatus) Type() protoreflect.EnumType {
	return &file_proto_mail_proto_enumTypes[1]
}

func (x MailStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailStatus.Descriptor instead.
func (MailStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{1}
}

// 附件类型枚举
type AttachmentType int32

const (
	AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED AttachmentType = 0
	AttachmentType_ATTACHMENT_TYPE_ITEM        AttachmentType = 1 // 物品
	AttachmentType_ATTACHMENT_TYPE_CURRENCY    AttachmentType = 2 // 货币
	AttachmentType_ATTACHMENT_TYPE_EXPERIENCE  AttachmentType = 3 // 经验
	AttachmentType_ATTACHMENT_TYPE_BUFF        AttachmentType = 4 // 增益效果
	AttachmentType_ATTACHMENT_TYPE_TITLE       AttachmentType = 5 // 称号
	AttachmentType_ATTACHMENT_TYPE_ACHIEVEMENT AttachmentType = 6 // 成就
)

// Enum value maps for AttachmentType.
var (
	AttachmentType_name = map[int32]string{
		0: "ATTACHMENT_TYPE_UNSPECIFIED",
		1: "ATTACHMENT_TYPE_ITEM",
		2: "ATTACHMENT_TYPE_CURRENCY",
		3: "ATTACHMENT_TYPE_EXPERIENCE",
		4: "ATTACHMENT_TYPE_BUFF",
		5: "ATTACHMENT_TYPE_TITLE",
		6: "ATTACHMENT_TYPE_ACHIEVEMENT",
	}
	AttachmentType_value = map[string]int32{
		"ATTACHMENT_TYPE_UNSPECIFIED": 0,
		"ATTACHMENT_TYPE_ITEM":        1,
		"ATTACHMENT_TYPE_CURRENCY":    2,
		"ATTACHMENT_TYPE_EXPERIENCE":  3,
		"ATTACHMENT_TYPE_BUFF":        4,
		"ATTACHMENT_TYPE_TITLE":       5,
		"ATTACHMENT_TYPE_ACHIEVEMENT": 6,
	}
)

func (x AttachmentType) Enum() *AttachmentType {
	p := new(AttachmentType)
	*p = x
	return p
}

func (x AttachmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttachmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mail_proto_enumTypes[2].Descriptor()
}

func (AttachmentType) Type() protoreflect.EnumType {
	return &file_proto_mail_proto_enumTypes[2]
}

func (x AttachmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttachmentType.Descriptor instead.
func (AttachmentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{2}
}

// 邮件标记类型枚举
type MailMarkType int32

const (
	MailMarkType_MAIL_MARK_TYPE_UNSPECIFIED MailMarkType = 0
	MailMarkType_MAIL_MARK_TYPE_READ        MailMarkType = 1 // 标记为已读
	MailMarkType_MAIL_MARK_TYPE_UNREAD      MailMarkType = 2 // 标记为未读
	MailMarkType_MAIL_MARK_TYPE_IMPORTANT   MailMarkType = 3 // 标记为重要
	MailMarkType_MAIL_MARK_TYPE_UNIMPORTANT MailMarkType = 4 // 取消重要标记
	MailMarkType_MAIL_MARK_TYPE_FAVORITE    MailMarkType = 5 // 标记为收藏
	MailMarkType_MAIL_MARK_TYPE_UNFAVORITE  MailMarkType = 6 // 取消收藏标记
)

// Enum value maps for MailMarkType.
var (
	MailMarkType_name = map[int32]string{
		0: "MAIL_MARK_TYPE_UNSPECIFIED",
		1: "MAIL_MARK_TYPE_READ",
		2: "MAIL_MARK_TYPE_UNREAD",
		3: "MAIL_MARK_TYPE_IMPORTANT",
		4: "MAIL_MARK_TYPE_UNIMPORTANT",
		5: "MAIL_MARK_TYPE_FAVORITE",
		6: "MAIL_MARK_TYPE_UNFAVORITE",
	}
	MailMarkType_value = map[string]int32{
		"MAIL_MARK_TYPE_UNSPECIFIED": 0,
		"MAIL_MARK_TYPE_READ":        1,
		"MAIL_MARK_TYPE_UNREAD":      2,
		"MAIL_MARK_TYPE_IMPORTANT":   3,
		"MAIL_MARK_TYPE_UNIMPORTANT": 4,
		"MAIL_MARK_TYPE_FAVORITE":    5,
		"MAIL_MARK_TYPE_UNFAVORITE":  6,
	}
)

func (x MailMarkType) Enum() *MailMarkType {
	p := new(MailMarkType)
	*p = x
	return p
}

func (x MailMarkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MailMarkType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mail_proto_enumTypes[3].Descriptor()
}

func (MailMarkType) Type() protoreflect.EnumType {
	return &file_proto_mail_proto_enumTypes[3]
}

func (x MailMarkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MailMarkType.Descriptor instead.
func (MailMarkType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{3}
}

// 发送邮件请求
type SendMailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	RecipientIds  []string               `protobuf:"bytes,2,rep,name=recipient_ids,json=recipientIds,proto3" json:"recipient_ids,omitempty"`
	Subject       string                 `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	MailType      MailType               `protobuf:"varint,5,opt,name=mail_type,json=mailType,proto3,enum=greatestworks.mail.MailType" json:"mail_type,omitempty"`
	Attachments   []*MailAttachment      `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
	ExpireAt      int64                  `protobuf:"varint,7,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"` // 过期时间，0表示不过期
	IsSystemMail  bool                   `protobuf:"varint,8,opt,name=is_system_mail,json=isSystemMail,proto3" json:"is_system_mail,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMailRequest) Reset() {
	*x = SendMailRequest{}
	mi := &file_proto_mail_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMailRequest) ProtoMessage() {}

func (x *SendMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMailRequest.ProtoReflect.Descriptor instead.
func (*SendMailRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{0}
}

func (x *SendMailRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendMailRequest) GetRecipientIds() []string {
	if x != nil {
		return x.RecipientIds
	}
	return nil
}

func (x *SendMailRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendMailRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMailRequest) GetMailType() MailType {
	if x != nil {
		return x.MailType
	}
	return MailType_MAIL_TYPE_UNSPECIFIED
}

func (x *SendMailRequest) GetAttachments() []*MailAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *SendMailRequest) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *SendMailRequest) GetIsSystemMail() bool {
	if x != nil {
		return x.IsSystemMail
	}
	return false
}

func (x *SendMailRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 发送邮件响应
type SendMailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MailIds       []string               `protobuf:"bytes,2,rep,name=mail_ids,json=mailIds,proto3" json:"mail_ids,omitempty"` // 为每个收件人创建的邮件ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMailResponse) Reset() {
	*x = SendMailResponse{}
	mi := &file_proto_mail_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMailResponse) ProtoMessage() {}

func (x *SendMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMailResponse.ProtoReflect.Descriptor instead.
func (*SendMailResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{1}
}

func (x *SendMailResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SendMailResponse) GetMailIds() []string {
	if x != nil {
		return x.MailIds
	}
	return nil
}

// 获取邮件列表请求
type GetMailListRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	PlayerId            string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Status              MailStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=greatestworks.mail.MailStatus" json:"status,omitempty"`
	MailType            MailType               `protobuf:"varint,3,opt,name=mail_type,json=mailType,proto3,enum=greatestworks.mail.MailType" json:"mail_type,omitempty"`
	Limit               int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset              int32                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	OnlyUnread          bool                   `protobuf:"varint,6,opt,name=only_unread,json=onlyUnread,proto3" json:"only_unread,omitempty"`
	OnlyWithAttachments bool                   `protobuf:"varint,7,opt,name=only_with_attachments,json=onlyWithAttachments,proto3" json:"only_with_attachments,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetMailListRequest) Reset() {
	*x = GetMailListRequest{}
	mi := &file_proto_mail_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMailListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMailListRequest) ProtoMessage() {}

func (x *GetMailListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMailListRequest.ProtoReflect.Descriptor instead.
func (*GetMailListRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{2}
}

func (x *GetMailListRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetMailListRequest) GetStatus() MailStatus {
	if x != nil {
		return x.Status
	}
	return MailStatus_MAIL_STATUS_UNSPECIFIED
}

func (x *GetMailListRequest) GetMailType() MailType {
	if x != nil {
		return x.MailType
	}
	return MailType_MAIL_TYPE_UNSPECIFIED
}

func (x *GetMailListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMailListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetMailListRequest) GetOnlyUnread() bool {
	if x != nil {
		return x.OnlyUnread
	}
	return false
}

func (x *GetMailListRequest) GetOnlyWithAttachments() bool {
	if x != nil {
		return x.OnlyWithAttachments
	}
	return false
}

// 获取邮件列表响应
type GetMailListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Mails         []*MailInfo            `protobuf:"bytes,2,rep,name=mails,proto3" json:"mails,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Stats         *MailStats             `protobuf:"bytes,4,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMailListResponse) Reset() {
	*x = GetMailListResponse{}
	mi := &file_proto_mail_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMailListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMailListResponse) ProtoMessage() {}

func (x *GetMailListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMailListResponse.ProtoReflect.Descriptor instead.
func (*GetMailListResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{3}
}

func (x *GetMailListResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetMailListResponse) GetMails() []*MailInfo {
	if x != nil {
		return x.Mails
	}
	return nil
}

func (x *GetMailListResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetMailListResponse) GetStats() *MailStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 读取邮件请求
type ReadMailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MailId        string                 `protobuf:"bytes,2,opt,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMailRequest) Reset() {
	*x = ReadMailRequest{}
	mi := &file_proto_mail_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMailRequest) ProtoMessage() {}

func (x *ReadMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMailRequest.ProtoReflect.Descriptor instead.
func (*ReadMailRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{4}
}

func (x *ReadMailRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ReadMailRequest) GetMailId() string {
	if x != nil {
		return x.MailId
	}
	return ""
}

// 读取邮件响应
type ReadMailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Mail          *MailDetail            `protobuf:"bytes,2,opt,name=mail,proto3" json:"mail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMailResponse) Reset() {
	*x = ReadMailResponse{}
	mi := &file_proto_mail_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMailResponse) ProtoMessage() {}

func (x *ReadMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMailResponse.ProtoReflect.Descriptor instead.
func (*ReadMailResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{5}
}

func (x *ReadMailResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ReadMailResponse) GetMail() *MailDetail {
	if x != nil {
		return x.Mail
	}
	return nil
}

// 删除邮件请求
type DeleteMailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MailId        string                 `protobuf:"bytes,2,opt,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMailRequest) Reset() {
	*x = DeleteMailRequest{}
	mi := &file_proto_mail_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMailRequest) ProtoMessage() {}

func (x *DeleteMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMailRequest.ProtoReflect.Descriptor instead.
func (*DeleteMailRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteMailRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *DeleteMailRequest) GetMailId() string {
	if x != nil {
		return x.MailId
	}
	return ""
}

// 删除邮件响应
type DeleteMailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMailResponse) Reset() {
	*x = DeleteMailResponse{}
	mi := &file_proto_mail_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMailResponse) ProtoMessage() {}

func (x *DeleteMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMailResponse.ProtoReflect.Descriptor instead.
func (*DeleteMailResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMailResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 批量删除邮件请求
type BatchDeleteMailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MailIds       []string               `protobuf:"bytes,2,rep,name=mail_ids,json=mailIds,proto3" json:"mail_ids,omitempty"`
	DeleteAllRead bool                   `protobuf:"varint,3,opt,name=delete_all_read,json=deleteAllRead,proto3" json:"delete_all_read,omitempty"` // 删除所有已读邮件
	DeleteExpired bool                   `protobuf:"varint,4,opt,name=delete_expired,json=deleteExpired,proto3" json:"delete_expired,omitempty"`   // 删除过期邮件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteMailsRequest) Reset() {
	*x = BatchDeleteMailsRequest{}
	mi := &file_proto_mail_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteMailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteMailsRequest) ProtoMessage() {}

func (x *BatchDeleteMailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteMailsRequest.ProtoReflect.Descriptor instead.
func (*BatchDeleteMailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{8}
}

func (x *BatchDeleteMailsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BatchDeleteMailsRequest) GetMailIds() []string {
	if x != nil {
		return x.MailIds
	}
	return nil
}

func (x *BatchDeleteMailsRequest) GetDeleteAllRead() bool {
	if x != nil {
		return x.DeleteAllRead
	}
	return false
}

func (x *BatchDeleteMailsRequest) GetDeleteExpired() bool {
	if x != nil {
		return x.DeleteExpired
	}
	return false
}

// 批量删除邮件响应
type BatchDeleteMailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	DeletedCount  int32                  `protobuf:"varint,2,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	FailedMailIds []string               `protobuf:"bytes,3,rep,name=failed_mail_ids,json=failedMailIds,proto3" json:"failed_mail_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchDeleteMailsResponse) Reset() {
	*x = BatchDeleteMailsResponse{}
	mi := &file_proto_mail_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchDeleteMailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeleteMailsResponse) ProtoMessage() {}

func (x *BatchDeleteMailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeleteMailsResponse.ProtoReflect.Descriptor instead.
func (*BatchDeleteMailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{9}
}

func (x *BatchDeleteMailsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *BatchDeleteMailsResponse) GetDeletedCount() int32 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *BatchDeleteMailsResponse) GetFailedMailIds() []string {
	if x != nil {
		return x.FailedMailIds
	}
	return nil
}

// 领取邮件附件请求
type ClaimAttachmentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MailId        string                 `protobuf:"bytes,2,opt,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
	AttachmentIds []string               `protobuf:"bytes,3,rep,name=attachment_ids,json=attachmentIds,proto3" json:"attachment_ids,omitempty"` // 空则领取所有附件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimAttachmentRequest) Reset() {
	*x = ClaimAttachmentRequest{}
	mi := &file_proto_mail_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimAttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimAttachmentRequest) ProtoMessage() {}

func (x *ClaimAttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimAttachmentRequest.ProtoReflect.Descriptor instead.
func (*ClaimAttachmentRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{10}
}

func (x *ClaimAttachmentRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ClaimAttachmentRequest) GetMailId() string {
	if x != nil {
		return x.MailId
	}
	return ""
}

func (x *ClaimAttachmentRequest) GetAttachmentIds() []string {
	if x != nil {
		return x.AttachmentIds
	}
	return nil
}

// 领取邮件附件响应
type ClaimAttachmentResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Common              *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ClaimedAttachments  []*ClaimedAttachment   `protobuf:"bytes,2,rep,name=claimed_attachments,json=claimedAttachments,proto3" json:"claimed_attachments,omitempty"`
	FailedAttachmentIds []string               `protobuf:"bytes,3,rep,name=failed_attachment_ids,json=failedAttachmentIds,proto3" json:"failed_attachment_ids,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ClaimAttachmentResponse) Reset() {
	*x = ClaimAttachmentResponse{}
	mi := &file_proto_mail_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimAttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimAttachmentResponse) ProtoMessage() {}

func (x *ClaimAttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimAttachmentResponse.ProtoReflect.Descriptor instead.
func (*ClaimAttachmentResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{11}
}

func (x *ClaimAttachmentResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ClaimAttachmentResponse) GetClaimedAttachments() []*ClaimedAttachment {
	if x != nil {
		return x.ClaimedAttachments
	}
	return nil
}

func (x *ClaimAttachmentResponse) GetFailedAttachmentIds() []string {
	if x != nil {
		return x.FailedAttachmentIds
	}
	return nil
}

// 批量领取附件请求
type BatchClaimAttachmentsRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PlayerId          string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MailIds           []string               `protobuf:"bytes,2,rep,name=mail_ids,json=mailIds,proto3" json:"mail_ids,omitempty"`
	ClaimAllAvailable bool                   `protobuf:"varint,3,opt,name=claim_all_available,json=claimAllAvailable,proto3" json:"claim_all_available,omitempty"` // 领取所有可领取的附件
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BatchClaimAttachmentsRequest) Reset() {
	*x = BatchClaimAttachmentsRequest{}
	mi := &file_proto_mail_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchClaimAttachmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchClaimAttachmentsRequest) ProtoMessage() {}

func (x *BatchClaimAttachmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchClaimAttachmentsRequest.ProtoReflect.Descriptor instead.
func (*BatchClaimAttachmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{12}
}

func (x *BatchClaimAttachmentsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BatchClaimAttachmentsRequest) GetMailIds() []string {
	if x != nil {
		return x.MailIds
	}
	return nil
}

func (x *BatchClaimAttachmentsRequest) GetClaimAllAvailable() bool {
	if x != nil {
		return x.ClaimAllAvailable
	}
	return false
}

// 批量领取附件响应
type BatchClaimAttachmentsResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Common             *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	ClaimedAttachments []*ClaimedAttachment   `protobuf:"bytes,2,rep,name=claimed_attachments,json=claimedAttachments,proto3" json:"claimed_attachments,omitempty"`
	TotalClaimed       int32                  `protobuf:"varint,3,opt,name=total_claimed,json=totalClaimed,proto3" json:"total_claimed,omitempty"`
	FailedMailIds      []string               `protobuf:"bytes,4,rep,name=failed_mail_ids,json=failedMailIds,proto3" json:"failed_mail_ids,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BatchClaimAttachmentsResponse) Reset() {
	*x = BatchClaimAttachmentsResponse{}
	mi := &file_proto_mail_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchClaimAttachmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchClaimAttachmentsResponse) ProtoMessage() {}

func (x *BatchClaimAttachmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchClaimAttachmentsResponse.ProtoReflect.Descriptor instead.
func (*BatchClaimAttachmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{13}
}

func (x *BatchClaimAttachmentsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *BatchClaimAttachmentsResponse) GetClaimedAttachments() []*ClaimedAttachment {
	if x != nil {
		return x.ClaimedAttachments
	}
	return nil
}

func (x *BatchClaimAttachmentsResponse) GetTotalClaimed() int32 {
	if x != nil {
		return x.TotalClaimed
	}
	return 0
}

func (x *BatchClaimAttachmentsResponse) GetFailedMailIds() []string {
	if x != nil {
		return x.FailedMailIds
	}
	return nil
}

// 标记邮件请求
type MarkMailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	MailIds       []string               `protobuf:"bytes,2,rep,name=mail_ids,json=mailIds,proto3" json:"mail_ids,omitempty"`
	MarkType      MailMarkType           `protobuf:"varint,3,opt,name=mark_type,json=markType,proto3,enum=greatestworks.mail.MailMarkType" json:"mark_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMailRequest) Reset() {
	*x = MarkMailRequest{}
	mi := &file_proto_mail_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMailRequest) ProtoMessage() {}

func (x *MarkMailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMailRequest.ProtoReflect.Descriptor instead.
func (*MarkMailRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{14}
}

func (x *MarkMailRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *MarkMailRequest) GetMailIds() []string {
	if x != nil {
		return x.MailIds
	}
	return nil
}

func (x *MarkMailRequest) GetMarkType() MailMarkType {
	if x != nil {
		return x.MarkType
	}
	return MailMarkType_MAIL_MARK_TYPE_UNSPECIFIED
}

// 标记邮件响应
type MarkMailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	MarkedCount   int32                  `protobuf:"varint,2,opt,name=marked_count,json=markedCount,proto3" json:"marked_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkMailResponse) Reset() {
	*x = MarkMailResponse{}
	mi := &file_proto_mail_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkMailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkMailResponse) ProtoMessage() {}

func (x *MarkMailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkMailResponse.ProtoReflect.Descriptor instead.
func (*MarkMailResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{15}
}

func (x *MarkMailResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *MarkMailResponse) GetMarkedCount() int32 {
	if x != nil {
		return x.MarkedCount
	}
	return 0
}

// 搜索邮件请求
type SearchMailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Keyword       string                 `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`                         // 搜索关键词
	SenderName    string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"` // 发件人名称
	MailType      MailType               `protobuf:"varint,4,opt,name=mail_type,json=mailType,proto3,enum=greatestworks.mail.MailType" json:"mail_type,omitempty"`
	StartDate     int64                  `protobuf:"varint,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       int64                  `protobuf:"varint,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Limit         int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMailsRequest) Reset() {
	*x = SearchMailsRequest{}
	mi := &file_proto_mail_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMailsRequest) ProtoMessage() {}

func (x *SearchMailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMailsRequest.ProtoReflect.Descriptor instead.
func (*SearchMailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{16}
}

func (x *SearchMailsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SearchMailsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchMailsRequest) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *SearchMailsRequest) GetMailType() MailType {
	if x != nil {
		return x.MailType
	}
	return MailType_MAIL_TYPE_UNSPECIFIED
}

func (x *SearchMailsRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *SearchMailsRequest) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *SearchMailsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchMailsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 搜索邮件响应
type SearchMailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Mails         []*MailInfo            `protobuf:"bytes,2,rep,name=mails,proto3" json:"mails,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMailsResponse) Reset() {
	*x = SearchMailsResponse{}
	mi := &file_proto_mail_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMailsResponse) ProtoMessage() {}

func (x *SearchMailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMailsResponse.ProtoReflect.Descriptor instead.
func (*SearchMailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{17}
}

func (x *SearchMailsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SearchMailsResponse) GetMails() []*MailInfo {
	if x != nil {
		return x.Mails
	}
	return nil
}

func (x *SearchMailsResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 获取邮件统计请求
type GetMailStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMailStatsRequest) Reset() {
	*x = GetMailStatsRequest{}
	mi := &file_proto_mail_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMailStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMailStatsRequest) ProtoMessage() {}

func (x *GetMailStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMailStatsRequest.ProtoReflect.Descriptor instead.
func (*GetMailStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{18}
}

func (x *GetMailStatsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

// 获取邮件统计响应
type GetMailStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Stats         *MailStats             `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMailStatsResponse) Reset() {
	*x = GetMailStatsResponse{}
	mi := &file_proto_mail_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMailStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMailStatsResponse) ProtoMessage() {}

func (x *GetMailStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMailStatsResponse.ProtoReflect.Descriptor instead.
func (*GetMailStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{19}
}

func (x *GetMailStatsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetMailStatsResponse) GetStats() *MailStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 设置邮件配置请求
type SetMailConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Config        *MailConfig            `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMailConfigRequest) Reset() {
	*x = SetMailConfigRequest{}
	mi := &file_proto_mail_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMailConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMailConfigRequest) ProtoMessage() {}

func (x *SetMailConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMailConfigRequest.ProtoReflect.Descriptor instead.
func (*SetMailConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{20}
}

func (x *SetMailConfigRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SetMailConfigRequest) GetConfig() *MailConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// 设置邮件配置响应
type SetMailConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Config        *MailConfig            `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetMailConfigResponse) Reset() {
	*x = SetMailConfigResponse{}
	mi := &file_proto_mail_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetMailConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMailConfigResponse) ProtoMessage() {}

func (x *SetMailConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMailConfigResponse.ProtoReflect.Descriptor instead.
func (*SetMailConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{21}
}

func (x *SetMailConfigResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SetMailConfigResponse) GetConfig() *MailConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// 邮件信息
type MailInfo struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	MailId                  string                 `protobuf:"bytes,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
	SenderId                string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName              string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	RecipientId             string                 `protobuf:"bytes,4,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Subject                 string                 `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	MailType                MailType               `protobuf:"varint,6,opt,name=mail_type,json=mailType,proto3,enum=greatestworks.mail.MailType" json:"mail_type,omitempty"`
	Status                  MailStatus             `protobuf:"varint,7,opt,name=status,proto3,enum=greatestworks.mail.MailStatus" json:"status,omitempty"`
	HasAttachments          bool                   `protobuf:"varint,8,opt,name=has_attachments,json=hasAttachments,proto3" json:"has_attachments,omitempty"`
	HasUnclaimedAttachments bool                   `protobuf:"varint,9,opt,name=has_unclaimed_attachments,json=hasUnclaimedAttachments,proto3" json:"has_unclaimed_attachments,omitempty"`
	SentAt                  int64                  `protobuf:"varint,10,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	ReadAt                  int64                  `protobuf:"varint,11,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	ExpireAt                int64                  `protobuf:"varint,12,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	IsImportant             bool                   `protobuf:"varint,13,opt,name=is_important,json=isImportant,proto3" json:"is_important,omitempty"`
	IsFavorite              bool                   `protobuf:"varint,14,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *MailInfo) Reset() {
	*x = MailInfo{}
	mi := &file_proto_mail_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailInfo) ProtoMessage() {}

func (x *MailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailInfo.ProtoReflect.Descriptor instead.
func (*MailInfo) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{22}
}

func (x *MailInfo) GetMailId() string {
	if x != nil {
		return x.MailId
	}
	return ""
}

func (x *MailInfo) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *MailInfo) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *MailInfo) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *MailInfo) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MailInfo) GetMailType() MailType {
	if x != nil {
		return x.MailType
	}
	return MailType_MAIL_TYPE_UNSPECIFIED
}

func (x *MailInfo) GetStatus() MailStatus {
	if x != nil {
		return x.Status
	}
	return MailStatus_MAIL_STATUS_UNSPECIFIED
}

func (x *MailInfo) GetHasAttachments() bool {
	if x != nil {
		return x.HasAttachments
	}
	return false
}

func (x *MailInfo) GetHasUnclaimedAttachments() bool {
	if x != nil {
		return x.HasUnclaimedAttachments
	}
	return false
}

func (x *MailInfo) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *MailInfo) GetReadAt() int64 {
	if x != nil {
		return x.ReadAt
	}
	return 0
}

func (x *MailInfo) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *MailInfo) GetIsImportant() bool {
	if x != nil {
		return x.IsImportant
	}
	return false
}

func (x *MailInfo) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

// 邮件详情
type MailDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MailId        string                 `protobuf:"bytes,1,opt,name=mail_id,json=mailId,proto3" json:"mail_id,omitempty"`
	SenderId      string                 `protobuf:"bytes,2,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName    string                 `protobuf:"bytes,3,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	RecipientId   string                 `protobuf:"bytes,4,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Subject       string                 `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	MailType      MailType               `protobuf:"varint,7,opt,name=mail_type,json=mailType,proto3,enum=greatestworks.mail.MailType" json:"mail_type,omitempty"`
	Status        MailStatus             `protobuf:"varint,8,opt,name=status,proto3,enum=greatestworks.mail.MailStatus" json:"status,omitempty"`
	Attachments   []*MailAttachment      `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`
	SentAt        int64                  `protobuf:"varint,10,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	ReadAt        int64                  `protobuf:"varint,11,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	ExpireAt      int64                  `protobuf:"varint,12,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	IsImportant   bool                   `protobuf:"varint,13,opt,name=is_important,json=isImportant,proto3" json:"is_important,omitempty"`
	IsFavorite    bool                   `protobuf:"varint,14,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,15,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MailDetail) Reset() {
	*x = MailDetail{}
	mi := &file_proto_mail_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailDetail) ProtoMessage() {}

func (x *MailDetail) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailDetail.ProtoReflect.Descriptor instead.
func (*MailDetail) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{23}
}

func (x *MailDetail) GetMailId() string {
	if x != nil {
		return x.MailId
	}
	return ""
}

func (x *MailDetail) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *MailDetail) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *MailDetail) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *MailDetail) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MailDetail) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MailDetail) GetMailType() MailType {
	if x != nil {
		return x.MailType
	}
	return MailType_MAIL_TYPE_UNSPECIFIED
}

func (x *MailDetail) GetStatus() MailStatus {
	if x != nil {
		return x.Status
	}
	return MailStatus_MAIL_STATUS_UNSPECIFIED
}

func (x *MailDetail) GetAttachments() []*MailAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *MailDetail) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *MailDetail) GetReadAt() int64 {
	if x != nil {
		return x.ReadAt
	}
	return 0
}

func (x *MailDetail) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *MailDetail) GetIsImportant() bool {
	if x != nil {
		return x.IsImportant
	}
	return false
}

func (x *MailDetail) GetIsFavorite() bool {
	if x != nil {
		return x.IsFavorite
	}
	return false
}

func (x *MailDetail) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 邮件附件
type MailAttachment struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AttachmentId   string                 `protobuf:"bytes,1,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AttachmentType AttachmentType         `protobuf:"varint,3,opt,name=attachment_type,json=attachmentType,proto3,enum=greatestworks.mail.AttachmentType" json:"attachment_type,omitempty"`
	ItemId         string                 `protobuf:"bytes,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                       // 物品ID
	Quantity       int32                  `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`                                // 数量
	GoldAmount     int32                  `protobuf:"varint,6,opt,name=gold_amount,json=goldAmount,proto3" json:"gold_amount,omitempty"`          // 金币数量
	DiamondAmount  int32                  `protobuf:"varint,7,opt,name=diamond_amount,json=diamondAmount,proto3" json:"diamond_amount,omitempty"` // 钻石数量
	IsClaimed      bool                   `protobuf:"varint,8,opt,name=is_claimed,json=isClaimed,proto3" json:"is_claimed,omitempty"`
	ClaimedAt      int64                  `protobuf:"varint,9,opt,name=claimed_at,json=claimedAt,proto3" json:"claimed_at,omitempty"`
	Properties     map[string]string      `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MailAttachment) Reset() {
	*x = MailAttachment{}
	mi := &file_proto_mail_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailAttachment) ProtoMessage() {}

func (x *MailAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailAttachment.ProtoReflect.Descriptor instead.
func (*MailAttachment) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{24}
}

func (x *MailAttachment) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *MailAttachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MailAttachment) GetAttachmentType() AttachmentType {
	if x != nil {
		return x.AttachmentType
	}
	return AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED
}

func (x *MailAttachment) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MailAttachment) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MailAttachment) GetGoldAmount() int32 {
	if x != nil {
		return x.GoldAmount
	}
	return 0
}

func (x *MailAttachment) GetDiamondAmount() int32 {
	if x != nil {
		return x.DiamondAmount
	}
	return 0
}

func (x *MailAttachment) GetIsClaimed() bool {
	if x != nil {
		return x.IsClaimed
	}
	return false
}

func (x *MailAttachment) GetClaimedAt() int64 {
	if x != nil {
		return x.ClaimedAt
	}
	return 0
}

func (x *MailAttachment) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

// 已领取附件
type ClaimedAttachment struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AttachmentId   string                 `protobuf:"bytes,1,opt,name=attachment_id,json=attachmentId,proto3" json:"attachment_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AttachmentType AttachmentType         `protobuf:"varint,3,opt,name=attachment_type,json=attachmentType,proto3,enum=greatestworks.mail.AttachmentType" json:"attachment_type,omitempty"`
	Quantity       int32                  `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Success        bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage   string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClaimedAttachment) Reset() {
	*x = ClaimedAttachment{}
	mi := &file_proto_mail_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimedAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimedAttachment) ProtoMessage() {}

func (x *ClaimedAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimedAttachment.ProtoReflect.Descriptor instead.
func (*ClaimedAttachment) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{25}
}

func (x *ClaimedAttachment) GetAttachmentId() string {
	if x != nil {
		return x.AttachmentId
	}
	return ""
}

func (x *ClaimedAttachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClaimedAttachment) GetAttachmentType() AttachmentType {
	if x != nil {
		return x.AttachmentType
	}
	return AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED
}

func (x *ClaimedAttachment) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ClaimedAttachment) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ClaimedAttachment) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 邮件统计
type MailStats struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	TotalMails                    int32                  `protobuf:"varint,1,opt,name=total_mails,json=totalMails,proto3" json:"total_mails,omitempty"`
	UnreadMails                   int32                  `protobuf:"varint,2,opt,name=unread_mails,json=unreadMails,proto3" json:"unread_mails,omitempty"`
	MailsWithAttachments          int32                  `protobuf:"varint,3,opt,name=mails_with_attachments,json=mailsWithAttachments,proto3" json:"mails_with_attachments,omitempty"`
	MailsWithUnclaimedAttachments int32                  `protobuf:"varint,4,opt,name=mails_with_unclaimed_attachments,json=mailsWithUnclaimedAttachments,proto3" json:"mails_with_unclaimed_attachments,omitempty"`
	ImportantMails                int32                  `protobuf:"varint,5,opt,name=important_mails,json=importantMails,proto3" json:"important_mails,omitempty"`
	FavoriteMails                 int32                  `protobuf:"varint,6,opt,name=favorite_mails,json=favoriteMails,proto3" json:"favorite_mails,omitempty"`
	SystemMails                   int32                  `protobuf:"varint,7,opt,name=system_mails,json=systemMails,proto3" json:"system_mails,omitempty"`
	PlayerMails                   int32                  `protobuf:"varint,8,opt,name=player_mails,json=playerMails,proto3" json:"player_mails,omitempty"`
	OldestMailDate                int64                  `protobuf:"varint,9,opt,name=oldest_mail_date,json=oldestMailDate,proto3" json:"oldest_mail_date,omitempty"`
	NewestMailDate                int64                  `protobuf:"varint,10,opt,name=newest_mail_date,json=newestMailDate,proto3" json:"newest_mail_date,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *MailStats) Reset() {
	*x = MailStats{}
	mi := &file_proto_mail_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailStats) ProtoMessage() {}

func (x *MailStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailStats.ProtoReflect.Descriptor instead.
func (*MailStats) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{26}
}

func (x *MailStats) GetTotalMails() int32 {
	if x != nil {
		return x.TotalMails
	}
	return 0
}

func (x *MailStats) GetUnreadMails() int32 {
	if x != nil {
		return x.UnreadMails
	}
	return 0
}

func (x *MailStats) GetMailsWithAttachments() int32 {
	if x != nil {
		return x.MailsWithAttachments
	}
	return 0
}

func (x *MailStats) GetMailsWithUnclaimedAttachments() int32 {
	if x != nil {
		return x.MailsWithUnclaimedAttachments
	}
	return 0
}

func (x *MailStats) GetImportantMails() int32 {
	if x != nil {
		return x.ImportantMails
	}
	return 0
}

func (x *MailStats) GetFavoriteMails() int32 {
	if x != nil {
		return x.FavoriteMails
	}
	return 0
}

func (x *MailStats) GetSystemMails() int32 {
	if x != nil {
		return x.SystemMails
	}
	return 0
}

func (x *MailStats) GetPlayerMails() int32 {
	if x != nil {
		return x.PlayerMails
	}
	return 0
}

func (x *MailStats) GetOldestMailDate() int64 {
	if x != nil {
		return x.OldestMailDate
	}
	return 0
}

func (x *MailStats) GetNewestMailDate() int64 {
	if x != nil {
		return x.NewestMailDate
	}
	return 0
}

// 邮件配置
type MailConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AutoDeleteReadMails  bool                   `protobuf:"varint,1,opt,name=auto_delete_read_mails,json=autoDeleteReadMails,proto3" json:"auto_delete_read_mails,omitempty"`
	AutoDeleteDays       int32                  `protobuf:"varint,2,opt,name=auto_delete_days,json=autoDeleteDays,proto3" json:"auto_delete_days,omitempty"` // 自动删除天数
	NotifyNewMail        bool                   `protobuf:"varint,3,opt,name=notify_new_mail,json=notifyNewMail,proto3" json:"notify_new_mail,omitempty"`
	NotifySystemMail     bool                   `protobuf:"varint,4,opt,name=notify_system_mail,json=notifySystemMail,proto3" json:"notify_system_mail,omitempty"`
	AutoClaimAttachments bool                   `protobuf:"varint,5,opt,name=auto_claim_attachments,json=autoClaimAttachments,proto3" json:"auto_claim_attachments,omitempty"`
	MaxMailsPerPage      int32                  `protobuf:"varint,6,opt,name=max_mails_per_page,json=maxMailsPerPage,proto3" json:"max_mails_per_page,omitempty"`
	BlockedMailTypes     []MailType             `protobuf:"varint,7,rep,packed,name=blocked_mail_types,json=blockedMailTypes,proto3,enum=greatestworks.mail.MailType" json:"blocked_mail_types,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MailConfig) Reset() {
	*x = MailConfig{}
	mi := &file_proto_mail_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailConfig) ProtoMessage() {}

func (x *MailConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mail_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailConfig.ProtoReflect.Descriptor instead.
func (*MailConfig) Descriptor() ([]byte, []int) {
	return file_proto_mail_proto_rawDescGZIP(), []int{27}
}

func (x *MailConfig) GetAutoDeleteReadMails() bool {
	if x != nil {
		return x.AutoDeleteReadMails
	}
	return false
}

func (x *MailConfig) GetAutoDeleteDays() int32 {
	if x != nil {
		return x.AutoDeleteDays
	}
	return 0
}

func (x *MailConfig) GetNotifyNewMail() bool {
	if x != nil {
		return x.NotifyNewMail
	}
	return false
}

func (x *MailConfig) GetNotifySystemMail() bool {
	if x != nil {
		return x.NotifySystemMail
	}
	return false
}

func (x *MailConfig) GetAutoClaimAttachments() bool {
	if x != nil {
		return x.AutoClaimAttachments
	}
	return false
}

func (x *MailConfig) GetMaxMailsPerPage() int32 {
	if x != nil {
		return x.MaxMailsPerPage
	}
	return 0
}

func (x *MailConfig) GetBlockedMailTypes() []MailType {
	if x != nil {
		return x.BlockedMailTypes
	}
	return nil
}

var File_proto_mail_proto protoreflect.FileDescriptor

const file_proto_mail_proto_rawDesc = "" +
	"\n" +
	"\x10proto/mail.proto\x12\x12greatestworks.mail\x1a\x12proto/common.proto\"\xd7\x03\n" +
	"\x0fSendMailRequest\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12#\n" +
	"\rrecipient_ids\x18\x02 \x03(\tR\frecipientIds\x12\x18\n" +
	"\asubject\x18\x03 \x01(\tR\asubject\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x129\n" +
	"\tmail_type\x18\x05 \x01(\x0e2\x1c.greatestworks.mail.MailTypeR\bmailType\x12D\n" +
	"\vattachments\x18\x06 \x03(\v2\".greatestworks.mail.MailAttachmentR\vattachments\x12\x1b\n" +
	"\texpire_at\x18\a \x01(\x03R\bexpireAt\x12$\n" +
	"\x0eis_system_mail\x18\b \x01(\bR\fisSystemMail\x12M\n" +
	"\bmetadata\x18\t \x03(\v21.greatestworks.mail.SendMailRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"k\n" +
	"\x10SendMailResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12\x19\n" +
	"\bmail_ids\x18\x02 \x03(\tR\amailIds\"\xa7\x02\n" +
	"\x12GetMailListRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x126\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1e.greatestworks.mail.MailStatusR\x06status\x129\n" +
	"\tmail_type\x18\x03 \x01(\x0e2\x1c.greatestworks.mail.MailTypeR\bmailType\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x05R\x06offset\x12\x1f\n" +
	"\vonly_unread\x18\x06 \x01(\bR\n" +
	"onlyUnread\x122\n" +
	"\x15only_with_attachments\x18\a \x01(\bR\x13onlyWithAttachments\"\x82\x02\n" +
	"\x13GetMailListResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x122\n" +
	"\x05mails\x18\x02 \x03(\v2\x1c.greatestworks.mail.MailInfoR\x05mails\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\x123\n" +
	"\x05stats\x18\x04 \x01(\v2\x1d.greatestworks.mail.MailStatsR\x05stats\"G\n" +
	"\x0fReadMailRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\amail_id\x18\x02 \x01(\tR\x06mailId\"\x84\x01\n" +
	"\x10ReadMailResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x122\n" +
	"\x04mail\x18\x02 \x01(\v2\x1e.greatestworks.mail.MailDetailR\x04mail\"I\n" +
	"\x11DeleteMailRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\amail_id\x18\x02 \x01(\tR\x06mailId\"R\n" +
	"\x12DeleteMailResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\xa0\x01\n" +
	"\x17BatchDeleteMailsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bmail_ids\x18\x02 \x03(\tR\amailIds\x12&\n" +
	"\x0fdelete_all_read\x18\x03 \x01(\bR\rdeleteAllRead\x12%\n" +
	"\x0edelete_expired\x18\x04 \x01(\bR\rdeleteExpired\"\xa5\x01\n" +
	"\x18BatchDeleteMailsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12#\n" +
	"\rdeleted_count\x18\x02 \x01(\x05R\fdeletedCount\x12&\n" +
	"\x0ffailed_mail_ids\x18\x03 \x03(\tR\rfailedMailIds\"u\n" +
	"\x16ClaimAttachmentRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x17\n" +
	"\amail_id\x18\x02 \x01(\tR\x06mailId\x12%\n" +
	"\x0eattachment_ids\x18\x03 \x03(\tR\rattachmentIds\"\xe3\x01\n" +
	"\x17ClaimAttachmentResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12V\n" +
	"\x13claimed_attachments\x18\x02 \x03(\v2%.greatestworks.mail.ClaimedAttachmentR\x12claimedAttachments\x122\n" +
	"\x15failed_attachment_ids\x18\x03 \x03(\tR\x13failedAttachmentIds\"\x86\x01\n" +
	"\x1cBatchClaimAttachmentsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bmail_ids\x18\x02 \x03(\tR\amailIds\x12.\n" +
	"\x13claim_all_available\x18\x03 \x01(\bR\x11claimAllAvailable\"\x82\x02\n" +
	"\x1dBatchClaimAttachmentsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12V\n" +
	"\x13claimed_attachments\x18\x02 \x03(\v2%.greatestworks.mail.ClaimedAttachmentR\x12claimedAttachments\x12#\n" +
	"\rtotal_claimed\x18\x03 \x01(\x05R\ftotalClaimed\x12&\n" +
	"\x0ffailed_mail_ids\x18\x04 \x03(\tR\rfailedMailIds\"\x88\x01\n" +
	"\x0fMarkMailRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bmail_ids\x18\x02 \x03(\tR\amailIds\x12=\n" +
	"\tmark_type\x18\x03 \x01(\x0e2 .greatestworks.mail.MailMarkTypeR\bmarkType\"s\n" +
	"\x10MarkMailResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12!\n" +
	"\fmarked_count\x18\x02 \x01(\x05R\vmarkedCount\"\x8f\x02\n" +
	"\x12SearchMailsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x18\n" +
	"\akeyword\x18\x02 \x01(\tR\akeyword\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x129\n" +
	"\tmail_type\x18\x04 \x01(\x0e2\x1c.greatestworks.mail.MailTypeR\bmailType\x12\x1d\n" +
	"\n" +
	"start_date\x18\x05 \x01(\x03R\tstartDate\x12\x19\n" +
	"\bend_date\x18\x06 \x01(\x03R\aendDate\x12\x14\n" +
	"\x05limit\x18\a \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\b \x01(\x05R\x06offset\"\xcd\x01\n" +
	"\x13SearchMailsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x122\n" +
	"\x05mails\x18\x02 \x03(\v2\x1c.greatestworks.mail.MailInfoR\x05mails\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\"2\n" +
	"\x13GetMailStatsRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\"\x89\x01\n" +
	"\x14GetMailStatsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x123\n" +
	"\x05stats\x18\x02 \x01(\v2\x1d.greatestworks.mail.MailStatsR\x05stats\"k\n" +
	"\x14SetMailConfigRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x126\n" +
	"\x06config\x18\x02 \x01(\v2\x1e.greatestworks.mail.MailConfigR\x06config\"\x8d\x01\n" +
	"\x15SetMailConfigResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x126\n" +
	"\x06config\x18\x02 \x01(\v2\x1e.greatestworks.mail.MailConfigR\x06config\"\x89\x04\n" +
	"\bMailInfo\x12\x17\n" +
	"\amail_id\x18\x01 \x01(\tR\x06mailId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x12!\n" +
	"\frecipient_id\x18\x04 \x01(\tR\vrecipientId\x12\x18\n" +
	"\asubject\x18\x05 \x01(\tR\asubject\x129\n" +
	"\tmail_type\x18\x06 \x01(\x0e2\x1c.greatestworks.mail.MailTypeR\bmailType\x126\n" +
	"\x06status\x18\a \x01(\x0e2\x1e.greatestworks.mail.MailStatusR\x06status\x12'\n" +
	"\x0fhas_attachments\x18\b \x01(\bR\x0ehasAttachments\x12:\n" +
	"\x19has_unclaimed_attachments\x18\t \x01(\bR\x17hasUnclaimedAttachments\x12\x17\n" +
	"\asent_at\x18\n" +
	" \x01(\x03R\x06sentAt\x12\x17\n" +
	"\aread_at\x18\v \x01(\x03R\x06readAt\x12\x1b\n" +
	"\texpire_at\x18\f \x01(\x03R\bexpireAt\x12!\n" +
	"\fis_important\x18\r \x01(\bR\visImportant\x12\x1f\n" +
	"\vis_favorite\x18\x0e \x01(\bR\n" +
	"isFavorite\"\x8d\x05\n" +
	"\n" +
	"MailDetail\x12\x17\n" +
	"\amail_id\x18\x01 \x01(\tR\x06mailId\x12\x1b\n" +
	"\tsender_id\x18\x02 \x01(\tR\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x03 \x01(\tR\n" +
	"senderName\x12!\n" +
	"\frecipient_id\x18\x04 \x01(\tR\vrecipientId\x12\x18\n" +
	"\asubject\x18\x05 \x01(\tR\asubject\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x129\n" +
	"\tmail_type\x18\a \x01(\x0e2\x1c.greatestworks.mail.MailTypeR\bmailType\x126\n" +
	"\x06status\x18\b \x01(\x0e2\x1e.greatestworks.mail.MailStatusR\x06status\x12D\n" +
	"\vattachments\x18\t \x03(\v2\".greatestworks.mail.MailAttachmentR\vattachments\x12\x17\n" +
	"\asent_at\x18\n" +
	" \x01(\x03R\x06sentAt\x12\x17\n" +
	"\aread_at\x18\v \x01(\x03R\x06readAt\x12\x1b\n" +
	"\texpire_at\x18\f \x01(\x03R\bexpireAt\x12!\n" +
	"\fis_important\x18\r \x01(\bR\visImportant\x12\x1f\n" +
	"\vis_favorite\x18\x0e \x01(\bR\n" +
	"isFavorite\x12H\n" +
	"\bmetadata\x18\x0f \x03(\v2,.greatestworks.mail.MailDetail.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe4\x03\n" +
	"\x0eMailAttachment\x12#\n" +
	"\rattachment_id\x18\x01 \x01(\tR\fattachmentId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12K\n" +
	"\x0fattachment_type\x18\x03 \x01(\x0e2\".greatestworks.mail.AttachmentTypeR\x0eattachmentType\x12\x17\n" +
	"\aitem_id\x18\x04 \x01(\tR\x06itemId\x12\x1a\n" +
	"\bquantity\x18\x05 \x01(\x05R\bquantity\x12\x1f\n" +
	"\vgold_amount\x18\x06 \x01(\x05R\n" +
	"goldAmount\x12%\n" +
	"\x0ediamond_amount\x18\a \x01(\x05R\rdiamondAmount\x12\x1d\n" +
	"\n" +
	"is_claimed\x18\b \x01(\bR\tisClaimed\x12\x1d\n" +
	"\n" +
	"claimed_at\x18\t \x01(\x03R\tclaimedAt\x12R\n" +
	"\n" +
	"properties\x18\n" +
	" \x03(\v22.greatestworks.mail.MailAttachment.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf4\x01\n" +
	"\x11ClaimedAttachment\x12#\n" +
	"\rattachment_id\x18\x01 \x01(\tR\fattachmentId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12K\n" +
	"\x0fattachment_type\x18\x03 \x01(\x0e2\".greatestworks.mail.AttachmentTypeR\x0eattachmentType\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x05R\bquantity\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\xb8\x03\n" +
	"\tMailStats\x12\x1f\n" +
	"\vtotal_mails\x18\x01 \x01(\x05R\n" +
	"totalMails\x12!\n" +
	"\funread_mails\x18\x02 \x01(\x05R\vunreadMails\x124\n" +
	"\x16mails_with_attachments\x18\x03 \x01(\x05R\x14mailsWithAttachments\x12G\n" +
	" mails_with_unclaimed_attachments\x18\x04 \x01(\x05R\x1dmailsWithUnclaimedAttachments\x12'\n" +
	"\x0fimportant_mails\x18\x05 \x01(\x05R\x0eimportantMails\x12%\n" +
	"\x0efavorite_mails\x18\x06 \x01(\x05R\rfavoriteMails\x12!\n" +
	"\fsystem_mails\x18\a \x01(\x05R\vsystemMails\x12!\n" +
	"\fplayer_mails\x18\b \x01(\x05R\vplayerMails\x12(\n" +
	"\x10oldest_mail_date\x18\t \x01(\x03R\x0eoldestMailDate\x12(\n" +
	"\x10newest_mail_date\x18\n" +
	" \x01(\x03R\x0enewestMailDate\"\xf0\x02\n" +
	"\n" +
	"MailConfig\x123\n" +
	"\x16auto_delete_read_mails\x18\x01 \x01(\bR\x13autoDeleteReadMails\x12(\n" +
	"\x10auto_delete_days\x18\x02 \x01(\x05R\x0eautoDeleteDays\x12&\n" +
	"\x0fnotify_new_mail\x18\x03 \x01(\bR\rnotifyNewMail\x12,\n" +
	"\x12notify_system_mail\x18\x04 \x01(\bR\x10notifySystemMail\x124\n" +
	"\x16auto_claim_attachments\x18\x05 \x01(\bR\x14autoClaimAttachments\x12+\n" +
	"\x12max_mails_per_page\x18\x06 \x01(\x05R\x0fmaxMailsPerPage\x12J\n" +
	"\x12blocked_mail_types\x18\a \x03(\x0e2\x1c.greatestworks.mail.MailTypeR\x10blockedMailTypes*\x9a\x02\n" +
	"\bMailType\x12\x19\n" +
	"\x15MAIL_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MAIL_TYPE_SYSTEM\x10\x01\x12\x14\n" +
	"\x10MAIL_TYPE_PLAYER\x10\x02\x12\x14\n" +
	"\x10MAIL_TYPE_REWARD\x10\x03\x12\x1a\n" +
	"\x16MAIL_TYPE_NOTIFICATION\x10\x04\x12\x17\n" +
	"\x13MAIL_TYPE_PROMOTION\x10\x05\x12\x1a\n" +
	"\x16MAIL_TYPE_ANNOUNCEMENT\x10\x06\x12\x12\n" +
	"\x0eMAIL_TYPE_GIFT\x10\a\x12\x1a\n" +
	"\x16MAIL_TYPE_COMPENSATION\x10\b\x12\x1b\n" +
	"\x17MAIL_TYPE_BATTLE_REPORT\x10\t\x12\x13\n" +
	"\x0fMAIL_TYPE_GUILD\x10\n" +
	"*\xa3\x01\n" +
	"\n" +
	"MailStatus\x12\x1b\n" +
	"\x17MAIL_STATUS_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12MAIL_STATUS_UNREAD\x10\x01\x12\x14\n" +
	"\x10MAIL_STATUS_READ\x10\x02\x12\x18\n" +
	"\x14MAIL_STATUS_ARCHIVED\x10\x03\x12\x17\n" +
	"\x13MAIL_STATUS_DELETED\x10\x04\x12\x17\n" +
	"\x13MAIL_STATUS_EXPIRED\x10\x05*\xdf\x01\n" +
	"\x0eAttachmentType\x12\x1f\n" +
	"\x1bATTACHMENT_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ATTACHMENT_TYPE_ITEM\x10\x01\x12\x1c\n" +
	"\x18ATTACHMENT_TYPE_CURRENCY\x10\x02\x12\x1e\n" +
	"\x1aATTACHMENT_TYPE_EXPERIENCE\x10\x03\x12\x18\n" +
	"\x14ATTACHMENT_TYPE_BUFF\x10\x04\x12\x19\n" +
	"\x15ATTACHMENT_TYPE_TITLE\x10\x05\x12\x1f\n" +
	"\x1bATTACHMENT_TYPE_ACHIEVEMENT\x10\x06*\xdc\x01\n" +
	"\fMailMarkType\x12\x1e\n" +
	"\x1aMAIL_MARK_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13MAIL_MARK_TYPE_READ\x10\x01\x12\x19\n" +
	"\x15MAIL_MARK_TYPE_UNREAD\x10\x02\x12\x1c\n" +
	"\x18MAIL_MARK_TYPE_IMPORTANT\x10\x03\x12\x1e\n" +
	"\x1aMAIL_MARK_TYPE_UNIMPORTANT\x10\x04\x12\x1b\n" +
	"\x17MAIL_MARK_TYPE_FAVORITE\x10\x05\x12\x1d\n" +
	"\x19MAIL_MARK_TYPE_UNFAVORITE\x10\x062\xd1\b\n" +
	"\vMailService\x12U\n" +
	"\bSendMail\x12#.greatestworks.mail.SendMailRequest\x1a$.greatestworks.mail.SendMailResponse\x12^\n" +
	"\vGetMailList\x12&.greatestworks.mail.GetMailListRequest\x1a'.greatestworks.mail.GetMailListResponse\x12U\n" +
	"\bReadMail\x12#.greatestworks.mail.ReadMailRequest\x1a$.greatestworks.mail.ReadMailResponse\x12[\n" +
	"\n" +
	"DeleteMail\x12%.greatestworks.mail.DeleteMailRequest\x1a&.greatestworks.mail.DeleteMailResponse\x12m\n" +
	"\x10BatchDeleteMails\x12+.greatestworks.mail.BatchDeleteMailsRequest\x1a,.greatestworks.mail.BatchDeleteMailsResponse\x12j\n" +
	"\x0fClaimAttachment\x12*.greatestworks.mail.ClaimAttachmentRequest\x1a+.greatestworks.mail.ClaimAttachmentResponse\x12|\n" +
	"\x15BatchClaimAttachments\x120.greatestworks.mail.BatchClaimAttachmentsRequest\x1a1.greatestworks.mail.BatchClaimAttachmentsResponse\x12U\n" +
	"\bMarkMail\x12#.greatestworks.mail.MarkMailRequest\x1a$.greatestworks.mail.MarkMailResponse\x12^\n" +
	"\vSearchMails\x12&.greatestworks.mail.SearchMailsRequest\x1a'.greatestworks.mail.SearchMailsResponse\x12a\n" +
	"\fGetMailStats\x12'.greatestworks.mail.GetMailStatsRequest\x1a(.greatestworks.mail.GetMailStatsResponse\x12d\n" +
	"\rSetMailConfig\x12(.greatestworks.mail.SetMailConfigRequest\x1a).greatestworks.mail.SetMailConfigResponseB8Z!greatestworks/internal/proto/mail\xaa\x02\x12GreatestWorks.Mailb\x06proto3"

var (
	file_proto_mail_proto_rawDescOnce sync.Once
	file_proto_mail_proto_rawDescData []byte
)

func file_proto_mail_proto_rawDescGZIP() []byte {
	file_proto_mail_proto_rawDescOnce.Do(func() {
		file_proto_mail_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_mail_proto_rawDesc), len(file_proto_mail_proto_rawDesc)))
	})
	return file_proto_mail_proto_rawDescData
}

var file_proto_mail_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_mail_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_mail_proto_goTypes = []any{
	(MailType)(0),                         // 0: greatestworks.mail.MailType
	(MailStatus)(0),                       // 1: greatestworks.mail.MailStatus
	(AttachmentType)(0),                   // 2: greatestworks.mail.AttachmentType
	(MailMarkType)(0),                     // 3: greatestworks.mail.MailMarkType
	(*SendMailRequest)(nil),               // 4: greatestworks.mail.SendMailRequest
	(*SendMailResponse)(nil),              // 5: greatestworks.mail.SendMailResponse
	(*GetMailListRequest)(nil),            // 6: greatestworks.mail.GetMailListRequest
	(*GetMailListResponse)(nil),           // 7: greatestworks.mail.GetMailListResponse
	(*ReadMailRequest)(nil),               // 8: greatestworks.mail.ReadMailRequest
	(*ReadMailResponse)(nil),              // 9: greatestworks.mail.ReadMailResponse
	(*DeleteMailRequest)(nil),             // 10: greatestworks.mail.DeleteMailRequest
	(*DeleteMailResponse)(nil),            // 11: greatestworks.mail.DeleteMailResponse
	(*BatchDeleteMailsRequest)(nil),       // 12: greatestworks.mail.BatchDeleteMailsRequest
	(*BatchDeleteMailsResponse)(nil),      // 13: greatestworks.mail.BatchDeleteMailsResponse
	(*ClaimAttachmentRequest)(nil),        // 14: greatestworks.mail.ClaimAttachmentRequest
	(*ClaimAttachmentResponse)(nil),       // 15: greatestworks.mail.ClaimAttachmentResponse
	(*BatchClaimAttachmentsRequest)(nil),  // 16: greatestworks.mail.BatchClaimAttachmentsRequest
	(*BatchClaimAttachmentsResponse)(nil), // 17: greatestworks.mail.BatchClaimAttachmentsResponse
	(*MarkMailRequest)(nil),               // 18: greatestworks.mail.MarkMailRequest
	(*MarkMailResponse)(nil),              // 19: greatestworks.mail.MarkMailResponse
	(*SearchMailsRequest)(nil),            // 20: greatestworks.mail.SearchMailsRequest
	(*SearchMailsResponse)(nil),           // 21: greatestworks.mail.SearchMailsResponse
	(*GetMailStatsRequest)(nil),           // 22: greatestworks.mail.GetMailStatsRequest
	(*GetMailStatsResponse)(nil),          // 23: greatestworks.mail.GetMailStatsResponse
	(*SetMailConfigRequest)(nil),          // 24: greatestworks.mail.SetMailConfigRequest
	(*SetMailConfigResponse)(nil),         // 25: greatestworks.mail.SetMailConfigResponse
	(*MailInfo)(nil),                      // 26: greatestworks.mail.MailInfo
	(*MailDetail)(nil),                    // 27: greatestworks.mail.MailDetail
	(*MailAttachment)(nil),                // 28: greatestworks.mail.MailAttachment
	(*ClaimedAttachment)(nil),             // 29: greatestworks.mail.ClaimedAttachment
	(*MailStats)(nil),                     // 30: greatestworks.mail.MailStats
	(*MailConfig)(nil),                    // 31: greatestworks.mail.MailConfig
	nil,                                   // 32: greatestworks.mail.SendMailRequest.MetadataEntry
	nil,                                   // 33: greatestworks.mail.MailDetail.MetadataEntry
	nil,                                   // 34: greatestworks.mail.MailAttachment.PropertiesEntry
	(*common.CommonResponse)(nil),         // 35: greatestworks.common.CommonResponse
	(*common.PaginationInfo)(nil),         // 36: greatestworks.common.PaginationInfo
}
var file_proto_mail_proto_depIdxs = []int32{
	0,  // 0: greatestworks.mail.SendMailRequest.mail_type:type_name -> greatestworks.mail.MailType
	28, // 1: greatestworks.mail.SendMailRequest.attachments:type_name -> greatestworks.mail.MailAttachment
	32, // 2: greatestworks.mail.SendMailRequest.metadata:type_name -> greatestworks.mail.SendMailRequest.MetadataEntry
	35, // 3: greatestworks.mail.SendMailResponse.common:type_name -> greatestworks.common.CommonResponse
	1,  // 4: greatestworks.mail.GetMailListRequest.status:type_name -> greatestworks.mail.MailStatus
	0,  // 5: greatestworks.mail.GetMailListRequest.mail_type:type_name -> greatestworks.mail.MailType
	35, // 6: greatestworks.mail.GetMailListResponse.common:type_name -> greatestworks.common.CommonResponse
	26, // 7: greatestworks.mail.GetMailListResponse.mails:type_name -> greatestworks.mail.MailInfo
	36, // 8: greatestworks.mail.GetMailListResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	30, // 9: greatestworks.mail.GetMailListResponse.stats:type_name -> greatestworks.mail.MailStats
	35, // 10: greatestworks.mail.ReadMailResponse.common:type_name -> greatestworks.common.CommonResponse
	27, // 11: greatestworks.mail.ReadMailResponse.mail:type_name -> greatestworks.mail.MailDetail
	35, // 12: greatestworks.mail.DeleteMailResponse.common:type_name -> greatestworks.common.CommonResponse
	35, // 13: greatestworks.mail.BatchDeleteMailsResponse.common:type_name -> greatestworks.common.CommonResponse
	35, // 14: greatestworks.mail.ClaimAttachmentResponse.common:type_name -> greatestworks.common.CommonResponse
	29, // 15: greatestworks.mail.ClaimAttachmentResponse.claimed_attachments:type_name -> greatestworks.mail.ClaimedAttachment
	35, // 16: greatestworks.mail.BatchClaimAttachmentsResponse.common:type_name -> greatestworks.common.CommonResponse
	29, // 17: greatestworks.mail.BatchClaimAttachmentsResponse.claimed_attachments:type_name -> greatestworks.mail.ClaimedAttachment
	3,  // 18: greatestworks.mail.MarkMailRequest.mark_type:type_name -> greatestworks.mail.MailMarkType
	35, // 19: greatestworks.mail.MarkMailResponse.common:type_name -> greatestworks.common.CommonResponse
	0,  // 20: greatestworks.mail.SearchMailsRequest.mail_type:type_name -> greatestworks.mail.MailType
	35, // 21: greatestworks.mail.SearchMailsResponse.common:type_name -> greatestworks.common.CommonResponse
	26, // 22: greatestworks.mail.SearchMailsResponse.mails:type_name -> greatestworks.mail.MailInfo
	36, // 23: greatestworks.mail.SearchMailsResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	35, // 24: greatestworks.mail.GetMailStatsResponse.common:type_name -> greatestworks.common.CommonResponse
	30, // 25: greatestworks.mail.GetMailStatsResponse.stats:type_name -> greatestworks.mail.MailStats
	31, // 26: greatestworks.mail.SetMailConfigRequest.config:type_name -> greatestworks.mail.MailConfig
	35, // 27: greatestworks.mail.SetMailConfigResponse.common:type_name -> greatestworks.common.CommonResponse
	31, // 28: greatestworks.mail.SetMailConfigResponse.config:type_name -> greatestworks.mail.MailConfig
	0,  // 29: greatestworks.mail.MailInfo.mail_type:type_name -> greatestworks.mail.MailType
	1,  // 30: greatestworks.mail.MailInfo.status:type_name -> greatestworks.mail.MailStatus
	0,  // 31: greatestworks.mail.MailDetail.mail_type:type_name -> greatestworks.mail.MailType
	1,  // 32: greatestworks.mail.MailDetail.status:type_name -> greatestworks.mail.MailStatus
	28, // 33: greatestworks.mail.MailDetail.attachments:type_name -> greatestworks.mail.MailAttachment
	33, // 34: greatestworks.mail.MailDetail.metadata:type_name -> greatestworks.mail.MailDetail.MetadataEntry
	2,  // 35: greatestworks.mail.MailAttachment.attachment_type:type_name -> greatestworks.mail.AttachmentType
	34, // 36: greatestworks.mail.MailAttachment.properties:type_name -> greatestworks.mail.MailAttachment.PropertiesEntry
	2,  // 37: greatestworks.mail.ClaimedAttachment.attachment_type:type_name -> greatestworks.mail.AttachmentType
	0,  // 38: greatestworks.mail.MailConfig.blocked_mail_types:type_name -> greatestworks.mail.MailType
	4,  // 39: greatestworks.mail.MailService.SendMail:input_type -> greatestworks.mail.SendMailRequest
	6,  // 40: greatestworks.mail.MailService.GetMailList:input_type -> greatestworks.mail.GetMailListRequest
	8,  // 41: greatestworks.mail.MailService.ReadMail:input_type -> greatestworks.mail.ReadMailRequest
	10, // 42: greatestworks.mail.MailService.DeleteMail:input_type -> greatestworks.mail.DeleteMailRequest
	12, // 43: greatestworks.mail.MailService.BatchDeleteMails:input_type -> greatestworks.mail.BatchDeleteMailsRequest
	14, // 44: greatestworks.mail.MailService.ClaimAttachment:input_type -> greatestworks.mail.ClaimAttachmentRequest
	16, // 45: greatestworks.mail.MailService.BatchClaimAttachments:input_type -> greatestworks.mail.BatchClaimAttachmentsRequest
	18, // 46: greatestworks.mail.MailService.MarkMail:input_type -> greatestworks.mail.MarkMailRequest
	20, // 47: greatestworks.mail.MailService.SearchMails:input_type -> greatestworks.mail.SearchMailsRequest
	22, // 48: greatestworks.mail.MailService.GetMailStats:input_type -> greatestworks.mail.GetMailStatsRequest
	24, // 49: greatestworks.mail.MailService.SetMailConfig:input_type -> greatestworks.mail.SetMailConfigRequest
	5,  // 50: greatestworks.mail.MailService.SendMail:output_type -> greatestworks.mail.SendMailResponse
	7,  // 51: greatestworks.mail.MailService.GetMailList:output_type -> greatestworks.mail.GetMailListResponse
	9,  // 52: greatestworks.mail.MailService.ReadMail:output_type -> greatestworks.mail.ReadMailResponse
	11, // 53: greatestworks.mail.MailService.DeleteMail:output_type -> greatestworks.mail.DeleteMailResponse
	13, // 54: greatestworks.mail.MailService.BatchDeleteMails:output_type -> greatestworks.mail.BatchDeleteMailsResponse
	15, // 55: greatestworks.mail.MailService.ClaimAttachment:output_type -> greatestworks.mail.ClaimAttachmentResponse
	17, // 56: greatestworks.mail.MailService.BatchClaimAttachments:output_type -> greatestworks.mail.BatchClaimAttachmentsResponse
	19, // 57: greatestworks.mail.MailService.MarkMail:output_type -> greatestworks.mail.MarkMailResponse
	21, // 58: greatestworks.mail.MailService.SearchMails:output_type -> greatestworks.mail.SearchMailsResponse
	23, // 59: greatestworks.mail.MailService.GetMailStats:output_type -> greatestworks.mail.GetMailStatsResponse
	25, // 60: greatestworks.mail.MailService.SetMailConfig:output_type -> greatestworks.mail.SetMailConfigResponse
	50, // [50:61] is the sub-list for method output_type
	39, // [39:50] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_proto_mail_proto_init() }
func file_proto_mail_proto_init() {
	if File_proto_mail_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_mail_proto_rawDesc), len(file_proto_mail_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_mail_proto_goTypes,
		DependencyIndexes: file_proto_mail_proto_depIdxs,
		EnumInfos:         file_proto_mail_proto_enumTypes,
		MessageInfos:      file_proto_mail_proto_msgTypes,
	}.Build()
	File_proto_mail_proto = out.File
	file_proto_mail_proto_goTypes = nil
	file_proto_mail_proto_depIdxs = nil
}
