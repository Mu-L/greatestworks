// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v4.25.1
// source: proto/scene.proto

package scene

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	common "greatestworks/internal/proto/common"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 场景类型枚举
type SceneType int32

const (
	SceneType_SCENE_TYPE_UNSPECIFIED     SceneType = 0
	SceneType_SCENE_TYPE_TOWN            SceneType = 1 // 城镇
	SceneType_SCENE_TYPE_DUNGEON         SceneType = 2 // 地下城
	SceneType_SCENE_TYPE_WILDERNESS      SceneType = 3 // 野外
	SceneType_SCENE_TYPE_BATTLE_ARENA    SceneType = 4 // 战斗竞技场
	SceneType_SCENE_TYPE_INSTANCE        SceneType = 5 // 副本
	SceneType_SCENE_TYPE_GUILD_HALL      SceneType = 6 // 公会大厅
	SceneType_SCENE_TYPE_PRIVATE_ROOM    SceneType = 7 // 私人房间
	SceneType_SCENE_TYPE_EVENT_AREA      SceneType = 8 // 活动区域
	SceneType_SCENE_TYPE_TRAINING_GROUND SceneType = 9 // 训练场
)

// Enum value maps for SceneType.
var (
	SceneType_name = map[int32]string{
		0: "SCENE_TYPE_UNSPECIFIED",
		1: "SCENE_TYPE_TOWN",
		2: "SCENE_TYPE_DUNGEON",
		3: "SCENE_TYPE_WILDERNESS",
		4: "SCENE_TYPE_BATTLE_ARENA",
		5: "SCENE_TYPE_INSTANCE",
		6: "SCENE_TYPE_GUILD_HALL",
		7: "SCENE_TYPE_PRIVATE_ROOM",
		8: "SCENE_TYPE_EVENT_AREA",
		9: "SCENE_TYPE_TRAINING_GROUND",
	}
	SceneType_value = map[string]int32{
		"SCENE_TYPE_UNSPECIFIED":     0,
		"SCENE_TYPE_TOWN":            1,
		"SCENE_TYPE_DUNGEON":         2,
		"SCENE_TYPE_WILDERNESS":      3,
		"SCENE_TYPE_BATTLE_ARENA":    4,
		"SCENE_TYPE_INSTANCE":        5,
		"SCENE_TYPE_GUILD_HALL":      6,
		"SCENE_TYPE_PRIVATE_ROOM":    7,
		"SCENE_TYPE_EVENT_AREA":      8,
		"SCENE_TYPE_TRAINING_GROUND": 9,
	}
)

func (x SceneType) Enum() *SceneType {
	p := new(SceneType)
	*p = x
	return p
}

func (x SceneType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SceneType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[0].Descriptor()
}

func (SceneType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[0]
}

func (x SceneType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SceneType.Descriptor instead.
func (SceneType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{0}
}

// 场景状态枚举
type SceneStatus int32

const (
	SceneStatus_SCENE_STATUS_UNSPECIFIED SceneStatus = 0
	SceneStatus_SCENE_STATUS_ACTIVE      SceneStatus = 1 // 活跃
	SceneStatus_SCENE_STATUS_MAINTENANCE SceneStatus = 2 // 维护中
	SceneStatus_SCENE_STATUS_CLOSED      SceneStatus = 3 // 已关闭
	SceneStatus_SCENE_STATUS_FULL        SceneStatus = 4 // 已满员
	SceneStatus_SCENE_STATUS_LOADING     SceneStatus = 5 // 加载中
)

// Enum value maps for SceneStatus.
var (
	SceneStatus_name = map[int32]string{
		0: "SCENE_STATUS_UNSPECIFIED",
		1: "SCENE_STATUS_ACTIVE",
		2: "SCENE_STATUS_MAINTENANCE",
		3: "SCENE_STATUS_CLOSED",
		4: "SCENE_STATUS_FULL",
		5: "SCENE_STATUS_LOADING",
	}
	SceneStatus_value = map[string]int32{
		"SCENE_STATUS_UNSPECIFIED": 0,
		"SCENE_STATUS_ACTIVE":      1,
		"SCENE_STATUS_MAINTENANCE": 2,
		"SCENE_STATUS_CLOSED":      3,
		"SCENE_STATUS_FULL":        4,
		"SCENE_STATUS_LOADING":     5,
	}
)

func (x SceneStatus) Enum() *SceneStatus {
	p := new(SceneStatus)
	*p = x
	return p
}

func (x SceneStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SceneStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[1].Descriptor()
}

func (SceneStatus) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[1]
}

func (x SceneStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SceneStatus.Descriptor instead.
func (SceneStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{1}
}

// 玩家状态枚举
type PlayerState int32

const (
	PlayerState_PLAYER_STATE_UNSPECIFIED PlayerState = 0
	PlayerState_PLAYER_STATE_IDLE        PlayerState = 1 // 空闲
	PlayerState_PLAYER_STATE_MOVING      PlayerState = 2 // 移动中
	PlayerState_PLAYER_STATE_INTERACTING PlayerState = 3 // 交互中
	PlayerState_PLAYER_STATE_COMBAT      PlayerState = 4 // 战斗中
	PlayerState_PLAYER_STATE_TRADING     PlayerState = 5 // 交易中
	PlayerState_PLAYER_STATE_AFK         PlayerState = 6 // 暂离
	PlayerState_PLAYER_STATE_INVISIBLE   PlayerState = 7 // 隐身
)

// Enum value maps for PlayerState.
var (
	PlayerState_name = map[int32]string{
		0: "PLAYER_STATE_UNSPECIFIED",
		1: "PLAYER_STATE_IDLE",
		2: "PLAYER_STATE_MOVING",
		3: "PLAYER_STATE_INTERACTING",
		4: "PLAYER_STATE_COMBAT",
		5: "PLAYER_STATE_TRADING",
		6: "PLAYER_STATE_AFK",
		7: "PLAYER_STATE_INVISIBLE",
	}
	PlayerState_value = map[string]int32{
		"PLAYER_STATE_UNSPECIFIED": 0,
		"PLAYER_STATE_IDLE":        1,
		"PLAYER_STATE_MOVING":      2,
		"PLAYER_STATE_INTERACTING": 3,
		"PLAYER_STATE_COMBAT":      4,
		"PLAYER_STATE_TRADING":     5,
		"PLAYER_STATE_AFK":         6,
		"PLAYER_STATE_INVISIBLE":   7,
	}
)

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}

func (x PlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[2].Descriptor()
}

func (PlayerState) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[2]
}

func (x PlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerState.Descriptor instead.
func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{2}
}

// 对象类型枚举
type ObjectType int32

const (
	ObjectType_OBJECT_TYPE_UNSPECIFIED ObjectType = 0
	ObjectType_OBJECT_TYPE_NPC         ObjectType = 1  // NPC
	ObjectType_OBJECT_TYPE_ITEM        ObjectType = 2  // 物品
	ObjectType_OBJECT_TYPE_CHEST       ObjectType = 3  // 宝箱
	ObjectType_OBJECT_TYPE_DOOR        ObjectType = 4  // 门
	ObjectType_OBJECT_TYPE_PORTAL      ObjectType = 5  // 传送门
	ObjectType_OBJECT_TYPE_SIGN        ObjectType = 6  // 标志牌
	ObjectType_OBJECT_TYPE_DECORATION  ObjectType = 7  // 装饰物
	ObjectType_OBJECT_TYPE_FURNITURE   ObjectType = 8  // 家具
	ObjectType_OBJECT_TYPE_VEHICLE     ObjectType = 9  // 载具
	ObjectType_OBJECT_TYPE_RESOURCE    ObjectType = 10 // 资源点
	ObjectType_OBJECT_TYPE_TRAP        ObjectType = 11 // 陷阱
	ObjectType_OBJECT_TYPE_SWITCH      ObjectType = 12 // 开关
)

// Enum value maps for ObjectType.
var (
	ObjectType_name = map[int32]string{
		0:  "OBJECT_TYPE_UNSPECIFIED",
		1:  "OBJECT_TYPE_NPC",
		2:  "OBJECT_TYPE_ITEM",
		3:  "OBJECT_TYPE_CHEST",
		4:  "OBJECT_TYPE_DOOR",
		5:  "OBJECT_TYPE_PORTAL",
		6:  "OBJECT_TYPE_SIGN",
		7:  "OBJECT_TYPE_DECORATION",
		8:  "OBJECT_TYPE_FURNITURE",
		9:  "OBJECT_TYPE_VEHICLE",
		10: "OBJECT_TYPE_RESOURCE",
		11: "OBJECT_TYPE_TRAP",
		12: "OBJECT_TYPE_SWITCH",
	}
	ObjectType_value = map[string]int32{
		"OBJECT_TYPE_UNSPECIFIED": 0,
		"OBJECT_TYPE_NPC":         1,
		"OBJECT_TYPE_ITEM":        2,
		"OBJECT_TYPE_CHEST":       3,
		"OBJECT_TYPE_DOOR":        4,
		"OBJECT_TYPE_PORTAL":      5,
		"OBJECT_TYPE_SIGN":        6,
		"OBJECT_TYPE_DECORATION":  7,
		"OBJECT_TYPE_FURNITURE":   8,
		"OBJECT_TYPE_VEHICLE":     9,
		"OBJECT_TYPE_RESOURCE":    10,
		"OBJECT_TYPE_TRAP":        11,
		"OBJECT_TYPE_SWITCH":      12,
	}
)

func (x ObjectType) Enum() *ObjectType {
	p := new(ObjectType)
	*p = x
	return p
}

func (x ObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[3].Descriptor()
}

func (ObjectType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[3]
}

func (x ObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectType.Descriptor instead.
func (ObjectType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{3}
}

// 对象状态枚举
type ObjectState int32

const (
	ObjectState_OBJECT_STATE_UNSPECIFIED ObjectState = 0
	ObjectState_OBJECT_STATE_NORMAL      ObjectState = 1 // 正常
	ObjectState_OBJECT_STATE_ACTIVATED   ObjectState = 2 // 已激活
	ObjectState_OBJECT_STATE_DISABLED    ObjectState = 3 // 已禁用
	ObjectState_OBJECT_STATE_BROKEN      ObjectState = 4 // 已损坏
	ObjectState_OBJECT_STATE_LOCKED      ObjectState = 5 // 已锁定
	ObjectState_OBJECT_STATE_HIDDEN      ObjectState = 6 // 隐藏
)

// Enum value maps for ObjectState.
var (
	ObjectState_name = map[int32]string{
		0: "OBJECT_STATE_UNSPECIFIED",
		1: "OBJECT_STATE_NORMAL",
		2: "OBJECT_STATE_ACTIVATED",
		3: "OBJECT_STATE_DISABLED",
		4: "OBJECT_STATE_BROKEN",
		5: "OBJECT_STATE_LOCKED",
		6: "OBJECT_STATE_HIDDEN",
	}
	ObjectState_value = map[string]int32{
		"OBJECT_STATE_UNSPECIFIED": 0,
		"OBJECT_STATE_NORMAL":      1,
		"OBJECT_STATE_ACTIVATED":   2,
		"OBJECT_STATE_DISABLED":    3,
		"OBJECT_STATE_BROKEN":      4,
		"OBJECT_STATE_LOCKED":      5,
		"OBJECT_STATE_HIDDEN":      6,
	}
)

func (x ObjectState) Enum() *ObjectState {
	p := new(ObjectState)
	*p = x
	return p
}

func (x ObjectState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[4].Descriptor()
}

func (ObjectState) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[4]
}

func (x ObjectState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectState.Descriptor instead.
func (ObjectState) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{4}
}

// 交互类型枚举
type InteractionType int32

const (
	InteractionType_INTERACTION_TYPE_UNSPECIFIED InteractionType = 0
	InteractionType_INTERACTION_TYPE_TALK        InteractionType = 1  // 对话
	InteractionType_INTERACTION_TYPE_USE         InteractionType = 2  // 使用
	InteractionType_INTERACTION_TYPE_EXAMINE     InteractionType = 3  // 检查
	InteractionType_INTERACTION_TYPE_OPEN        InteractionType = 4  // 打开
	InteractionType_INTERACTION_TYPE_CLOSE       InteractionType = 5  // 关闭
	InteractionType_INTERACTION_TYPE_PICKUP      InteractionType = 6  // 拾取
	InteractionType_INTERACTION_TYPE_ACTIVATE    InteractionType = 7  // 激活
	InteractionType_INTERACTION_TYPE_REPAIR      InteractionType = 8  // 修理
	InteractionType_INTERACTION_TYPE_UPGRADE     InteractionType = 9  // 升级
	InteractionType_INTERACTION_TYPE_DESTROY     InteractionType = 10 // 摧毁
)

// Enum value maps for InteractionType.
var (
	InteractionType_name = map[int32]string{
		0:  "INTERACTION_TYPE_UNSPECIFIED",
		1:  "INTERACTION_TYPE_TALK",
		2:  "INTERACTION_TYPE_USE",
		3:  "INTERACTION_TYPE_EXAMINE",
		4:  "INTERACTION_TYPE_OPEN",
		5:  "INTERACTION_TYPE_CLOSE",
		6:  "INTERACTION_TYPE_PICKUP",
		7:  "INTERACTION_TYPE_ACTIVATE",
		8:  "INTERACTION_TYPE_REPAIR",
		9:  "INTERACTION_TYPE_UPGRADE",
		10: "INTERACTION_TYPE_DESTROY",
	}
	InteractionType_value = map[string]int32{
		"INTERACTION_TYPE_UNSPECIFIED": 0,
		"INTERACTION_TYPE_TALK":        1,
		"INTERACTION_TYPE_USE":         2,
		"INTERACTION_TYPE_EXAMINE":     3,
		"INTERACTION_TYPE_OPEN":        4,
		"INTERACTION_TYPE_CLOSE":       5,
		"INTERACTION_TYPE_PICKUP":      6,
		"INTERACTION_TYPE_ACTIVATE":    7,
		"INTERACTION_TYPE_REPAIR":      8,
		"INTERACTION_TYPE_UPGRADE":     9,
		"INTERACTION_TYPE_DESTROY":     10,
	}
)

func (x InteractionType) Enum() *InteractionType {
	p := new(InteractionType)
	*p = x
	return p
}

func (x InteractionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[5].Descriptor()
}

func (InteractionType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[5]
}

func (x InteractionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionType.Descriptor instead.
func (InteractionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{5}
}

// 移动类型枚举
type MovementType int32

const (
	MovementType_MOVEMENT_TYPE_UNSPECIFIED MovementType = 0
	MovementType_MOVEMENT_TYPE_WALK        MovementType = 1 // 走路
	MovementType_MOVEMENT_TYPE_RUN         MovementType = 2 // 跑步
	MovementType_MOVEMENT_TYPE_TELEPORT    MovementType = 3 // 传送
	MovementType_MOVEMENT_TYPE_FLY         MovementType = 4 // 飞行
	MovementType_MOVEMENT_TYPE_SWIM        MovementType = 5 // 游泳
	MovementType_MOVEMENT_TYPE_MOUNT       MovementType = 6 // 坐骑
)

// Enum value maps for MovementType.
var (
	MovementType_name = map[int32]string{
		0: "MOVEMENT_TYPE_UNSPECIFIED",
		1: "MOVEMENT_TYPE_WALK",
		2: "MOVEMENT_TYPE_RUN",
		3: "MOVEMENT_TYPE_TELEPORT",
		4: "MOVEMENT_TYPE_FLY",
		5: "MOVEMENT_TYPE_SWIM",
		6: "MOVEMENT_TYPE_MOUNT",
	}
	MovementType_value = map[string]int32{
		"MOVEMENT_TYPE_UNSPECIFIED": 0,
		"MOVEMENT_TYPE_WALK":        1,
		"MOVEMENT_TYPE_RUN":         2,
		"MOVEMENT_TYPE_TELEPORT":    3,
		"MOVEMENT_TYPE_FLY":         4,
		"MOVEMENT_TYPE_SWIM":        5,
		"MOVEMENT_TYPE_MOUNT":       6,
	}
)

func (x MovementType) Enum() *MovementType {
	p := new(MovementType)
	*p = x
	return p
}

func (x MovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[6].Descriptor()
}

func (MovementType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[6]
}

func (x MovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementType.Descriptor instead.
func (MovementType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{6}
}

// 天气类型枚举
type WeatherType int32

const (
	WeatherType_WEATHER_TYPE_UNSPECIFIED WeatherType = 0
	WeatherType_WEATHER_TYPE_CLEAR       WeatherType = 1 // 晴天
	WeatherType_WEATHER_TYPE_CLOUDY      WeatherType = 2 // 多云
	WeatherType_WEATHER_TYPE_RAINY       WeatherType = 3 // 雨天
	WeatherType_WEATHER_TYPE_STORMY      WeatherType = 4 // 暴风雨
	WeatherType_WEATHER_TYPE_SNOWY       WeatherType = 5 // 雪天
	WeatherType_WEATHER_TYPE_FOGGY       WeatherType = 6 // 雾天
	WeatherType_WEATHER_TYPE_WINDY       WeatherType = 7 // 大风
)

// Enum value maps for WeatherType.
var (
	WeatherType_name = map[int32]string{
		0: "WEATHER_TYPE_UNSPECIFIED",
		1: "WEATHER_TYPE_CLEAR",
		2: "WEATHER_TYPE_CLOUDY",
		3: "WEATHER_TYPE_RAINY",
		4: "WEATHER_TYPE_STORMY",
		5: "WEATHER_TYPE_SNOWY",
		6: "WEATHER_TYPE_FOGGY",
		7: "WEATHER_TYPE_WINDY",
	}
	WeatherType_value = map[string]int32{
		"WEATHER_TYPE_UNSPECIFIED": 0,
		"WEATHER_TYPE_CLEAR":       1,
		"WEATHER_TYPE_CLOUDY":      2,
		"WEATHER_TYPE_RAINY":       3,
		"WEATHER_TYPE_STORMY":      4,
		"WEATHER_TYPE_SNOWY":       5,
		"WEATHER_TYPE_FOGGY":       6,
		"WEATHER_TYPE_WINDY":       7,
	}
)

func (x WeatherType) Enum() *WeatherType {
	p := new(WeatherType)
	*p = x
	return p
}

func (x WeatherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeatherType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[7].Descriptor()
}

func (WeatherType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[7]
}

func (x WeatherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeatherType.Descriptor instead.
func (WeatherType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{7}
}

// 时间段枚举
type TimeOfDay int32

const (
	TimeOfDay_TIME_OF_DAY_UNSPECIFIED TimeOfDay = 0
	TimeOfDay_TIME_OF_DAY_DAWN        TimeOfDay = 1 // 黎明
	TimeOfDay_TIME_OF_DAY_MORNING     TimeOfDay = 2 // 上午
	TimeOfDay_TIME_OF_DAY_NOON        TimeOfDay = 3 // 中午
	TimeOfDay_TIME_OF_DAY_AFTERNOON   TimeOfDay = 4 // 下午
	TimeOfDay_TIME_OF_DAY_EVENING     TimeOfDay = 5 // 傍晚
	TimeOfDay_TIME_OF_DAY_NIGHT       TimeOfDay = 6 // 夜晚
	TimeOfDay_TIME_OF_DAY_MIDNIGHT    TimeOfDay = 7 // 午夜
)

// Enum value maps for TimeOfDay.
var (
	TimeOfDay_name = map[int32]string{
		0: "TIME_OF_DAY_UNSPECIFIED",
		1: "TIME_OF_DAY_DAWN",
		2: "TIME_OF_DAY_MORNING",
		3: "TIME_OF_DAY_NOON",
		4: "TIME_OF_DAY_AFTERNOON",
		5: "TIME_OF_DAY_EVENING",
		6: "TIME_OF_DAY_NIGHT",
		7: "TIME_OF_DAY_MIDNIGHT",
	}
	TimeOfDay_value = map[string]int32{
		"TIME_OF_DAY_UNSPECIFIED": 0,
		"TIME_OF_DAY_DAWN":        1,
		"TIME_OF_DAY_MORNING":     2,
		"TIME_OF_DAY_NOON":        3,
		"TIME_OF_DAY_AFTERNOON":   4,
		"TIME_OF_DAY_EVENING":     5,
		"TIME_OF_DAY_NIGHT":       6,
		"TIME_OF_DAY_MIDNIGHT":    7,
	}
)

func (x TimeOfDay) Enum() *TimeOfDay {
	p := new(TimeOfDay)
	*p = x
	return p
}

func (x TimeOfDay) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeOfDay) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[8].Descriptor()
}

func (TimeOfDay) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[8]
}

func (x TimeOfDay) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeOfDay.Descriptor instead.
func (TimeOfDay) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{8}
}

// 事件类型枚举
type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED        EventType = 0
	EventType_EVENT_TYPE_PLAYER_ENTER       EventType = 1  // 玩家进入
	EventType_EVENT_TYPE_PLAYER_LEAVE       EventType = 2  // 玩家离开
	EventType_EVENT_TYPE_OBJECT_INTERACTION EventType = 3  // 对象交互
	EventType_EVENT_TYPE_COMBAT_START       EventType = 4  // 战斗开始
	EventType_EVENT_TYPE_COMBAT_END         EventType = 5  // 战斗结束
	EventType_EVENT_TYPE_ITEM_PICKUP        EventType = 6  // 物品拾取
	EventType_EVENT_TYPE_QUEST_TRIGGER      EventType = 7  // 任务触发
	EventType_EVENT_TYPE_ACHIEVEMENT_UNLOCK EventType = 8  // 成就解锁
	EventType_EVENT_TYPE_WEATHER_CHANGE     EventType = 9  // 天气变化
	EventType_EVENT_TYPE_TIME_CHANGE        EventType = 10 // 时间变化
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNSPECIFIED",
		1:  "EVENT_TYPE_PLAYER_ENTER",
		2:  "EVENT_TYPE_PLAYER_LEAVE",
		3:  "EVENT_TYPE_OBJECT_INTERACTION",
		4:  "EVENT_TYPE_COMBAT_START",
		5:  "EVENT_TYPE_COMBAT_END",
		6:  "EVENT_TYPE_ITEM_PICKUP",
		7:  "EVENT_TYPE_QUEST_TRIGGER",
		8:  "EVENT_TYPE_ACHIEVEMENT_UNLOCK",
		9:  "EVENT_TYPE_WEATHER_CHANGE",
		10: "EVENT_TYPE_TIME_CHANGE",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED":        0,
		"EVENT_TYPE_PLAYER_ENTER":       1,
		"EVENT_TYPE_PLAYER_LEAVE":       2,
		"EVENT_TYPE_OBJECT_INTERACTION": 3,
		"EVENT_TYPE_COMBAT_START":       4,
		"EVENT_TYPE_COMBAT_END":         5,
		"EVENT_TYPE_ITEM_PICKUP":        6,
		"EVENT_TYPE_QUEST_TRIGGER":      7,
		"EVENT_TYPE_ACHIEVEMENT_UNLOCK": 8,
		"EVENT_TYPE_WEATHER_CHANGE":     9,
		"EVENT_TYPE_TIME_CHANGE":        10,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[9].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[9]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{9}
}

// 效果类型枚举
type EffectType int32

const (
	EffectType_EFFECT_TYPE_UNSPECIFIED  EffectType = 0
	EffectType_EFFECT_TYPE_BUFF         EffectType = 1  // 增益
	EffectType_EFFECT_TYPE_DEBUFF       EffectType = 2  // 减益
	EffectType_EFFECT_TYPE_DAMAGE       EffectType = 3  // 伤害
	EffectType_EFFECT_TYPE_HEAL         EffectType = 4  // 治疗
	EffectType_EFFECT_TYPE_TELEPORT     EffectType = 5  // 传送
	EffectType_EFFECT_TYPE_TRANSFORM    EffectType = 6  // 变形
	EffectType_EFFECT_TYPE_INVISIBILITY EffectType = 7  // 隐身
	EffectType_EFFECT_TYPE_SPEED_BOOST  EffectType = 8  // 速度提升
	EffectType_EFFECT_TYPE_SHIELD       EffectType = 9  // 护盾
	EffectType_EFFECT_TYPE_STUN         EffectType = 10 // 眩晕
)

// Enum value maps for EffectType.
var (
	EffectType_name = map[int32]string{
		0:  "EFFECT_TYPE_UNSPECIFIED",
		1:  "EFFECT_TYPE_BUFF",
		2:  "EFFECT_TYPE_DEBUFF",
		3:  "EFFECT_TYPE_DAMAGE",
		4:  "EFFECT_TYPE_HEAL",
		5:  "EFFECT_TYPE_TELEPORT",
		6:  "EFFECT_TYPE_TRANSFORM",
		7:  "EFFECT_TYPE_INVISIBILITY",
		8:  "EFFECT_TYPE_SPEED_BOOST",
		9:  "EFFECT_TYPE_SHIELD",
		10: "EFFECT_TYPE_STUN",
	}
	EffectType_value = map[string]int32{
		"EFFECT_TYPE_UNSPECIFIED":  0,
		"EFFECT_TYPE_BUFF":         1,
		"EFFECT_TYPE_DEBUFF":       2,
		"EFFECT_TYPE_DAMAGE":       3,
		"EFFECT_TYPE_HEAL":         4,
		"EFFECT_TYPE_TELEPORT":     5,
		"EFFECT_TYPE_TRANSFORM":    6,
		"EFFECT_TYPE_INVISIBILITY": 7,
		"EFFECT_TYPE_SPEED_BOOST":  8,
		"EFFECT_TYPE_SHIELD":       9,
		"EFFECT_TYPE_STUN":         10,
	}
)

func (x EffectType) Enum() *EffectType {
	p := new(EffectType)
	*p = x
	return p
}

func (x EffectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EffectType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_scene_proto_enumTypes[10].Descriptor()
}

func (EffectType) Type() protoreflect.EnumType {
	return &file_proto_scene_proto_enumTypes[10]
}

func (x EffectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EffectType.Descriptor instead.
func (EffectType) EnumDescriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{10}
}

// 进入场景请求
type EnterSceneRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SceneId         string                 `protobuf:"bytes,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	SpawnPosition   *common.Position       `protobuf:"bytes,3,opt,name=spawn_position,json=spawnPosition,proto3" json:"spawn_position,omitempty"`
	PreviousSceneId string                 `protobuf:"bytes,4,opt,name=previous_scene_id,json=previousSceneId,proto3" json:"previous_scene_id,omitempty"`
	EntranceId      string                 `protobuf:"bytes,5,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"` // 入口ID（如传送门、门等）
	EntryContext    map[string]string      `protobuf:"bytes,6,rep,name=entry_context,json=entryContext,proto3" json:"entry_context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EnterSceneRequest) Reset() {
	*x = EnterSceneRequest{}
	mi := &file_proto_scene_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterSceneRequest) ProtoMessage() {}

func (x *EnterSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterSceneRequest.ProtoReflect.Descriptor instead.
func (*EnterSceneRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{0}
}

func (x *EnterSceneRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *EnterSceneRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *EnterSceneRequest) GetSpawnPosition() *common.Position {
	if x != nil {
		return x.SpawnPosition
	}
	return nil
}

func (x *EnterSceneRequest) GetPreviousSceneId() string {
	if x != nil {
		return x.PreviousSceneId
	}
	return ""
}

func (x *EnterSceneRequest) GetEntranceId() string {
	if x != nil {
		return x.EntranceId
	}
	return ""
}

func (x *EnterSceneRequest) GetEntryContext() map[string]string {
	if x != nil {
		return x.EntryContext
	}
	return nil
}

// 进入场景响应
type EnterSceneResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Common         *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	SceneInfo      *SceneInfo             `protobuf:"bytes,2,opt,name=scene_info,json=sceneInfo,proto3" json:"scene_info,omitempty"`
	PlayerPosition *common.Position       `protobuf:"bytes,3,opt,name=player_position,json=playerPosition,proto3" json:"player_position,omitempty"`
	OtherPlayers   []*ScenePlayer         `protobuf:"bytes,4,rep,name=other_players,json=otherPlayers,proto3" json:"other_players,omitempty"`
	SceneObjects   []*SceneObject         `protobuf:"bytes,5,rep,name=scene_objects,json=sceneObjects,proto3" json:"scene_objects,omitempty"`
	Environment    *SceneEnvironment      `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EnterSceneResponse) Reset() {
	*x = EnterSceneResponse{}
	mi := &file_proto_scene_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterSceneResponse) ProtoMessage() {}

func (x *EnterSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterSceneResponse.ProtoReflect.Descriptor instead.
func (*EnterSceneResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{1}
}

func (x *EnterSceneResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *EnterSceneResponse) GetSceneInfo() *SceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

func (x *EnterSceneResponse) GetPlayerPosition() *common.Position {
	if x != nil {
		return x.PlayerPosition
	}
	return nil
}

func (x *EnterSceneResponse) GetOtherPlayers() []*ScenePlayer {
	if x != nil {
		return x.OtherPlayers
	}
	return nil
}

func (x *EnterSceneResponse) GetSceneObjects() []*SceneObject {
	if x != nil {
		return x.SceneObjects
	}
	return nil
}

func (x *EnterSceneResponse) GetEnvironment() *SceneEnvironment {
	if x != nil {
		return x.Environment
	}
	return nil
}

// 离开场景请求
type LeaveSceneRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SceneId       string                 `protobuf:"bytes,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	ExitId        string                 `protobuf:"bytes,3,opt,name=exit_id,json=exitId,proto3" json:"exit_id,omitempty"` // 出口ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveSceneRequest) Reset() {
	*x = LeaveSceneRequest{}
	mi := &file_proto_scene_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveSceneRequest) ProtoMessage() {}

func (x *LeaveSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveSceneRequest.ProtoReflect.Descriptor instead.
func (*LeaveSceneRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveSceneRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LeaveSceneRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *LeaveSceneRequest) GetExitId() string {
	if x != nil {
		return x.ExitId
	}
	return ""
}

// 离开场景响应
type LeaveSceneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveSceneResponse) Reset() {
	*x = LeaveSceneResponse{}
	mi := &file_proto_scene_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveSceneResponse) ProtoMessage() {}

func (x *LeaveSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveSceneResponse.ProtoReflect.Descriptor instead.
func (*LeaveSceneResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{3}
}

func (x *LeaveSceneResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

// 获取场景信息请求
type GetSceneInfoRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SceneId        string                 `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	PlayerId       string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // 查询者ID，用于权限检查
	IncludePlayers bool                   `protobuf:"varint,3,opt,name=include_players,json=includePlayers,proto3" json:"include_players,omitempty"`
	IncludeObjects bool                   `protobuf:"varint,4,opt,name=include_objects,json=includeObjects,proto3" json:"include_objects,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetSceneInfoRequest) Reset() {
	*x = GetSceneInfoRequest{}
	mi := &file_proto_scene_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSceneInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSceneInfoRequest) ProtoMessage() {}

func (x *GetSceneInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSceneInfoRequest.ProtoReflect.Descriptor instead.
func (*GetSceneInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{4}
}

func (x *GetSceneInfoRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *GetSceneInfoRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetSceneInfoRequest) GetIncludePlayers() bool {
	if x != nil {
		return x.IncludePlayers
	}
	return false
}

func (x *GetSceneInfoRequest) GetIncludeObjects() bool {
	if x != nil {
		return x.IncludeObjects
	}
	return false
}

// 获取场景信息响应
type GetSceneInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	SceneInfo     *SceneInfo             `protobuf:"bytes,2,opt,name=scene_info,json=sceneInfo,proto3" json:"scene_info,omitempty"`
	Players       []*ScenePlayer         `protobuf:"bytes,3,rep,name=players,proto3" json:"players,omitempty"`
	Objects       []*SceneObject         `protobuf:"bytes,4,rep,name=objects,proto3" json:"objects,omitempty"`
	Environment   *SceneEnvironment      `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSceneInfoResponse) Reset() {
	*x = GetSceneInfoResponse{}
	mi := &file_proto_scene_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSceneInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSceneInfoResponse) ProtoMessage() {}

func (x *GetSceneInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSceneInfoResponse.ProtoReflect.Descriptor instead.
func (*GetSceneInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{5}
}

func (x *GetSceneInfoResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetSceneInfoResponse) GetSceneInfo() *SceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

func (x *GetSceneInfoResponse) GetPlayers() []*ScenePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GetSceneInfoResponse) GetObjects() []*SceneObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *GetSceneInfoResponse) GetEnvironment() *SceneEnvironment {
	if x != nil {
		return x.Environment
	}
	return nil
}

// 移动到位置请求
type MoveToPositionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PlayerId       string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SceneId        string                 `protobuf:"bytes,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	TargetPosition *common.Position       `protobuf:"bytes,3,opt,name=target_position,json=targetPosition,proto3" json:"target_position,omitempty"`
	MovementType   MovementType           `protobuf:"varint,4,opt,name=movement_type,json=movementType,proto3,enum=greatestworks.scene.MovementType" json:"movement_type,omitempty"`
	Speed          float32                `protobuf:"fixed32,5,opt,name=speed,proto3" json:"speed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MoveToPositionRequest) Reset() {
	*x = MoveToPositionRequest{}
	mi := &file_proto_scene_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveToPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveToPositionRequest) ProtoMessage() {}

func (x *MoveToPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveToPositionRequest.ProtoReflect.Descriptor instead.
func (*MoveToPositionRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{6}
}

func (x *MoveToPositionRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *MoveToPositionRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *MoveToPositionRequest) GetTargetPosition() *common.Position {
	if x != nil {
		return x.TargetPosition
	}
	return nil
}

func (x *MoveToPositionRequest) GetMovementType() MovementType {
	if x != nil {
		return x.MovementType
	}
	return MovementType_MOVEMENT_TYPE_UNSPECIFIED
}

func (x *MoveToPositionRequest) GetSpeed() float32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

// 移动到位置响应
type MoveToPositionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewPosition   *common.Position       `protobuf:"bytes,2,opt,name=new_position,json=newPosition,proto3" json:"new_position,omitempty"`
	ActualSpeed   float32                `protobuf:"fixed32,3,opt,name=actual_speed,json=actualSpeed,proto3" json:"actual_speed,omitempty"`
	MovementTime  int64                  `protobuf:"varint,4,opt,name=movement_time,json=movementTime,proto3" json:"movement_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveToPositionResponse) Reset() {
	*x = MoveToPositionResponse{}
	mi := &file_proto_scene_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveToPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveToPositionResponse) ProtoMessage() {}

func (x *MoveToPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveToPositionResponse.ProtoReflect.Descriptor instead.
func (*MoveToPositionResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{7}
}

func (x *MoveToPositionResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *MoveToPositionResponse) GetNewPosition() *common.Position {
	if x != nil {
		return x.NewPosition
	}
	return nil
}

func (x *MoveToPositionResponse) GetActualSpeed() float32 {
	if x != nil {
		return x.ActualSpeed
	}
	return 0
}

func (x *MoveToPositionResponse) GetMovementTime() int64 {
	if x != nil {
		return x.MovementTime
	}
	return 0
}

// 与对象交互请求
type InteractWithObjectRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SceneId         string                 `protobuf:"bytes,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	ObjectId        string                 `protobuf:"bytes,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	InteractionType InteractionType        `protobuf:"varint,4,opt,name=interaction_type,json=interactionType,proto3,enum=greatestworks.scene.InteractionType" json:"interaction_type,omitempty"`
	Parameters      map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InteractWithObjectRequest) Reset() {
	*x = InteractWithObjectRequest{}
	mi := &file_proto_scene_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractWithObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractWithObjectRequest) ProtoMessage() {}

func (x *InteractWithObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractWithObjectRequest.ProtoReflect.Descriptor instead.
func (*InteractWithObjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{8}
}

func (x *InteractWithObjectRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *InteractWithObjectRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *InteractWithObjectRequest) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *InteractWithObjectRequest) GetInteractionType() InteractionType {
	if x != nil {
		return x.InteractionType
	}
	return InteractionType_INTERACTION_TYPE_UNSPECIFIED
}

func (x *InteractWithObjectRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// 与对象交互响应
type InteractWithObjectResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Common          *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Result          *InteractionResult     `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	TriggeredEvents []*SceneEvent          `protobuf:"bytes,3,rep,name=triggered_events,json=triggeredEvents,proto3" json:"triggered_events,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InteractWithObjectResponse) Reset() {
	*x = InteractWithObjectResponse{}
	mi := &file_proto_scene_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractWithObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractWithObjectResponse) ProtoMessage() {}

func (x *InteractWithObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractWithObjectResponse.ProtoReflect.Descriptor instead.
func (*InteractWithObjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{9}
}

func (x *InteractWithObjectResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *InteractWithObjectResponse) GetResult() *InteractionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *InteractWithObjectResponse) GetTriggeredEvents() []*SceneEvent {
	if x != nil {
		return x.TriggeredEvents
	}
	return nil
}

// 获取场景中玩家列表请求
type GetPlayersInSceneRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SceneId        string                 `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	RequesterId    string                 `protobuf:"bytes,2,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	Limit          int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Radius         float32                `protobuf:"fixed32,5,opt,name=radius,proto3" json:"radius,omitempty"`                                     // 搜索半径（以请求者为中心）
	CenterPosition *common.Position       `protobuf:"bytes,6,opt,name=center_position,json=centerPosition,proto3" json:"center_position,omitempty"` // 搜索中心点
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPlayersInSceneRequest) Reset() {
	*x = GetPlayersInSceneRequest{}
	mi := &file_proto_scene_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayersInSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersInSceneRequest) ProtoMessage() {}

func (x *GetPlayersInSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersInSceneRequest.ProtoReflect.Descriptor instead.
func (*GetPlayersInSceneRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{10}
}

func (x *GetPlayersInSceneRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *GetPlayersInSceneRequest) GetRequesterId() string {
	if x != nil {
		return x.RequesterId
	}
	return ""
}

func (x *GetPlayersInSceneRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetPlayersInSceneRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetPlayersInSceneRequest) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *GetPlayersInSceneRequest) GetCenterPosition() *common.Position {
	if x != nil {
		return x.CenterPosition
	}
	return nil
}

// 获取场景中玩家列表响应
type GetPlayersInSceneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Players       []*ScenePlayer         `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPlayersInSceneResponse) Reset() {
	*x = GetPlayersInSceneResponse{}
	mi := &file_proto_scene_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayersInSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayersInSceneResponse) ProtoMessage() {}

func (x *GetPlayersInSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayersInSceneResponse.ProtoReflect.Descriptor instead.
func (*GetPlayersInSceneResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{11}
}

func (x *GetPlayersInSceneResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetPlayersInSceneResponse) GetPlayers() []*ScenePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GetPlayersInSceneResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 获取场景对象请求
type GetSceneObjectsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SceneId         string                 `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	PlayerId        string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ObjectType      ObjectType             `protobuf:"varint,3,opt,name=object_type,json=objectType,proto3,enum=greatestworks.scene.ObjectType" json:"object_type,omitempty"`
	Radius          float32                `protobuf:"fixed32,4,opt,name=radius,proto3" json:"radius,omitempty"` // 搜索半径
	CenterPosition  *common.Position       `protobuf:"bytes,5,opt,name=center_position,json=centerPosition,proto3" json:"center_position,omitempty"`
	InteractiveOnly bool                   `protobuf:"varint,6,opt,name=interactive_only,json=interactiveOnly,proto3" json:"interactive_only,omitempty"` // 只返回可交互对象
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetSceneObjectsRequest) Reset() {
	*x = GetSceneObjectsRequest{}
	mi := &file_proto_scene_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSceneObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSceneObjectsRequest) ProtoMessage() {}

func (x *GetSceneObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSceneObjectsRequest.ProtoReflect.Descriptor instead.
func (*GetSceneObjectsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{12}
}

func (x *GetSceneObjectsRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *GetSceneObjectsRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetSceneObjectsRequest) GetObjectType() ObjectType {
	if x != nil {
		return x.ObjectType
	}
	return ObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *GetSceneObjectsRequest) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *GetSceneObjectsRequest) GetCenterPosition() *common.Position {
	if x != nil {
		return x.CenterPosition
	}
	return nil
}

func (x *GetSceneObjectsRequest) GetInteractiveOnly() bool {
	if x != nil {
		return x.InteractiveOnly
	}
	return false
}

// 获取场景对象响应
type GetSceneObjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Objects       []*SceneObject         `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSceneObjectsResponse) Reset() {
	*x = GetSceneObjectsResponse{}
	mi := &file_proto_scene_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSceneObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSceneObjectsResponse) ProtoMessage() {}

func (x *GetSceneObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSceneObjectsResponse.ProtoReflect.Descriptor instead.
func (*GetSceneObjectsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{13}
}

func (x *GetSceneObjectsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetSceneObjectsResponse) GetObjects() []*SceneObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

// 触发场景事件请求
type TriggerSceneEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SceneId       string                 `protobuf:"bytes,2,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	TriggerId     string                 `protobuf:"bytes,4,opt,name=trigger_id,json=triggerId,proto3" json:"trigger_id,omitempty"` // 触发器ID
	EventData     map[string]string      `protobuf:"bytes,5,rep,name=event_data,json=eventData,proto3" json:"event_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerSceneEventRequest) Reset() {
	*x = TriggerSceneEventRequest{}
	mi := &file_proto_scene_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerSceneEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerSceneEventRequest) ProtoMessage() {}

func (x *TriggerSceneEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerSceneEventRequest.ProtoReflect.Descriptor instead.
func (*TriggerSceneEventRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{14}
}

func (x *TriggerSceneEventRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *TriggerSceneEventRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *TriggerSceneEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *TriggerSceneEventRequest) GetTriggerId() string {
	if x != nil {
		return x.TriggerId
	}
	return ""
}

func (x *TriggerSceneEventRequest) GetEventData() map[string]string {
	if x != nil {
		return x.EventData
	}
	return nil
}

// 触发场景事件响应
type TriggerSceneEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Event         *SceneEvent            `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Effects       []*SceneEventEffect    `protobuf:"bytes,3,rep,name=effects,proto3" json:"effects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerSceneEventResponse) Reset() {
	*x = TriggerSceneEventResponse{}
	mi := &file_proto_scene_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerSceneEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerSceneEventResponse) ProtoMessage() {}

func (x *TriggerSceneEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerSceneEventResponse.ProtoReflect.Descriptor instead.
func (*TriggerSceneEventResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{15}
}

func (x *TriggerSceneEventResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *TriggerSceneEventResponse) GetEvent() *SceneEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *TriggerSceneEventResponse) GetEffects() []*SceneEventEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

// 获取可用场景列表请求
type GetAvailableScenesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	SceneType     SceneType              `protobuf:"varint,2,opt,name=scene_type,json=sceneType,proto3,enum=greatestworks.scene.SceneType" json:"scene_type,omitempty"`
	MinLevel      int32                  `protobuf:"varint,3,opt,name=min_level,json=minLevel,proto3" json:"min_level,omitempty"`
	MaxLevel      int32                  `protobuf:"varint,4,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	OnlyUnlocked  bool                   `protobuf:"varint,5,opt,name=only_unlocked,json=onlyUnlocked,proto3" json:"only_unlocked,omitempty"`
	Limit         int32                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableScenesRequest) Reset() {
	*x = GetAvailableScenesRequest{}
	mi := &file_proto_scene_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableScenesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableScenesRequest) ProtoMessage() {}

func (x *GetAvailableScenesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableScenesRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableScenesRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{16}
}

func (x *GetAvailableScenesRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetAvailableScenesRequest) GetSceneType() SceneType {
	if x != nil {
		return x.SceneType
	}
	return SceneType_SCENE_TYPE_UNSPECIFIED
}

func (x *GetAvailableScenesRequest) GetMinLevel() int32 {
	if x != nil {
		return x.MinLevel
	}
	return 0
}

func (x *GetAvailableScenesRequest) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *GetAvailableScenesRequest) GetOnlyUnlocked() bool {
	if x != nil {
		return x.OnlyUnlocked
	}
	return false
}

func (x *GetAvailableScenesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAvailableScenesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 获取可用场景列表响应
type GetAvailableScenesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Scenes        []*SceneInfo           `protobuf:"bytes,2,rep,name=scenes,proto3" json:"scenes,omitempty"`
	Pagination    *common.PaginationInfo `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableScenesResponse) Reset() {
	*x = GetAvailableScenesResponse{}
	mi := &file_proto_scene_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableScenesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableScenesResponse) ProtoMessage() {}

func (x *GetAvailableScenesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableScenesResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableScenesResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{17}
}

func (x *GetAvailableScenesResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetAvailableScenesResponse) GetScenes() []*SceneInfo {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *GetAvailableScenesResponse) GetPagination() *common.PaginationInfo {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 传送到场景请求
type TeleportToSceneRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	TargetSceneId   string                 `protobuf:"bytes,2,opt,name=target_scene_id,json=targetSceneId,proto3" json:"target_scene_id,omitempty"`
	TeleportPointId string                 `protobuf:"bytes,3,opt,name=teleport_point_id,json=teleportPointId,proto3" json:"teleport_point_id,omitempty"` // 传送点ID
	UseItem         bool                   `protobuf:"varint,4,opt,name=use_item,json=useItem,proto3" json:"use_item,omitempty"`                          // 是否使用传送道具
	ItemId          string                 `protobuf:"bytes,5,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`                              // 传送道具ID
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TeleportToSceneRequest) Reset() {
	*x = TeleportToSceneRequest{}
	mi := &file_proto_scene_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeleportToSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportToSceneRequest) ProtoMessage() {}

func (x *TeleportToSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportToSceneRequest.ProtoReflect.Descriptor instead.
func (*TeleportToSceneRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{18}
}

func (x *TeleportToSceneRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *TeleportToSceneRequest) GetTargetSceneId() string {
	if x != nil {
		return x.TargetSceneId
	}
	return ""
}

func (x *TeleportToSceneRequest) GetTeleportPointId() string {
	if x != nil {
		return x.TeleportPointId
	}
	return ""
}

func (x *TeleportToSceneRequest) GetUseItem() bool {
	if x != nil {
		return x.UseItem
	}
	return false
}

func (x *TeleportToSceneRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

// 传送到场景响应
type TeleportToSceneResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	TargetSceneId string                 `protobuf:"bytes,2,opt,name=target_scene_id,json=targetSceneId,proto3" json:"target_scene_id,omitempty"`
	SpawnPosition *common.Position       `protobuf:"bytes,3,opt,name=spawn_position,json=spawnPosition,proto3" json:"spawn_position,omitempty"`
	Cost          int32                  `protobuf:"varint,4,opt,name=cost,proto3" json:"cost,omitempty"` // 传送费用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TeleportToSceneResponse) Reset() {
	*x = TeleportToSceneResponse{}
	mi := &file_proto_scene_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeleportToSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportToSceneResponse) ProtoMessage() {}

func (x *TeleportToSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportToSceneResponse.ProtoReflect.Descriptor instead.
func (*TeleportToSceneResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{19}
}

func (x *TeleportToSceneResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *TeleportToSceneResponse) GetTargetSceneId() string {
	if x != nil {
		return x.TargetSceneId
	}
	return ""
}

func (x *TeleportToSceneResponse) GetSpawnPosition() *common.Position {
	if x != nil {
		return x.SpawnPosition
	}
	return nil
}

func (x *TeleportToSceneResponse) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

// 设置天气请求
type SetWeatherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SceneId       string                 `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	AdminId       string                 `protobuf:"bytes,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"` // 管理员ID
	WeatherType   WeatherType            `protobuf:"varint,3,opt,name=weather_type,json=weatherType,proto3,enum=greatestworks.scene.WeatherType" json:"weather_type,omitempty"`
	Intensity     int32                  `protobuf:"varint,4,opt,name=intensity,proto3" json:"intensity,omitempty"` // 强度 (0-100)
	Duration      int32                  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`   // 持续时间（秒）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetWeatherRequest) Reset() {
	*x = SetWeatherRequest{}
	mi := &file_proto_scene_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWeatherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWeatherRequest) ProtoMessage() {}

func (x *SetWeatherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWeatherRequest.ProtoReflect.Descriptor instead.
func (*SetWeatherRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{20}
}

func (x *SetWeatherRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *SetWeatherRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

func (x *SetWeatherRequest) GetWeatherType() WeatherType {
	if x != nil {
		return x.WeatherType
	}
	return WeatherType_WEATHER_TYPE_UNSPECIFIED
}

func (x *SetWeatherRequest) GetIntensity() int32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *SetWeatherRequest) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// 设置天气响应
type SetWeatherResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Common         *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	NewEnvironment *SceneEnvironment      `protobuf:"bytes,2,opt,name=new_environment,json=newEnvironment,proto3" json:"new_environment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SetWeatherResponse) Reset() {
	*x = SetWeatherResponse{}
	mi := &file_proto_scene_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetWeatherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWeatherResponse) ProtoMessage() {}

func (x *SetWeatherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWeatherResponse.ProtoReflect.Descriptor instead.
func (*SetWeatherResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{21}
}

func (x *SetWeatherResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *SetWeatherResponse) GetNewEnvironment() *SceneEnvironment {
	if x != nil {
		return x.NewEnvironment
	}
	return nil
}

// 获取场景统计请求
type GetSceneStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SceneId       string                 `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	AdminId       string                 `protobuf:"bytes,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSceneStatsRequest) Reset() {
	*x = GetSceneStatsRequest{}
	mi := &file_proto_scene_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSceneStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSceneStatsRequest) ProtoMessage() {}

func (x *GetSceneStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSceneStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSceneStatsRequest) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{22}
}

func (x *GetSceneStatsRequest) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *GetSceneStatsRequest) GetAdminId() string {
	if x != nil {
		return x.AdminId
	}
	return ""
}

// 获取场景统计响应
type GetSceneStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Common        *common.CommonResponse `protobuf:"bytes,1,opt,name=common,proto3" json:"common,omitempty"`
	Stats         *SceneStats            `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSceneStatsResponse) Reset() {
	*x = GetSceneStatsResponse{}
	mi := &file_proto_scene_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSceneStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSceneStatsResponse) ProtoMessage() {}

func (x *GetSceneStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSceneStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSceneStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{23}
}

func (x *GetSceneStatsResponse) GetCommon() *common.CommonResponse {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *GetSceneStatsResponse) GetStats() *SceneStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// 场景信息
type SceneInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SceneId        string                 `protobuf:"bytes,1,opt,name=scene_id,json=sceneId,proto3" json:"scene_id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	SceneType      SceneType              `protobuf:"varint,4,opt,name=scene_type,json=sceneType,proto3,enum=greatestworks.scene.SceneType" json:"scene_type,omitempty"`
	Status         SceneStatus            `protobuf:"varint,5,opt,name=status,proto3,enum=greatestworks.scene.SceneStatus" json:"status,omitempty"`
	MinLevel       int32                  `protobuf:"varint,6,opt,name=min_level,json=minLevel,proto3" json:"min_level,omitempty"`
	MaxLevel       int32                  `protobuf:"varint,7,opt,name=max_level,json=maxLevel,proto3" json:"max_level,omitempty"`
	MaxPlayers     int32                  `protobuf:"varint,8,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`
	CurrentPlayers int32                  `protobuf:"varint,9,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`
	SpawnPoint     *common.Position       `protobuf:"bytes,10,opt,name=spawn_point,json=spawnPoint,proto3" json:"spawn_point,omitempty"`
	TeleportPoints []*TeleportPoint       `protobuf:"bytes,11,rep,name=teleport_points,json=teleportPoints,proto3" json:"teleport_points,omitempty"`
	Settings       *SceneSettings         `protobuf:"bytes,12,opt,name=settings,proto3" json:"settings,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUpdated    int64                  `protobuf:"varint,14,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	Version        string                 `protobuf:"bytes,15,opt,name=version,proto3" json:"version,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,16,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SceneInfo) Reset() {
	*x = SceneInfo{}
	mi := &file_proto_scene_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneInfo) ProtoMessage() {}

func (x *SceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneInfo.ProtoReflect.Descriptor instead.
func (*SceneInfo) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{24}
}

func (x *SceneInfo) GetSceneId() string {
	if x != nil {
		return x.SceneId
	}
	return ""
}

func (x *SceneInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SceneInfo) GetSceneType() SceneType {
	if x != nil {
		return x.SceneType
	}
	return SceneType_SCENE_TYPE_UNSPECIFIED
}

func (x *SceneInfo) GetStatus() SceneStatus {
	if x != nil {
		return x.Status
	}
	return SceneStatus_SCENE_STATUS_UNSPECIFIED
}

func (x *SceneInfo) GetMinLevel() int32 {
	if x != nil {
		return x.MinLevel
	}
	return 0
}

func (x *SceneInfo) GetMaxLevel() int32 {
	if x != nil {
		return x.MaxLevel
	}
	return 0
}

func (x *SceneInfo) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *SceneInfo) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *SceneInfo) GetSpawnPoint() *common.Position {
	if x != nil {
		return x.SpawnPoint
	}
	return nil
}

func (x *SceneInfo) GetTeleportPoints() []*TeleportPoint {
	if x != nil {
		return x.TeleportPoints
	}
	return nil
}

func (x *SceneInfo) GetSettings() *SceneSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *SceneInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SceneInfo) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *SceneInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SceneInfo) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 场景玩家
type ScenePlayer struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PlayerId        string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName      string                 `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Level           int32                  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	Position        *common.Position       `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	State           PlayerState            `protobuf:"varint,5,opt,name=state,proto3,enum=greatestworks.scene.PlayerState" json:"state,omitempty"`
	IsVisible       bool                   `protobuf:"varint,6,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	CurrentActivity string                 `protobuf:"bytes,7,opt,name=current_activity,json=currentActivity,proto3" json:"current_activity,omitempty"` // 当前活动
	EnteredAt       int64                  `protobuf:"varint,8,opt,name=entered_at,json=enteredAt,proto3" json:"entered_at,omitempty"`
	LastUpdate      int64                  `protobuf:"varint,9,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	PlayerData      map[string]string      `protobuf:"bytes,10,rep,name=player_data,json=playerData,proto3" json:"player_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ScenePlayer) Reset() {
	*x = ScenePlayer{}
	mi := &file_proto_scene_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScenePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScenePlayer) ProtoMessage() {}

func (x *ScenePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScenePlayer.ProtoReflect.Descriptor instead.
func (*ScenePlayer) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{25}
}

func (x *ScenePlayer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ScenePlayer) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ScenePlayer) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ScenePlayer) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ScenePlayer) GetState() PlayerState {
	if x != nil {
		return x.State
	}
	return PlayerState_PLAYER_STATE_UNSPECIFIED
}

func (x *ScenePlayer) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *ScenePlayer) GetCurrentActivity() string {
	if x != nil {
		return x.CurrentActivity
	}
	return ""
}

func (x *ScenePlayer) GetEnteredAt() int64 {
	if x != nil {
		return x.EnteredAt
	}
	return 0
}

func (x *ScenePlayer) GetLastUpdate() int64 {
	if x != nil {
		return x.LastUpdate
	}
	return 0
}

func (x *ScenePlayer) GetPlayerData() map[string]string {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

// 场景对象
type SceneObject struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ObjectId              string                 `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	Name                  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ObjectType            ObjectType             `protobuf:"varint,3,opt,name=object_type,json=objectType,proto3,enum=greatestworks.scene.ObjectType" json:"object_type,omitempty"`
	State                 ObjectState            `protobuf:"varint,4,opt,name=state,proto3,enum=greatestworks.scene.ObjectState" json:"state,omitempty"`
	Position              *common.Position       `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	RotationY             float32                `protobuf:"fixed32,6,opt,name=rotation_y,json=rotationY,proto3" json:"rotation_y,omitempty"` // Y轴旋转角度
	IsInteractive         bool                   `protobuf:"varint,7,opt,name=is_interactive,json=isInteractive,proto3" json:"is_interactive,omitempty"`
	IsVisible             bool                   `protobuf:"varint,8,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	AvailableInteractions []InteractionType      `protobuf:"varint,9,rep,packed,name=available_interactions,json=availableInteractions,proto3,enum=greatestworks.scene.InteractionType" json:"available_interactions,omitempty"`
	Properties            map[string]string      `protobuf:"bytes,10,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt             int64                  `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUpdated           int64                  `protobuf:"varint,12,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SceneObject) Reset() {
	*x = SceneObject{}
	mi := &file_proto_scene_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneObject) ProtoMessage() {}

func (x *SceneObject) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneObject.ProtoReflect.Descriptor instead.
func (*SceneObject) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{26}
}

func (x *SceneObject) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SceneObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SceneObject) GetObjectType() ObjectType {
	if x != nil {
		return x.ObjectType
	}
	return ObjectType_OBJECT_TYPE_UNSPECIFIED
}

func (x *SceneObject) GetState() ObjectState {
	if x != nil {
		return x.State
	}
	return ObjectState_OBJECT_STATE_UNSPECIFIED
}

func (x *SceneObject) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *SceneObject) GetRotationY() float32 {
	if x != nil {
		return x.RotationY
	}
	return 0
}

func (x *SceneObject) GetIsInteractive() bool {
	if x != nil {
		return x.IsInteractive
	}
	return false
}

func (x *SceneObject) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *SceneObject) GetAvailableInteractions() []InteractionType {
	if x != nil {
		return x.AvailableInteractions
	}
	return nil
}

func (x *SceneObject) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SceneObject) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SceneObject) GetLastUpdated() int64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

// 场景环境
type SceneEnvironment struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Weather          WeatherType            `protobuf:"varint,1,opt,name=weather,proto3,enum=greatestworks.scene.WeatherType" json:"weather,omitempty"`
	WeatherIntensity int32                  `protobuf:"varint,2,opt,name=weather_intensity,json=weatherIntensity,proto3" json:"weather_intensity,omitempty"`
	TimeOfDay        TimeOfDay              `protobuf:"varint,3,opt,name=time_of_day,json=timeOfDay,proto3,enum=greatestworks.scene.TimeOfDay" json:"time_of_day,omitempty"`
	AmbientLight     float32                `protobuf:"fixed32,4,opt,name=ambient_light,json=ambientLight,proto3" json:"ambient_light,omitempty"` // 环境光强度 (0.0-1.0)
	Temperature      float32                `protobuf:"fixed32,5,opt,name=temperature,proto3" json:"temperature,omitempty"`                       // 温度
	Humidity         float32                `protobuf:"fixed32,6,opt,name=humidity,proto3" json:"humidity,omitempty"`                             // 湿度
	BackgroundMusic  string                 `protobuf:"bytes,7,opt,name=background_music,json=backgroundMusic,proto3" json:"background_music,omitempty"`
	Effects          []*EnvironmentalEffect `protobuf:"bytes,8,rep,name=effects,proto3" json:"effects,omitempty"`
	CustomSettings   map[string]string      `protobuf:"bytes,9,rep,name=custom_settings,json=customSettings,proto3" json:"custom_settings,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SceneEnvironment) Reset() {
	*x = SceneEnvironment{}
	mi := &file_proto_scene_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneEnvironment) ProtoMessage() {}

func (x *SceneEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneEnvironment.ProtoReflect.Descriptor instead.
func (*SceneEnvironment) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{27}
}

func (x *SceneEnvironment) GetWeather() WeatherType {
	if x != nil {
		return x.Weather
	}
	return WeatherType_WEATHER_TYPE_UNSPECIFIED
}

func (x *SceneEnvironment) GetWeatherIntensity() int32 {
	if x != nil {
		return x.WeatherIntensity
	}
	return 0
}

func (x *SceneEnvironment) GetTimeOfDay() TimeOfDay {
	if x != nil {
		return x.TimeOfDay
	}
	return TimeOfDay_TIME_OF_DAY_UNSPECIFIED
}

func (x *SceneEnvironment) GetAmbientLight() float32 {
	if x != nil {
		return x.AmbientLight
	}
	return 0
}

func (x *SceneEnvironment) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *SceneEnvironment) GetHumidity() float32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *SceneEnvironment) GetBackgroundMusic() string {
	if x != nil {
		return x.BackgroundMusic
	}
	return ""
}

func (x *SceneEnvironment) GetEffects() []*EnvironmentalEffect {
	if x != nil {
		return x.Effects
	}
	return nil
}

func (x *SceneEnvironment) GetCustomSettings() map[string]string {
	if x != nil {
		return x.CustomSettings
	}
	return nil
}

// 传送点
type TeleportPoint struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PointId           string                 `protobuf:"bytes,1,opt,name=point_id,json=pointId,proto3" json:"point_id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Position          *common.Position       `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	IsActive          bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	RequiresDiscovery bool                   `protobuf:"varint,5,opt,name=requires_discovery,json=requiresDiscovery,proto3" json:"requires_discovery,omitempty"` // 需要发现才能使用
	Cost              int32                  `protobuf:"varint,6,opt,name=cost,proto3" json:"cost,omitempty"`                                                    // 传送费用
	RequiredItems     []string               `protobuf:"bytes,7,rep,name=required_items,json=requiredItems,proto3" json:"required_items,omitempty"`              // 需要的物品
	MinLevel          int32                  `protobuf:"varint,8,opt,name=min_level,json=minLevel,proto3" json:"min_level,omitempty"`                            // 最低等级要求
	Description       string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TeleportPoint) Reset() {
	*x = TeleportPoint{}
	mi := &file_proto_scene_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeleportPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportPoint) ProtoMessage() {}

func (x *TeleportPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportPoint.ProtoReflect.Descriptor instead.
func (*TeleportPoint) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{28}
}

func (x *TeleportPoint) GetPointId() string {
	if x != nil {
		return x.PointId
	}
	return ""
}

func (x *TeleportPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeleportPoint) GetPosition() *common.Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *TeleportPoint) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *TeleportPoint) GetRequiresDiscovery() bool {
	if x != nil {
		return x.RequiresDiscovery
	}
	return false
}

func (x *TeleportPoint) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *TeleportPoint) GetRequiredItems() []string {
	if x != nil {
		return x.RequiredItems
	}
	return nil
}

func (x *TeleportPoint) GetMinLevel() int32 {
	if x != nil {
		return x.MinLevel
	}
	return 0
}

func (x *TeleportPoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 场景设置
type SceneSettings struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PvpEnabled           bool                   `protobuf:"varint,1,opt,name=pvp_enabled,json=pvpEnabled,proto3" json:"pvp_enabled,omitempty"`                                                                                                  // 是否允许PVP
	RespawnEnabled       bool                   `protobuf:"varint,2,opt,name=respawn_enabled,json=respawnEnabled,proto3" json:"respawn_enabled,omitempty"`                                                                                      // 是否允许复活
	RespawnTime          int32                  `protobuf:"varint,3,opt,name=respawn_time,json=respawnTime,proto3" json:"respawn_time,omitempty"`                                                                                               // 复活时间（秒）
	DropItemsOnDeath     bool                   `protobuf:"varint,4,opt,name=drop_items_on_death,json=dropItemsOnDeath,proto3" json:"drop_items_on_death,omitempty"`                                                                            // 死亡是否掉落物品
	ExperienceMultiplier float32                `protobuf:"fixed32,5,opt,name=experience_multiplier,json=experienceMultiplier,proto3" json:"experience_multiplier,omitempty"`                                                                   // 经验倍率
	DropRateMultiplier   float32                `protobuf:"fixed32,6,opt,name=drop_rate_multiplier,json=dropRateMultiplier,proto3" json:"drop_rate_multiplier,omitempty"`                                                                       // 掉落率倍率
	SafeZone             bool                   `protobuf:"varint,7,opt,name=safe_zone,json=safeZone,proto3" json:"safe_zone,omitempty"`                                                                                                        // 是否为安全区
	AllowFlying          bool                   `protobuf:"varint,8,opt,name=allow_flying,json=allowFlying,proto3" json:"allow_flying,omitempty"`                                                                                               // 是否允许飞行
	AllowMount           bool                   `protobuf:"varint,9,opt,name=allow_mount,json=allowMount,proto3" json:"allow_mount,omitempty"`                                                                                                  // 是否允许坐骑
	IdleTimeout          int32                  `protobuf:"varint,10,opt,name=idle_timeout,json=idleTimeout,proto3" json:"idle_timeout,omitempty"`                                                                                              // 闲置超时时间（秒）
	MovementModifiers    map[string]float32     `protobuf:"bytes,11,rep,name=movement_modifiers,json=movementModifiers,proto3" json:"movement_modifiers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // 移动修正器
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SceneSettings) Reset() {
	*x = SceneSettings{}
	mi := &file_proto_scene_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneSettings) ProtoMessage() {}

func (x *SceneSettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneSettings.ProtoReflect.Descriptor instead.
func (*SceneSettings) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{29}
}

func (x *SceneSettings) GetPvpEnabled() bool {
	if x != nil {
		return x.PvpEnabled
	}
	return false
}

func (x *SceneSettings) GetRespawnEnabled() bool {
	if x != nil {
		return x.RespawnEnabled
	}
	return false
}

func (x *SceneSettings) GetRespawnTime() int32 {
	if x != nil {
		return x.RespawnTime
	}
	return 0
}

func (x *SceneSettings) GetDropItemsOnDeath() bool {
	if x != nil {
		return x.DropItemsOnDeath
	}
	return false
}

func (x *SceneSettings) GetExperienceMultiplier() float32 {
	if x != nil {
		return x.ExperienceMultiplier
	}
	return 0
}

func (x *SceneSettings) GetDropRateMultiplier() float32 {
	if x != nil {
		return x.DropRateMultiplier
	}
	return 0
}

func (x *SceneSettings) GetSafeZone() bool {
	if x != nil {
		return x.SafeZone
	}
	return false
}

func (x *SceneSettings) GetAllowFlying() bool {
	if x != nil {
		return x.AllowFlying
	}
	return false
}

func (x *SceneSettings) GetAllowMount() bool {
	if x != nil {
		return x.AllowMount
	}
	return false
}

func (x *SceneSettings) GetIdleTimeout() int32 {
	if x != nil {
		return x.IdleTimeout
	}
	return 0
}

func (x *SceneSettings) GetMovementModifiers() map[string]float32 {
	if x != nil {
		return x.MovementModifiers
	}
	return nil
}

// 场景事件
type SceneEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	EventId           string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventName         string                 `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	EventType         EventType              `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=greatestworks.scene.EventType" json:"event_type,omitempty"`
	TriggerPlayerId   string                 `protobuf:"bytes,4,opt,name=trigger_player_id,json=triggerPlayerId,proto3" json:"trigger_player_id,omitempty"`
	TriggerObjectId   string                 `protobuf:"bytes,5,opt,name=trigger_object_id,json=triggerObjectId,proto3" json:"trigger_object_id,omitempty"`
	Location          *common.Position       `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Timestamp         int64                  `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	EventData         map[string]string      `protobuf:"bytes,8,rep,name=event_data,json=eventData,proto3" json:"event_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	AffectedPlayerIds []string               `protobuf:"bytes,9,rep,name=affected_player_ids,json=affectedPlayerIds,proto3" json:"affected_player_ids,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SceneEvent) Reset() {
	*x = SceneEvent{}
	mi := &file_proto_scene_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneEvent) ProtoMessage() {}

func (x *SceneEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneEvent.ProtoReflect.Descriptor instead.
func (*SceneEvent) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{30}
}

func (x *SceneEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *SceneEvent) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *SceneEvent) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *SceneEvent) GetTriggerPlayerId() string {
	if x != nil {
		return x.TriggerPlayerId
	}
	return ""
}

func (x *SceneEvent) GetTriggerObjectId() string {
	if x != nil {
		return x.TriggerObjectId
	}
	return ""
}

func (x *SceneEvent) GetLocation() *common.Position {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *SceneEvent) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SceneEvent) GetEventData() map[string]string {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *SceneEvent) GetAffectedPlayerIds() []string {
	if x != nil {
		return x.AffectedPlayerIds
	}
	return nil
}

// 场景事件效果
type SceneEventEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EffectId      string                 `protobuf:"bytes,1,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`
	EffectType    EffectType             `protobuf:"varint,2,opt,name=effect_type,json=effectType,proto3,enum=greatestworks.scene.EffectType" json:"effect_type,omitempty"`
	TargetId      string                 `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"` // 目标ID（玩家或对象）
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`                // 持续时间（秒）
	Magnitude     float32                `protobuf:"fixed32,5,opt,name=magnitude,proto3" json:"magnitude,omitempty"`             // 效果强度
	Parameters    map[string]string      `protobuf:"bytes,6,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SceneEventEffect) Reset() {
	*x = SceneEventEffect{}
	mi := &file_proto_scene_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneEventEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneEventEffect) ProtoMessage() {}

func (x *SceneEventEffect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneEventEffect.ProtoReflect.Descriptor instead.
func (*SceneEventEffect) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{31}
}

func (x *SceneEventEffect) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *SceneEventEffect) GetEffectType() EffectType {
	if x != nil {
		return x.EffectType
	}
	return EffectType_EFFECT_TYPE_UNSPECIFIED
}

func (x *SceneEventEffect) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *SceneEventEffect) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *SceneEventEffect) GetMagnitude() float32 {
	if x != nil {
		return x.Magnitude
	}
	return 0
}

func (x *SceneEventEffect) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// 交互结果
type InteractionResult struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Rewards          []*ItemReward          `protobuf:"bytes,3,rep,name=rewards,proto3" json:"rewards,omitempty"`
	ExperienceGained int32                  `protobuf:"varint,4,opt,name=experience_gained,json=experienceGained,proto3" json:"experience_gained,omitempty"`
	NewObjectState   ObjectState            `protobuf:"varint,5,opt,name=new_object_state,json=newObjectState,proto3,enum=greatestworks.scene.ObjectState" json:"new_object_state,omitempty"`
	ResultData       map[string]string      `protobuf:"bytes,6,rep,name=result_data,json=resultData,proto3" json:"result_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InteractionResult) Reset() {
	*x = InteractionResult{}
	mi := &file_proto_scene_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionResult) ProtoMessage() {}

func (x *InteractionResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionResult.ProtoReflect.Descriptor instead.
func (*InteractionResult) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{32}
}

func (x *InteractionResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InteractionResult) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InteractionResult) GetRewards() []*ItemReward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *InteractionResult) GetExperienceGained() int32 {
	if x != nil {
		return x.ExperienceGained
	}
	return 0
}

func (x *InteractionResult) GetNewObjectState() ObjectState {
	if x != nil {
		return x.NewObjectState
	}
	return ObjectState_OBJECT_STATE_UNSPECIFIED
}

func (x *InteractionResult) GetResultData() map[string]string {
	if x != nil {
		return x.ResultData
	}
	return nil
}

// 物品奖励
type ItemReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ItemId        string                 `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	ItemName      string                 `protobuf:"bytes,2,opt,name=item_name,json=itemName,proto3" json:"item_name,omitempty"`
	Quantity      int32                  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Rarity        common.ItemRarity      `protobuf:"varint,4,opt,name=rarity,proto3,enum=greatestworks.common.ItemRarity" json:"rarity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemReward) Reset() {
	*x = ItemReward{}
	mi := &file_proto_scene_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemReward) ProtoMessage() {}

func (x *ItemReward) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemReward.ProtoReflect.Descriptor instead.
func (*ItemReward) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{33}
}

func (x *ItemReward) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemReward) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *ItemReward) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ItemReward) GetRarity() common.ItemRarity {
	if x != nil {
		return x.Rarity
	}
	return common.ItemRarity(0)
}

// 环境效果
type EnvironmentalEffect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EffectId      string                 `protobuf:"bytes,1,opt,name=effect_id,json=effectId,proto3" json:"effect_id,omitempty"`
	EffectType    EffectType             `protobuf:"varint,2,opt,name=effect_type,json=effectType,proto3,enum=greatestworks.scene.EffectType" json:"effect_type,omitempty"`
	Intensity     float32                `protobuf:"fixed32,3,opt,name=intensity,proto3" json:"intensity,omitempty"`
	Duration      int32                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"` // 持续时间（秒），0表示永久
	Parameters    map[string]string      `protobuf:"bytes,5,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentalEffect) Reset() {
	*x = EnvironmentalEffect{}
	mi := &file_proto_scene_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentalEffect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentalEffect) ProtoMessage() {}

func (x *EnvironmentalEffect) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentalEffect.ProtoReflect.Descriptor instead.
func (*EnvironmentalEffect) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{34}
}

func (x *EnvironmentalEffect) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *EnvironmentalEffect) GetEffectType() EffectType {
	if x != nil {
		return x.EffectType
	}
	return EffectType_EFFECT_TYPE_UNSPECIFIED
}

func (x *EnvironmentalEffect) GetIntensity() float32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *EnvironmentalEffect) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *EnvironmentalEffect) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// 场景统计
type SceneStats struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	TotalVisits          int32                  `protobuf:"varint,1,opt,name=total_visits,json=totalVisits,proto3" json:"total_visits,omitempty"`
	UniqueVisitors       int32                  `protobuf:"varint,2,opt,name=unique_visitors,json=uniqueVisitors,proto3" json:"unique_visitors,omitempty"`
	CurrentOnline        int32                  `protobuf:"varint,3,opt,name=current_online,json=currentOnline,proto3" json:"current_online,omitempty"`
	PeakOnline           int32                  `protobuf:"varint,4,opt,name=peak_online,json=peakOnline,proto3" json:"peak_online,omitempty"`
	AverageSessionTime   int64                  `protobuf:"varint,5,opt,name=average_session_time,json=averageSessionTime,proto3" json:"average_session_time,omitempty"`
	TotalInteractions    int32                  `protobuf:"varint,6,opt,name=total_interactions,json=totalInteractions,proto3" json:"total_interactions,omitempty"`
	TotalEventsTriggered int32                  `protobuf:"varint,7,opt,name=total_events_triggered,json=totalEventsTriggered,proto3" json:"total_events_triggered,omitempty"`
	PopularAreas         map[string]int32       `protobuf:"bytes,8,rep,name=popular_areas,json=popularAreas,proto3" json:"popular_areas,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 热门区域访问量
	LastReset            int64                  `protobuf:"varint,9,opt,name=last_reset,json=lastReset,proto3" json:"last_reset,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SceneStats) Reset() {
	*x = SceneStats{}
	mi := &file_proto_scene_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SceneStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneStats) ProtoMessage() {}

func (x *SceneStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_scene_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneStats.ProtoReflect.Descriptor instead.
func (*SceneStats) Descriptor() ([]byte, []int) {
	return file_proto_scene_proto_rawDescGZIP(), []int{35}
}

func (x *SceneStats) GetTotalVisits() int32 {
	if x != nil {
		return x.TotalVisits
	}
	return 0
}

func (x *SceneStats) GetUniqueVisitors() int32 {
	if x != nil {
		return x.UniqueVisitors
	}
	return 0
}

func (x *SceneStats) GetCurrentOnline() int32 {
	if x != nil {
		return x.CurrentOnline
	}
	return 0
}

func (x *SceneStats) GetPeakOnline() int32 {
	if x != nil {
		return x.PeakOnline
	}
	return 0
}

func (x *SceneStats) GetAverageSessionTime() int64 {
	if x != nil {
		return x.AverageSessionTime
	}
	return 0
}

func (x *SceneStats) GetTotalInteractions() int32 {
	if x != nil {
		return x.TotalInteractions
	}
	return 0
}

func (x *SceneStats) GetTotalEventsTriggered() int32 {
	if x != nil {
		return x.TotalEventsTriggered
	}
	return 0
}

func (x *SceneStats) GetPopularAreas() map[string]int32 {
	if x != nil {
		return x.PopularAreas
	}
	return nil
}

func (x *SceneStats) GetLastReset() int64 {
	if x != nil {
		return x.LastReset
	}
	return 0
}

var File_proto_scene_proto protoreflect.FileDescriptor

const file_proto_scene_proto_rawDesc = "" +
	"\n" +
	"\x11proto/scene.proto\x12\x13greatestworks.scene\x1a\x12proto/common.proto\"\xff\x02\n" +
	"\x11EnterSceneRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bscene_id\x18\x02 \x01(\tR\asceneId\x12E\n" +
	"\x0espawn_position\x18\x03 \x01(\v2\x1e.greatestworks.common.PositionR\rspawnPosition\x12*\n" +
	"\x11previous_scene_id\x18\x04 \x01(\tR\x0fpreviousSceneId\x12\x1f\n" +
	"\ventrance_id\x18\x05 \x01(\tR\n" +
	"entranceId\x12]\n" +
	"\rentry_context\x18\x06 \x03(\v28.greatestworks.scene.EnterSceneRequest.EntryContextEntryR\fentryContext\x1a?\n" +
	"\x11EntryContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x03\n" +
	"\x12EnterSceneResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12=\n" +
	"\n" +
	"scene_info\x18\x02 \x01(\v2\x1e.greatestworks.scene.SceneInfoR\tsceneInfo\x12G\n" +
	"\x0fplayer_position\x18\x03 \x01(\v2\x1e.greatestworks.common.PositionR\x0eplayerPosition\x12E\n" +
	"\rother_players\x18\x04 \x03(\v2 .greatestworks.scene.ScenePlayerR\fotherPlayers\x12E\n" +
	"\rscene_objects\x18\x05 \x03(\v2 .greatestworks.scene.SceneObjectR\fsceneObjects\x12G\n" +
	"\venvironment\x18\x06 \x01(\v2%.greatestworks.scene.SceneEnvironmentR\venvironment\"d\n" +
	"\x11LeaveSceneRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bscene_id\x18\x02 \x01(\tR\asceneId\x12\x17\n" +
	"\aexit_id\x18\x03 \x01(\tR\x06exitId\"R\n" +
	"\x12LeaveSceneResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\"\x9f\x01\n" +
	"\x13GetSceneInfoRequest\x12\x19\n" +
	"\bscene_id\x18\x01 \x01(\tR\asceneId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12'\n" +
	"\x0finclude_players\x18\x03 \x01(\bR\x0eincludePlayers\x12'\n" +
	"\x0finclude_objects\x18\x04 \x01(\bR\x0eincludeObjects\"\xd4\x02\n" +
	"\x14GetSceneInfoResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12=\n" +
	"\n" +
	"scene_info\x18\x02 \x01(\v2\x1e.greatestworks.scene.SceneInfoR\tsceneInfo\x12:\n" +
	"\aplayers\x18\x03 \x03(\v2 .greatestworks.scene.ScenePlayerR\aplayers\x12:\n" +
	"\aobjects\x18\x04 \x03(\v2 .greatestworks.scene.SceneObjectR\aobjects\x12G\n" +
	"\venvironment\x18\x05 \x01(\v2%.greatestworks.scene.SceneEnvironmentR\venvironment\"\xf6\x01\n" +
	"\x15MoveToPositionRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bscene_id\x18\x02 \x01(\tR\asceneId\x12G\n" +
	"\x0ftarget_position\x18\x03 \x01(\v2\x1e.greatestworks.common.PositionR\x0etargetPosition\x12F\n" +
	"\rmovement_type\x18\x04 \x01(\x0e2!.greatestworks.scene.MovementTypeR\fmovementType\x12\x14\n" +
	"\x05speed\x18\x05 \x01(\x02R\x05speed\"\xe1\x01\n" +
	"\x16MoveToPositionResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12A\n" +
	"\fnew_position\x18\x02 \x01(\v2\x1e.greatestworks.common.PositionR\vnewPosition\x12!\n" +
	"\factual_speed\x18\x03 \x01(\x02R\vactualSpeed\x12#\n" +
	"\rmovement_time\x18\x04 \x01(\x03R\fmovementTime\"\xe0\x02\n" +
	"\x19InteractWithObjectRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bscene_id\x18\x02 \x01(\tR\asceneId\x12\x1b\n" +
	"\tobject_id\x18\x03 \x01(\tR\bobjectId\x12O\n" +
	"\x10interaction_type\x18\x04 \x01(\x0e2$.greatestworks.scene.InteractionTypeR\x0finteractionType\x12^\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v2>.greatestworks.scene.InteractWithObjectRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe6\x01\n" +
	"\x1aInteractWithObjectResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12>\n" +
	"\x06result\x18\x02 \x01(\v2&.greatestworks.scene.InteractionResultR\x06result\x12J\n" +
	"\x10triggered_events\x18\x03 \x03(\v2\x1f.greatestworks.scene.SceneEventR\x0ftriggeredEvents\"\xe7\x01\n" +
	"\x18GetPlayersInSceneRequest\x12\x19\n" +
	"\bscene_id\x18\x01 \x01(\tR\asceneId\x12!\n" +
	"\frequester_id\x18\x02 \x01(\tR\vrequesterId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\x12\x16\n" +
	"\x06radius\x18\x05 \x01(\x02R\x06radius\x12G\n" +
	"\x0fcenter_position\x18\x06 \x01(\v2\x1e.greatestworks.common.PositionR\x0ecenterPosition\"\xdb\x01\n" +
	"\x19GetPlayersInSceneResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12:\n" +
	"\aplayers\x18\x02 \x03(\v2 .greatestworks.scene.ScenePlayerR\aplayers\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\"\x9e\x02\n" +
	"\x16GetSceneObjectsRequest\x12\x19\n" +
	"\bscene_id\x18\x01 \x01(\tR\asceneId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12@\n" +
	"\vobject_type\x18\x03 \x01(\x0e2\x1f.greatestworks.scene.ObjectTypeR\n" +
	"objectType\x12\x16\n" +
	"\x06radius\x18\x04 \x01(\x02R\x06radius\x12G\n" +
	"\x0fcenter_position\x18\x05 \x01(\v2\x1e.greatestworks.common.PositionR\x0ecenterPosition\x12)\n" +
	"\x10interactive_only\x18\x06 \x01(\bR\x0finteractiveOnly\"\x93\x01\n" +
	"\x17GetSceneObjectsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12:\n" +
	"\aobjects\x18\x02 \x03(\v2 .greatestworks.scene.SceneObjectR\aobjects\"\xa7\x02\n" +
	"\x18TriggerSceneEventRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x19\n" +
	"\bscene_id\x18\x02 \x01(\tR\asceneId\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"trigger_id\x18\x04 \x01(\tR\ttriggerId\x12[\n" +
	"\n" +
	"event_data\x18\x05 \x03(\v2<.greatestworks.scene.TriggerSceneEventRequest.EventDataEntryR\teventData\x1a<\n" +
	"\x0eEventDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd1\x01\n" +
	"\x19TriggerSceneEventResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x125\n" +
	"\x05event\x18\x02 \x01(\v2\x1f.greatestworks.scene.SceneEventR\x05event\x12?\n" +
	"\aeffects\x18\x03 \x03(\v2%.greatestworks.scene.SceneEventEffectR\aeffects\"\x84\x02\n" +
	"\x19GetAvailableScenesRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12=\n" +
	"\n" +
	"scene_type\x18\x02 \x01(\x0e2\x1e.greatestworks.scene.SceneTypeR\tsceneType\x12\x1b\n" +
	"\tmin_level\x18\x03 \x01(\x05R\bminLevel\x12\x1b\n" +
	"\tmax_level\x18\x04 \x01(\x05R\bmaxLevel\x12#\n" +
	"\ronly_unlocked\x18\x05 \x01(\bR\fonlyUnlocked\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\a \x01(\x05R\x06offset\"\xd8\x01\n" +
	"\x1aGetAvailableScenesResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x126\n" +
	"\x06scenes\x18\x02 \x03(\v2\x1e.greatestworks.scene.SceneInfoR\x06scenes\x12D\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v2$.greatestworks.common.PaginationInfoR\n" +
	"pagination\"\xbd\x01\n" +
	"\x16TeleportToSceneRequest\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12&\n" +
	"\x0ftarget_scene_id\x18\x02 \x01(\tR\rtargetSceneId\x12*\n" +
	"\x11teleport_point_id\x18\x03 \x01(\tR\x0fteleportPointId\x12\x19\n" +
	"\buse_item\x18\x04 \x01(\bR\auseItem\x12\x17\n" +
	"\aitem_id\x18\x05 \x01(\tR\x06itemId\"\xda\x01\n" +
	"\x17TeleportToSceneResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12&\n" +
	"\x0ftarget_scene_id\x18\x02 \x01(\tR\rtargetSceneId\x12E\n" +
	"\x0espawn_position\x18\x03 \x01(\v2\x1e.greatestworks.common.PositionR\rspawnPosition\x12\x12\n" +
	"\x04cost\x18\x04 \x01(\x05R\x04cost\"\xc8\x01\n" +
	"\x11SetWeatherRequest\x12\x19\n" +
	"\bscene_id\x18\x01 \x01(\tR\asceneId\x12\x19\n" +
	"\badmin_id\x18\x02 \x01(\tR\aadminId\x12C\n" +
	"\fweather_type\x18\x03 \x01(\x0e2 .greatestworks.scene.WeatherTypeR\vweatherType\x12\x1c\n" +
	"\tintensity\x18\x04 \x01(\x05R\tintensity\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\x05R\bduration\"\xa2\x01\n" +
	"\x12SetWeatherResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x12N\n" +
	"\x0fnew_environment\x18\x02 \x01(\v2%.greatestworks.scene.SceneEnvironmentR\x0enewEnvironment\"L\n" +
	"\x14GetSceneStatsRequest\x12\x19\n" +
	"\bscene_id\x18\x01 \x01(\tR\asceneId\x12\x19\n" +
	"\badmin_id\x18\x02 \x01(\tR\aadminId\"\x8c\x01\n" +
	"\x15GetSceneStatsResponse\x12<\n" +
	"\x06common\x18\x01 \x01(\v2$.greatestworks.common.CommonResponseR\x06common\x125\n" +
	"\x05stats\x18\x02 \x01(\v2\x1f.greatestworks.scene.SceneStatsR\x05stats\"\x8a\x06\n" +
	"\tSceneInfo\x12\x19\n" +
	"\bscene_id\x18\x01 \x01(\tR\asceneId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12=\n" +
	"\n" +
	"scene_type\x18\x04 \x01(\x0e2\x1e.greatestworks.scene.SceneTypeR\tsceneType\x128\n" +
	"\x06status\x18\x05 \x01(\x0e2 .greatestworks.scene.SceneStatusR\x06status\x12\x1b\n" +
	"\tmin_level\x18\x06 \x01(\x05R\bminLevel\x12\x1b\n" +
	"\tmax_level\x18\a \x01(\x05R\bmaxLevel\x12\x1f\n" +
	"\vmax_players\x18\b \x01(\x05R\n" +
	"maxPlayers\x12'\n" +
	"\x0fcurrent_players\x18\t \x01(\x05R\x0ecurrentPlayers\x12?\n" +
	"\vspawn_point\x18\n" +
	" \x01(\v2\x1e.greatestworks.common.PositionR\n" +
	"spawnPoint\x12K\n" +
	"\x0fteleport_points\x18\v \x03(\v2\".greatestworks.scene.TeleportPointR\x0eteleportPoints\x12>\n" +
	"\bsettings\x18\f \x01(\v2\".greatestworks.scene.SceneSettingsR\bsettings\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\x03R\tcreatedAt\x12!\n" +
	"\flast_updated\x18\x0e \x01(\x03R\vlastUpdated\x12\x18\n" +
	"\aversion\x18\x0f \x01(\tR\aversion\x12H\n" +
	"\bmetadata\x18\x10 \x03(\v2,.greatestworks.scene.SceneInfo.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf1\x03\n" +
	"\vScenePlayer\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vplayer_name\x18\x02 \x01(\tR\n" +
	"playerName\x12\x14\n" +
	"\x05level\x18\x03 \x01(\x05R\x05level\x12:\n" +
	"\bposition\x18\x04 \x01(\v2\x1e.greatestworks.common.PositionR\bposition\x126\n" +
	"\x05state\x18\x05 \x01(\x0e2 .greatestworks.scene.PlayerStateR\x05state\x12\x1d\n" +
	"\n" +
	"is_visible\x18\x06 \x01(\bR\tisVisible\x12)\n" +
	"\x10current_activity\x18\a \x01(\tR\x0fcurrentActivity\x12\x1d\n" +
	"\n" +
	"entered_at\x18\b \x01(\x03R\tenteredAt\x12\x1f\n" +
	"\vlast_update\x18\t \x01(\x03R\n" +
	"lastUpdate\x12Q\n" +
	"\vplayer_data\x18\n" +
	" \x03(\v20.greatestworks.scene.ScenePlayer.PlayerDataEntryR\n" +
	"playerData\x1a=\n" +
	"\x0fPlayerDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x05\n" +
	"\vSceneObject\x12\x1b\n" +
	"\tobject_id\x18\x01 \x01(\tR\bobjectId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12@\n" +
	"\vobject_type\x18\x03 \x01(\x0e2\x1f.greatestworks.scene.ObjectTypeR\n" +
	"objectType\x126\n" +
	"\x05state\x18\x04 \x01(\x0e2 .greatestworks.scene.ObjectStateR\x05state\x12:\n" +
	"\bposition\x18\x05 \x01(\v2\x1e.greatestworks.common.PositionR\bposition\x12\x1d\n" +
	"\n" +
	"rotation_y\x18\x06 \x01(\x02R\trotationY\x12%\n" +
	"\x0eis_interactive\x18\a \x01(\bR\risInteractive\x12\x1d\n" +
	"\n" +
	"is_visible\x18\b \x01(\bR\tisVisible\x12[\n" +
	"\x16available_interactions\x18\t \x03(\x0e2$.greatestworks.scene.InteractionTypeR\x15availableInteractions\x12P\n" +
	"\n" +
	"properties\x18\n" +
	" \x03(\v20.greatestworks.scene.SceneObject.PropertiesEntryR\n" +
	"properties\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\x03R\tcreatedAt\x12!\n" +
	"\flast_updated\x18\f \x01(\x03R\vlastUpdated\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x04\n" +
	"\x10SceneEnvironment\x12:\n" +
	"\aweather\x18\x01 \x01(\x0e2 .greatestworks.scene.WeatherTypeR\aweather\x12+\n" +
	"\x11weather_intensity\x18\x02 \x01(\x05R\x10weatherIntensity\x12>\n" +
	"\vtime_of_day\x18\x03 \x01(\x0e2\x1e.greatestworks.scene.TimeOfDayR\ttimeOfDay\x12#\n" +
	"\rambient_light\x18\x04 \x01(\x02R\fambientLight\x12 \n" +
	"\vtemperature\x18\x05 \x01(\x02R\vtemperature\x12\x1a\n" +
	"\bhumidity\x18\x06 \x01(\x02R\bhumidity\x12)\n" +
	"\x10background_music\x18\a \x01(\tR\x0fbackgroundMusic\x12B\n" +
	"\aeffects\x18\b \x03(\v2(.greatestworks.scene.EnvironmentalEffectR\aeffects\x12b\n" +
	"\x0fcustom_settings\x18\t \x03(\v29.greatestworks.scene.SceneEnvironment.CustomSettingsEntryR\x0ecustomSettings\x1aA\n" +
	"\x13CustomSettingsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc0\x02\n" +
	"\rTeleportPoint\x12\x19\n" +
	"\bpoint_id\x18\x01 \x01(\tR\apointId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12:\n" +
	"\bposition\x18\x03 \x01(\v2\x1e.greatestworks.common.PositionR\bposition\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\x12-\n" +
	"\x12requires_discovery\x18\x05 \x01(\bR\x11requiresDiscovery\x12\x12\n" +
	"\x04cost\x18\x06 \x01(\x05R\x04cost\x12%\n" +
	"\x0erequired_items\x18\a \x03(\tR\rrequiredItems\x12\x1b\n" +
	"\tmin_level\x18\b \x01(\x05R\bminLevel\x12 \n" +
	"\vdescription\x18\t \x01(\tR\vdescription\"\xc6\x04\n" +
	"\rSceneSettings\x12\x1f\n" +
	"\vpvp_enabled\x18\x01 \x01(\bR\n" +
	"pvpEnabled\x12'\n" +
	"\x0frespawn_enabled\x18\x02 \x01(\bR\x0erespawnEnabled\x12!\n" +
	"\frespawn_time\x18\x03 \x01(\x05R\vrespawnTime\x12-\n" +
	"\x13drop_items_on_death\x18\x04 \x01(\bR\x10dropItemsOnDeath\x123\n" +
	"\x15experience_multiplier\x18\x05 \x01(\x02R\x14experienceMultiplier\x120\n" +
	"\x14drop_rate_multiplier\x18\x06 \x01(\x02R\x12dropRateMultiplier\x12\x1b\n" +
	"\tsafe_zone\x18\a \x01(\bR\bsafeZone\x12!\n" +
	"\fallow_flying\x18\b \x01(\bR\vallowFlying\x12\x1f\n" +
	"\vallow_mount\x18\t \x01(\bR\n" +
	"allowMount\x12!\n" +
	"\fidle_timeout\x18\n" +
	" \x01(\x05R\vidleTimeout\x12h\n" +
	"\x12movement_modifiers\x18\v \x03(\v29.greatestworks.scene.SceneSettings.MovementModifiersEntryR\x11movementModifiers\x1aD\n" +
	"\x16MovementModifiersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"\xf4\x03\n" +
	"\n" +
	"SceneEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_name\x18\x02 \x01(\tR\teventName\x12=\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2\x1e.greatestworks.scene.EventTypeR\teventType\x12*\n" +
	"\x11trigger_player_id\x18\x04 \x01(\tR\x0ftriggerPlayerId\x12*\n" +
	"\x11trigger_object_id\x18\x05 \x01(\tR\x0ftriggerObjectId\x12:\n" +
	"\blocation\x18\x06 \x01(\v2\x1e.greatestworks.common.PositionR\blocation\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\x03R\ttimestamp\x12M\n" +
	"\n" +
	"event_data\x18\b \x03(\v2..greatestworks.scene.SceneEvent.EventDataEntryR\teventData\x12.\n" +
	"\x13affected_player_ids\x18\t \x03(\tR\x11affectedPlayerIds\x1a<\n" +
	"\x0eEventDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xde\x02\n" +
	"\x10SceneEventEffect\x12\x1b\n" +
	"\teffect_id\x18\x01 \x01(\tR\beffectId\x12@\n" +
	"\veffect_type\x18\x02 \x01(\x0e2\x1f.greatestworks.scene.EffectTypeR\n" +
	"effectType\x12\x1b\n" +
	"\ttarget_id\x18\x03 \x01(\tR\btargetId\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\x12\x1c\n" +
	"\tmagnitude\x18\x05 \x01(\x02R\tmagnitude\x12U\n" +
	"\n" +
	"parameters\x18\x06 \x03(\v25.greatestworks.scene.SceneEventEffect.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x03\n" +
	"\x11InteractionResult\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\arewards\x18\x03 \x03(\v2\x1f.greatestworks.scene.ItemRewardR\arewards\x12+\n" +
	"\x11experience_gained\x18\x04 \x01(\x05R\x10experienceGained\x12J\n" +
	"\x10new_object_state\x18\x05 \x01(\x0e2 .greatestworks.scene.ObjectStateR\x0enewObjectState\x12W\n" +
	"\vresult_data\x18\x06 \x03(\v26.greatestworks.scene.InteractionResult.ResultDataEntryR\n" +
	"resultData\x1a=\n" +
	"\x0fResultDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x98\x01\n" +
	"\n" +
	"ItemReward\x12\x17\n" +
	"\aitem_id\x18\x01 \x01(\tR\x06itemId\x12\x1b\n" +
	"\titem_name\x18\x02 \x01(\tR\bitemName\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x05R\bquantity\x128\n" +
	"\x06rarity\x18\x04 \x01(\x0e2 .greatestworks.common.ItemRarityR\x06rarity\"\xc7\x02\n" +
	"\x13EnvironmentalEffect\x12\x1b\n" +
	"\teffect_id\x18\x01 \x01(\tR\beffectId\x12@\n" +
	"\veffect_type\x18\x02 \x01(\x0e2\x1f.greatestworks.scene.EffectTypeR\n" +
	"effectType\x12\x1c\n" +
	"\tintensity\x18\x03 \x01(\x02R\tintensity\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x05R\bduration\x12X\n" +
	"\n" +
	"parameters\x18\x05 \x03(\v28.greatestworks.scene.EnvironmentalEffect.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xef\x03\n" +
	"\n" +
	"SceneStats\x12!\n" +
	"\ftotal_visits\x18\x01 \x01(\x05R\vtotalVisits\x12'\n" +
	"\x0funique_visitors\x18\x02 \x01(\x05R\x0euniqueVisitors\x12%\n" +
	"\x0ecurrent_online\x18\x03 \x01(\x05R\rcurrentOnline\x12\x1f\n" +
	"\vpeak_online\x18\x04 \x01(\x05R\n" +
	"peakOnline\x120\n" +
	"\x14average_session_time\x18\x05 \x01(\x03R\x12averageSessionTime\x12-\n" +
	"\x12total_interactions\x18\x06 \x01(\x05R\x11totalInteractions\x124\n" +
	"\x16total_events_triggered\x18\a \x01(\x05R\x14totalEventsTriggered\x12V\n" +
	"\rpopular_areas\x18\b \x03(\v21.greatestworks.scene.SceneStats.PopularAreasEntryR\fpopularAreas\x12\x1d\n" +
	"\n" +
	"last_reset\x18\t \x01(\x03R\tlastReset\x1a?\n" +
	"\x11PopularAreasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01*\x98\x02\n" +
	"\tSceneType\x12\x1a\n" +
	"\x16SCENE_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fSCENE_TYPE_TOWN\x10\x01\x12\x16\n" +
	"\x12SCENE_TYPE_DUNGEON\x10\x02\x12\x19\n" +
	"\x15SCENE_TYPE_WILDERNESS\x10\x03\x12\x1b\n" +
	"\x17SCENE_TYPE_BATTLE_ARENA\x10\x04\x12\x17\n" +
	"\x13SCENE_TYPE_INSTANCE\x10\x05\x12\x19\n" +
	"\x15SCENE_TYPE_GUILD_HALL\x10\x06\x12\x1b\n" +
	"\x17SCENE_TYPE_PRIVATE_ROOM\x10\a\x12\x19\n" +
	"\x15SCENE_TYPE_EVENT_AREA\x10\b\x12\x1e\n" +
	"\x1aSCENE_TYPE_TRAINING_GROUND\x10\t*\xac\x01\n" +
	"\vSceneStatus\x12\x1c\n" +
	"\x18SCENE_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13SCENE_STATUS_ACTIVE\x10\x01\x12\x1c\n" +
	"\x18SCENE_STATUS_MAINTENANCE\x10\x02\x12\x17\n" +
	"\x13SCENE_STATUS_CLOSED\x10\x03\x12\x15\n" +
	"\x11SCENE_STATUS_FULL\x10\x04\x12\x18\n" +
	"\x14SCENE_STATUS_LOADING\x10\x05*\xde\x01\n" +
	"\vPlayerState\x12\x1c\n" +
	"\x18PLAYER_STATE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11PLAYER_STATE_IDLE\x10\x01\x12\x17\n" +
	"\x13PLAYER_STATE_MOVING\x10\x02\x12\x1c\n" +
	"\x18PLAYER_STATE_INTERACTING\x10\x03\x12\x17\n" +
	"\x13PLAYER_STATE_COMBAT\x10\x04\x12\x18\n" +
	"\x14PLAYER_STATE_TRADING\x10\x05\x12\x14\n" +
	"\x10PLAYER_STATE_AFK\x10\x06\x12\x1a\n" +
	"\x16PLAYER_STATE_INVISIBLE\x10\a*\xc7\x02\n" +
	"\n" +
	"ObjectType\x12\x1b\n" +
	"\x17OBJECT_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fOBJECT_TYPE_NPC\x10\x01\x12\x14\n" +
	"\x10OBJECT_TYPE_ITEM\x10\x02\x12\x15\n" +
	"\x11OBJECT_TYPE_CHEST\x10\x03\x12\x14\n" +
	"\x10OBJECT_TYPE_DOOR\x10\x04\x12\x16\n" +
	"\x12OBJECT_TYPE_PORTAL\x10\x05\x12\x14\n" +
	"\x10OBJECT_TYPE_SIGN\x10\x06\x12\x1a\n" +
	"\x16OBJECT_TYPE_DECORATION\x10\a\x12\x19\n" +
	"\x15OBJECT_TYPE_FURNITURE\x10\b\x12\x17\n" +
	"\x13OBJECT_TYPE_VEHICLE\x10\t\x12\x18\n" +
	"\x14OBJECT_TYPE_RESOURCE\x10\n" +
	"\x12\x14\n" +
	"\x10OBJECT_TYPE_TRAP\x10\v\x12\x16\n" +
	"\x12OBJECT_TYPE_SWITCH\x10\f*\xc6\x01\n" +
	"\vObjectState\x12\x1c\n" +
	"\x18OBJECT_STATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13OBJECT_STATE_NORMAL\x10\x01\x12\x1a\n" +
	"\x16OBJECT_STATE_ACTIVATED\x10\x02\x12\x19\n" +
	"\x15OBJECT_STATE_DISABLED\x10\x03\x12\x17\n" +
	"\x13OBJECT_STATE_BROKEN\x10\x04\x12\x17\n" +
	"\x13OBJECT_STATE_LOCKED\x10\x05\x12\x17\n" +
	"\x13OBJECT_STATE_HIDDEN\x10\x06*\xd2\x02\n" +
	"\x0fInteractionType\x12 \n" +
	"\x1cINTERACTION_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15INTERACTION_TYPE_TALK\x10\x01\x12\x18\n" +
	"\x14INTERACTION_TYPE_USE\x10\x02\x12\x1c\n" +
	"\x18INTERACTION_TYPE_EXAMINE\x10\x03\x12\x19\n" +
	"\x15INTERACTION_TYPE_OPEN\x10\x04\x12\x1a\n" +
	"\x16INTERACTION_TYPE_CLOSE\x10\x05\x12\x1b\n" +
	"\x17INTERACTION_TYPE_PICKUP\x10\x06\x12\x1d\n" +
	"\x19INTERACTION_TYPE_ACTIVATE\x10\a\x12\x1b\n" +
	"\x17INTERACTION_TYPE_REPAIR\x10\b\x12\x1c\n" +
	"\x18INTERACTION_TYPE_UPGRADE\x10\t\x12\x1c\n" +
	"\x18INTERACTION_TYPE_DESTROY\x10\n" +
	"*\xc0\x01\n" +
	"\fMovementType\x12\x1d\n" +
	"\x19MOVEMENT_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12MOVEMENT_TYPE_WALK\x10\x01\x12\x15\n" +
	"\x11MOVEMENT_TYPE_RUN\x10\x02\x12\x1a\n" +
	"\x16MOVEMENT_TYPE_TELEPORT\x10\x03\x12\x15\n" +
	"\x11MOVEMENT_TYPE_FLY\x10\x04\x12\x16\n" +
	"\x12MOVEMENT_TYPE_SWIM\x10\x05\x12\x17\n" +
	"\x13MOVEMENT_TYPE_MOUNT\x10\x06*\xd5\x01\n" +
	"\vWeatherType\x12\x1c\n" +
	"\x18WEATHER_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12WEATHER_TYPE_CLEAR\x10\x01\x12\x17\n" +
	"\x13WEATHER_TYPE_CLOUDY\x10\x02\x12\x16\n" +
	"\x12WEATHER_TYPE_RAINY\x10\x03\x12\x17\n" +
	"\x13WEATHER_TYPE_STORMY\x10\x04\x12\x16\n" +
	"\x12WEATHER_TYPE_SNOWY\x10\x05\x12\x16\n" +
	"\x12WEATHER_TYPE_FOGGY\x10\x06\x12\x16\n" +
	"\x12WEATHER_TYPE_WINDY\x10\a*\xd2\x01\n" +
	"\tTimeOfDay\x12\x1b\n" +
	"\x17TIME_OF_DAY_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TIME_OF_DAY_DAWN\x10\x01\x12\x17\n" +
	"\x13TIME_OF_DAY_MORNING\x10\x02\x12\x14\n" +
	"\x10TIME_OF_DAY_NOON\x10\x03\x12\x19\n" +
	"\x15TIME_OF_DAY_AFTERNOON\x10\x04\x12\x17\n" +
	"\x13TIME_OF_DAY_EVENING\x10\x05\x12\x15\n" +
	"\x11TIME_OF_DAY_NIGHT\x10\x06\x12\x18\n" +
	"\x14TIME_OF_DAY_MIDNIGHT\x10\a*\xd4\x02\n" +
	"\tEventType\x12\x1a\n" +
	"\x16EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17EVENT_TYPE_PLAYER_ENTER\x10\x01\x12\x1b\n" +
	"\x17EVENT_TYPE_PLAYER_LEAVE\x10\x02\x12!\n" +
	"\x1dEVENT_TYPE_OBJECT_INTERACTION\x10\x03\x12\x1b\n" +
	"\x17EVENT_TYPE_COMBAT_START\x10\x04\x12\x19\n" +
	"\x15EVENT_TYPE_COMBAT_END\x10\x05\x12\x1a\n" +
	"\x16EVENT_TYPE_ITEM_PICKUP\x10\x06\x12\x1c\n" +
	"\x18EVENT_TYPE_QUEST_TRIGGER\x10\a\x12!\n" +
	"\x1dEVENT_TYPE_ACHIEVEMENT_UNLOCK\x10\b\x12\x1d\n" +
	"\x19EVENT_TYPE_WEATHER_CHANGE\x10\t\x12\x1a\n" +
	"\x16EVENT_TYPE_TIME_CHANGE\x10\n" +
	"*\xa3\x02\n" +
	"\n" +
	"EffectType\x12\x1b\n" +
	"\x17EFFECT_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10EFFECT_TYPE_BUFF\x10\x01\x12\x16\n" +
	"\x12EFFECT_TYPE_DEBUFF\x10\x02\x12\x16\n" +
	"\x12EFFECT_TYPE_DAMAGE\x10\x03\x12\x14\n" +
	"\x10EFFECT_TYPE_HEAL\x10\x04\x12\x18\n" +
	"\x14EFFECT_TYPE_TELEPORT\x10\x05\x12\x19\n" +
	"\x15EFFECT_TYPE_TRANSFORM\x10\x06\x12\x1c\n" +
	"\x18EFFECT_TYPE_INVISIBILITY\x10\a\x12\x1b\n" +
	"\x17EFFECT_TYPE_SPEED_BOOST\x10\b\x12\x16\n" +
	"\x12EFFECT_TYPE_SHIELD\x10\t\x12\x14\n" +
	"\x10EFFECT_TYPE_STUN\x10\n" +
	"2\x95\n" +
	"\n" +
	"\fSceneService\x12]\n" +
	"\n" +
	"EnterScene\x12&.greatestworks.scene.EnterSceneRequest\x1a'.greatestworks.scene.EnterSceneResponse\x12]\n" +
	"\n" +
	"LeaveScene\x12&.greatestworks.scene.LeaveSceneRequest\x1a'.greatestworks.scene.LeaveSceneResponse\x12c\n" +
	"\fGetSceneInfo\x12(.greatestworks.scene.GetSceneInfoRequest\x1a).greatestworks.scene.GetSceneInfoResponse\x12i\n" +
	"\x0eMoveToPosition\x12*.greatestworks.scene.MoveToPositionRequest\x1a+.greatestworks.scene.MoveToPositionResponse\x12u\n" +
	"\x12InteractWithObject\x12..greatestworks.scene.InteractWithObjectRequest\x1a/.greatestworks.scene.InteractWithObjectResponse\x12r\n" +
	"\x11GetPlayersInScene\x12-.greatestworks.scene.GetPlayersInSceneRequest\x1a..greatestworks.scene.GetPlayersInSceneResponse\x12l\n" +
	"\x0fGetSceneObjects\x12+.greatestworks.scene.GetSceneObjectsRequest\x1a,.greatestworks.scene.GetSceneObjectsResponse\x12r\n" +
	"\x11TriggerSceneEvent\x12-.greatestworks.scene.TriggerSceneEventRequest\x1a..greatestworks.scene.TriggerSceneEventResponse\x12u\n" +
	"\x12GetAvailableScenes\x12..greatestworks.scene.GetAvailableScenesRequest\x1a/.greatestworks.scene.GetAvailableScenesResponse\x12l\n" +
	"\x0fTeleportToScene\x12+.greatestworks.scene.TeleportToSceneRequest\x1a,.greatestworks.scene.TeleportToSceneResponse\x12]\n" +
	"\n" +
	"SetWeather\x12&.greatestworks.scene.SetWeatherRequest\x1a'.greatestworks.scene.SetWeatherResponse\x12f\n" +
	"\rGetSceneStats\x12).greatestworks.scene.GetSceneStatsRequest\x1a*.greatestworks.scene.GetSceneStatsResponseB:Z\"greatestworks/internal/proto/scene\xaa\x02\x13GreatestWorks.Sceneb\x06proto3"

var (
	file_proto_scene_proto_rawDescOnce sync.Once
	file_proto_scene_proto_rawDescData []byte
)

func file_proto_scene_proto_rawDescGZIP() []byte {
	file_proto_scene_proto_rawDescOnce.Do(func() {
		file_proto_scene_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_scene_proto_rawDesc), len(file_proto_scene_proto_rawDesc)))
	})
	return file_proto_scene_proto_rawDescData
}

var file_proto_scene_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_proto_scene_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_proto_scene_proto_goTypes = []any{
	(SceneType)(0),                     // 0: greatestworks.scene.SceneType
	(SceneStatus)(0),                   // 1: greatestworks.scene.SceneStatus
	(PlayerState)(0),                   // 2: greatestworks.scene.PlayerState
	(ObjectType)(0),                    // 3: greatestworks.scene.ObjectType
	(ObjectState)(0),                   // 4: greatestworks.scene.ObjectState
	(InteractionType)(0),               // 5: greatestworks.scene.InteractionType
	(MovementType)(0),                  // 6: greatestworks.scene.MovementType
	(WeatherType)(0),                   // 7: greatestworks.scene.WeatherType
	(TimeOfDay)(0),                     // 8: greatestworks.scene.TimeOfDay
	(EventType)(0),                     // 9: greatestworks.scene.EventType
	(EffectType)(0),                    // 10: greatestworks.scene.EffectType
	(*EnterSceneRequest)(nil),          // 11: greatestworks.scene.EnterSceneRequest
	(*EnterSceneResponse)(nil),         // 12: greatestworks.scene.EnterSceneResponse
	(*LeaveSceneRequest)(nil),          // 13: greatestworks.scene.LeaveSceneRequest
	(*LeaveSceneResponse)(nil),         // 14: greatestworks.scene.LeaveSceneResponse
	(*GetSceneInfoRequest)(nil),        // 15: greatestworks.scene.GetSceneInfoRequest
	(*GetSceneInfoResponse)(nil),       // 16: greatestworks.scene.GetSceneInfoResponse
	(*MoveToPositionRequest)(nil),      // 17: greatestworks.scene.MoveToPositionRequest
	(*MoveToPositionResponse)(nil),     // 18: greatestworks.scene.MoveToPositionResponse
	(*InteractWithObjectRequest)(nil),  // 19: greatestworks.scene.InteractWithObjectRequest
	(*InteractWithObjectResponse)(nil), // 20: greatestworks.scene.InteractWithObjectResponse
	(*GetPlayersInSceneRequest)(nil),   // 21: greatestworks.scene.GetPlayersInSceneRequest
	(*GetPlayersInSceneResponse)(nil),  // 22: greatestworks.scene.GetPlayersInSceneResponse
	(*GetSceneObjectsRequest)(nil),     // 23: greatestworks.scene.GetSceneObjectsRequest
	(*GetSceneObjectsResponse)(nil),    // 24: greatestworks.scene.GetSceneObjectsResponse
	(*TriggerSceneEventRequest)(nil),   // 25: greatestworks.scene.TriggerSceneEventRequest
	(*TriggerSceneEventResponse)(nil),  // 26: greatestworks.scene.TriggerSceneEventResponse
	(*GetAvailableScenesRequest)(nil),  // 27: greatestworks.scene.GetAvailableScenesRequest
	(*GetAvailableScenesResponse)(nil), // 28: greatestworks.scene.GetAvailableScenesResponse
	(*TeleportToSceneRequest)(nil),     // 29: greatestworks.scene.TeleportToSceneRequest
	(*TeleportToSceneResponse)(nil),    // 30: greatestworks.scene.TeleportToSceneResponse
	(*SetWeatherRequest)(nil),          // 31: greatestworks.scene.SetWeatherRequest
	(*SetWeatherResponse)(nil),         // 32: greatestworks.scene.SetWeatherResponse
	(*GetSceneStatsRequest)(nil),       // 33: greatestworks.scene.GetSceneStatsRequest
	(*GetSceneStatsResponse)(nil),      // 34: greatestworks.scene.GetSceneStatsResponse
	(*SceneInfo)(nil),                  // 35: greatestworks.scene.SceneInfo
	(*ScenePlayer)(nil),                // 36: greatestworks.scene.ScenePlayer
	(*SceneObject)(nil),                // 37: greatestworks.scene.SceneObject
	(*SceneEnvironment)(nil),           // 38: greatestworks.scene.SceneEnvironment
	(*TeleportPoint)(nil),              // 39: greatestworks.scene.TeleportPoint
	(*SceneSettings)(nil),              // 40: greatestworks.scene.SceneSettings
	(*SceneEvent)(nil),                 // 41: greatestworks.scene.SceneEvent
	(*SceneEventEffect)(nil),           // 42: greatestworks.scene.SceneEventEffect
	(*InteractionResult)(nil),          // 43: greatestworks.scene.InteractionResult
	(*ItemReward)(nil),                 // 44: greatestworks.scene.ItemReward
	(*EnvironmentalEffect)(nil),        // 45: greatestworks.scene.EnvironmentalEffect
	(*SceneStats)(nil),                 // 46: greatestworks.scene.SceneStats
	nil,                                // 47: greatestworks.scene.EnterSceneRequest.EntryContextEntry
	nil,                                // 48: greatestworks.scene.InteractWithObjectRequest.ParametersEntry
	nil,                                // 49: greatestworks.scene.TriggerSceneEventRequest.EventDataEntry
	nil,                                // 50: greatestworks.scene.SceneInfo.MetadataEntry
	nil,                                // 51: greatestworks.scene.ScenePlayer.PlayerDataEntry
	nil,                                // 52: greatestworks.scene.SceneObject.PropertiesEntry
	nil,                                // 53: greatestworks.scene.SceneEnvironment.CustomSettingsEntry
	nil,                                // 54: greatestworks.scene.SceneSettings.MovementModifiersEntry
	nil,                                // 55: greatestworks.scene.SceneEvent.EventDataEntry
	nil,                                // 56: greatestworks.scene.SceneEventEffect.ParametersEntry
	nil,                                // 57: greatestworks.scene.InteractionResult.ResultDataEntry
	nil,                                // 58: greatestworks.scene.EnvironmentalEffect.ParametersEntry
	nil,                                // 59: greatestworks.scene.SceneStats.PopularAreasEntry
	(*common.Position)(nil),            // 60: greatestworks.common.Position
	(*common.CommonResponse)(nil),      // 61: greatestworks.common.CommonResponse
	(*common.PaginationInfo)(nil),      // 62: greatestworks.common.PaginationInfo
	(common.ItemRarity)(0),             // 63: greatestworks.common.ItemRarity
}
var file_proto_scene_proto_depIdxs = []int32{
	60, // 0: greatestworks.scene.EnterSceneRequest.spawn_position:type_name -> greatestworks.common.Position
	47, // 1: greatestworks.scene.EnterSceneRequest.entry_context:type_name -> greatestworks.scene.EnterSceneRequest.EntryContextEntry
	61, // 2: greatestworks.scene.EnterSceneResponse.common:type_name -> greatestworks.common.CommonResponse
	35, // 3: greatestworks.scene.EnterSceneResponse.scene_info:type_name -> greatestworks.scene.SceneInfo
	60, // 4: greatestworks.scene.EnterSceneResponse.player_position:type_name -> greatestworks.common.Position
	36, // 5: greatestworks.scene.EnterSceneResponse.other_players:type_name -> greatestworks.scene.ScenePlayer
	37, // 6: greatestworks.scene.EnterSceneResponse.scene_objects:type_name -> greatestworks.scene.SceneObject
	38, // 7: greatestworks.scene.EnterSceneResponse.environment:type_name -> greatestworks.scene.SceneEnvironment
	61, // 8: greatestworks.scene.LeaveSceneResponse.common:type_name -> greatestworks.common.CommonResponse
	61, // 9: greatestworks.scene.GetSceneInfoResponse.common:type_name -> greatestworks.common.CommonResponse
	35, // 10: greatestworks.scene.GetSceneInfoResponse.scene_info:type_name -> greatestworks.scene.SceneInfo
	36, // 11: greatestworks.scene.GetSceneInfoResponse.players:type_name -> greatestworks.scene.ScenePlayer
	37, // 12: greatestworks.scene.GetSceneInfoResponse.objects:type_name -> greatestworks.scene.SceneObject
	38, // 13: greatestworks.scene.GetSceneInfoResponse.environment:type_name -> greatestworks.scene.SceneEnvironment
	60, // 14: greatestworks.scene.MoveToPositionRequest.target_position:type_name -> greatestworks.common.Position
	6,  // 15: greatestworks.scene.MoveToPositionRequest.movement_type:type_name -> greatestworks.scene.MovementType
	61, // 16: greatestworks.scene.MoveToPositionResponse.common:type_name -> greatestworks.common.CommonResponse
	60, // 17: greatestworks.scene.MoveToPositionResponse.new_position:type_name -> greatestworks.common.Position
	5,  // 18: greatestworks.scene.InteractWithObjectRequest.interaction_type:type_name -> greatestworks.scene.InteractionType
	48, // 19: greatestworks.scene.InteractWithObjectRequest.parameters:type_name -> greatestworks.scene.InteractWithObjectRequest.ParametersEntry
	61, // 20: greatestworks.scene.InteractWithObjectResponse.common:type_name -> greatestworks.common.CommonResponse
	43, // 21: greatestworks.scene.InteractWithObjectResponse.result:type_name -> greatestworks.scene.InteractionResult
	41, // 22: greatestworks.scene.InteractWithObjectResponse.triggered_events:type_name -> greatestworks.scene.SceneEvent
	60, // 23: greatestworks.scene.GetPlayersInSceneRequest.center_position:type_name -> greatestworks.common.Position
	61, // 24: greatestworks.scene.GetPlayersInSceneResponse.common:type_name -> greatestworks.common.CommonResponse
	36, // 25: greatestworks.scene.GetPlayersInSceneResponse.players:type_name -> greatestworks.scene.ScenePlayer
	62, // 26: greatestworks.scene.GetPlayersInSceneResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	3,  // 27: greatestworks.scene.GetSceneObjectsRequest.object_type:type_name -> greatestworks.scene.ObjectType
	60, // 28: greatestworks.scene.GetSceneObjectsRequest.center_position:type_name -> greatestworks.common.Position
	61, // 29: greatestworks.scene.GetSceneObjectsResponse.common:type_name -> greatestworks.common.CommonResponse
	37, // 30: greatestworks.scene.GetSceneObjectsResponse.objects:type_name -> greatestworks.scene.SceneObject
	49, // 31: greatestworks.scene.TriggerSceneEventRequest.event_data:type_name -> greatestworks.scene.TriggerSceneEventRequest.EventDataEntry
	61, // 32: greatestworks.scene.TriggerSceneEventResponse.common:type_name -> greatestworks.common.CommonResponse
	41, // 33: greatestworks.scene.TriggerSceneEventResponse.event:type_name -> greatestworks.scene.SceneEvent
	42, // 34: greatestworks.scene.TriggerSceneEventResponse.effects:type_name -> greatestworks.scene.SceneEventEffect
	0,  // 35: greatestworks.scene.GetAvailableScenesRequest.scene_type:type_name -> greatestworks.scene.SceneType
	61, // 36: greatestworks.scene.GetAvailableScenesResponse.common:type_name -> greatestworks.common.CommonResponse
	35, // 37: greatestworks.scene.GetAvailableScenesResponse.scenes:type_name -> greatestworks.scene.SceneInfo
	62, // 38: greatestworks.scene.GetAvailableScenesResponse.pagination:type_name -> greatestworks.common.PaginationInfo
	61, // 39: greatestworks.scene.TeleportToSceneResponse.common:type_name -> greatestworks.common.CommonResponse
	60, // 40: greatestworks.scene.TeleportToSceneResponse.spawn_position:type_name -> greatestworks.common.Position
	7,  // 41: greatestworks.scene.SetWeatherRequest.weather_type:type_name -> greatestworks.scene.WeatherType
	61, // 42: greatestworks.scene.SetWeatherResponse.common:type_name -> greatestworks.common.CommonResponse
	38, // 43: greatestworks.scene.SetWeatherResponse.new_environment:type_name -> greatestworks.scene.SceneEnvironment
	61, // 44: greatestworks.scene.GetSceneStatsResponse.common:type_name -> greatestworks.common.CommonResponse
	46, // 45: greatestworks.scene.GetSceneStatsResponse.stats:type_name -> greatestworks.scene.SceneStats
	0,  // 46: greatestworks.scene.SceneInfo.scene_type:type_name -> greatestworks.scene.SceneType
	1,  // 47: greatestworks.scene.SceneInfo.status:type_name -> greatestworks.scene.SceneStatus
	60, // 48: greatestworks.scene.SceneInfo.spawn_point:type_name -> greatestworks.common.Position
	39, // 49: greatestworks.scene.SceneInfo.teleport_points:type_name -> greatestworks.scene.TeleportPoint
	40, // 50: greatestworks.scene.SceneInfo.settings:type_name -> greatestworks.scene.SceneSettings
	50, // 51: greatestworks.scene.SceneInfo.metadata:type_name -> greatestworks.scene.SceneInfo.MetadataEntry
	60, // 52: greatestworks.scene.ScenePlayer.position:type_name -> greatestworks.common.Position
	2,  // 53: greatestworks.scene.ScenePlayer.state:type_name -> greatestworks.scene.PlayerState
	51, // 54: greatestworks.scene.ScenePlayer.player_data:type_name -> greatestworks.scene.ScenePlayer.PlayerDataEntry
	3,  // 55: greatestworks.scene.SceneObject.object_type:type_name -> greatestworks.scene.ObjectType
	4,  // 56: greatestworks.scene.SceneObject.state:type_name -> greatestworks.scene.ObjectState
	60, // 57: greatestworks.scene.SceneObject.position:type_name -> greatestworks.common.Position
	5,  // 58: greatestworks.scene.SceneObject.available_interactions:type_name -> greatestworks.scene.InteractionType
	52, // 59: greatestworks.scene.SceneObject.properties:type_name -> greatestworks.scene.SceneObject.PropertiesEntry
	7,  // 60: greatestworks.scene.SceneEnvironment.weather:type_name -> greatestworks.scene.WeatherType
	8,  // 61: greatestworks.scene.SceneEnvironment.time_of_day:type_name -> greatestworks.scene.TimeOfDay
	45, // 62: greatestworks.scene.SceneEnvironment.effects:type_name -> greatestworks.scene.EnvironmentalEffect
	53, // 63: greatestworks.scene.SceneEnvironment.custom_settings:type_name -> greatestworks.scene.SceneEnvironment.CustomSettingsEntry
	60, // 64: greatestworks.scene.TeleportPoint.position:type_name -> greatestworks.common.Position
	54, // 65: greatestworks.scene.SceneSettings.movement_modifiers:type_name -> greatestworks.scene.SceneSettings.MovementModifiersEntry
	9,  // 66: greatestworks.scene.SceneEvent.event_type:type_name -> greatestworks.scene.EventType
	60, // 67: greatestworks.scene.SceneEvent.location:type_name -> greatestworks.common.Position
	55, // 68: greatestworks.scene.SceneEvent.event_data:type_name -> greatestworks.scene.SceneEvent.EventDataEntry
	10, // 69: greatestworks.scene.SceneEventEffect.effect_type:type_name -> greatestworks.scene.EffectType
	56, // 70: greatestworks.scene.SceneEventEffect.parameters:type_name -> greatestworks.scene.SceneEventEffect.ParametersEntry
	44, // 71: greatestworks.scene.InteractionResult.rewards:type_name -> greatestworks.scene.ItemReward
	4,  // 72: greatestworks.scene.InteractionResult.new_object_state:type_name -> greatestworks.scene.ObjectState
	57, // 73: greatestworks.scene.InteractionResult.result_data:type_name -> greatestworks.scene.InteractionResult.ResultDataEntry
	63, // 74: greatestworks.scene.ItemReward.rarity:type_name -> greatestworks.common.ItemRarity
	10, // 75: greatestworks.scene.EnvironmentalEffect.effect_type:type_name -> greatestworks.scene.EffectType
	58, // 76: greatestworks.scene.EnvironmentalEffect.parameters:type_name -> greatestworks.scene.EnvironmentalEffect.ParametersEntry
	59, // 77: greatestworks.scene.SceneStats.popular_areas:type_name -> greatestworks.scene.SceneStats.PopularAreasEntry
	11, // 78: greatestworks.scene.SceneService.EnterScene:input_type -> greatestworks.scene.EnterSceneRequest
	13, // 79: greatestworks.scene.SceneService.LeaveScene:input_type -> greatestworks.scene.LeaveSceneRequest
	15, // 80: greatestworks.scene.SceneService.GetSceneInfo:input_type -> greatestworks.scene.GetSceneInfoRequest
	17, // 81: greatestworks.scene.SceneService.MoveToPosition:input_type -> greatestworks.scene.MoveToPositionRequest
	19, // 82: greatestworks.scene.SceneService.InteractWithObject:input_type -> greatestworks.scene.InteractWithObjectRequest
	21, // 83: greatestworks.scene.SceneService.GetPlayersInScene:input_type -> greatestworks.scene.GetPlayersInSceneRequest
	23, // 84: greatestworks.scene.SceneService.GetSceneObjects:input_type -> greatestworks.scene.GetSceneObjectsRequest
	25, // 85: greatestworks.scene.SceneService.TriggerSceneEvent:input_type -> greatestworks.scene.TriggerSceneEventRequest
	27, // 86: greatestworks.scene.SceneService.GetAvailableScenes:input_type -> greatestworks.scene.GetAvailableScenesRequest
	29, // 87: greatestworks.scene.SceneService.TeleportToScene:input_type -> greatestworks.scene.TeleportToSceneRequest
	31, // 88: greatestworks.scene.SceneService.SetWeather:input_type -> greatestworks.scene.SetWeatherRequest
	33, // 89: greatestworks.scene.SceneService.GetSceneStats:input_type -> greatestworks.scene.GetSceneStatsRequest
	12, // 90: greatestworks.scene.SceneService.EnterScene:output_type -> greatestworks.scene.EnterSceneResponse
	14, // 91: greatestworks.scene.SceneService.LeaveScene:output_type -> greatestworks.scene.LeaveSceneResponse
	16, // 92: greatestworks.scene.SceneService.GetSceneInfo:output_type -> greatestworks.scene.GetSceneInfoResponse
	18, // 93: greatestworks.scene.SceneService.MoveToPosition:output_type -> greatestworks.scene.MoveToPositionResponse
	20, // 94: greatestworks.scene.SceneService.InteractWithObject:output_type -> greatestworks.scene.InteractWithObjectResponse
	22, // 95: greatestworks.scene.SceneService.GetPlayersInScene:output_type -> greatestworks.scene.GetPlayersInSceneResponse
	24, // 96: greatestworks.scene.SceneService.GetSceneObjects:output_type -> greatestworks.scene.GetSceneObjectsResponse
	26, // 97: greatestworks.scene.SceneService.TriggerSceneEvent:output_type -> greatestworks.scene.TriggerSceneEventResponse
	28, // 98: greatestworks.scene.SceneService.GetAvailableScenes:output_type -> greatestworks.scene.GetAvailableScenesResponse
	30, // 99: greatestworks.scene.SceneService.TeleportToScene:output_type -> greatestworks.scene.TeleportToSceneResponse
	32, // 100: greatestworks.scene.SceneService.SetWeather:output_type -> greatestworks.scene.SetWeatherResponse
	34, // 101: greatestworks.scene.SceneService.GetSceneStats:output_type -> greatestworks.scene.GetSceneStatsResponse
	90, // [90:102] is the sub-list for method output_type
	78, // [78:90] is the sub-list for method input_type
	78, // [78:78] is the sub-list for extension type_name
	78, // [78:78] is the sub-list for extension extendee
	0,  // [0:78] is the sub-list for field type_name
}

func init() { file_proto_scene_proto_init() }
func file_proto_scene_proto_init() {
	if File_proto_scene_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_scene_proto_rawDesc), len(file_proto_scene_proto_rawDesc)),
			NumEnums:      11,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_scene_proto_goTypes,
		DependencyIndexes: file_proto_scene_proto_depIdxs,
		EnumInfos:         file_proto_scene_proto_enumTypes,
		MessageInfos:      file_proto_scene_proto_msgTypes,
	}.Build()
	File_proto_scene_proto = out.File
	file_proto_scene_proto_goTypes = nil
	file_proto_scene_proto_depIdxs = nil
}
